rst/fetch/trap/dma			00		1		 NOP 		 1
setptb			01		1		 NOP 		 1
pagemap			02		1		 NOP 		 1
store			03		1		 NOP 		 1
load			04		1		 NOP 		 1
syscall * 			05		2		 NOP 		 1
sysret - paging_off			06		1		 NOP 		 1
call {*  , [a + *  ]}			07		5		 NOP 		 1
call a - supcpy			08		1		 NOP 		 1
ret - paging_on			09		1		 NOP 		 1
jmp {*  , [u16 + al]}			0A		3		 NOP 		 1
jmp {a, [*   + bl]}			0B		3		 NOP 		 1
lodstat - sti			0C		1		 NOP 		 1
stostat - cli			0D		1		 NOP 		 1
lodflgs - lodmsks			0E		1		 NOP 		 1
stoflgs - stomsks			0F		1		 NOP 		 1
mov a, *   - cla			10		3		 NOP 		 1
mov a, {b, pc}			11		1		 NOP 		 1
mov a, {c, g}			12		1		 NOP 		 1
mov a, d			13		1		 NOP 		 1
mov a, [*  ]			14		3		 NOP 		 1
mov a, [d]			15		1		 NOP 		 1
mov a, [d + *  ]			16		3		 NOP 		 1
mov a, [{bp, sp} + *  ]			17		3		 NOP 		 1
mov a, [{bp, sp} + d]			18		1		 NOP 		 1
mov al, * 			19		2		 NOP 		 1
mov al, {ah, gl}			1A		1		 NOP 		 1
mov al, {bl, gh}			1B		1		 NOP 		 1
mov al, bh			1C		1		 NOP 		 1
mov al, [*  ]			1D		3		 NOP 		 1
mov al, [d]			1E		1		 NOP 		 1
mov al, [d + *  ]			1F		3		 NOP 		 1
mov al, [{bp, sp} + *  ]			20		3		 NOP 		 1
mov al, [{bp, sp} + d]			21		1		 NOP 		 1
mov ah, * 			22		2		 NOP 		 1
mov ah, {al, gl}			23		1		 NOP 		 1
mov ah, {bl, gh}			24		1		 NOP 		 1
mov ah, bh			25		1		 NOP 		 1
mov b, *  			26		3		 NOP 		 1
mov b, {a, g}			27		1		 NOP 		 1
mov b, c			28		1		 NOP 		 1
mov b, [*  ]			29		3		 NOP 		 1
mov b, [d]			2A		1		 NOP 		 1
mov b, [d + *  ]			2B		3		 NOP 		 1
mov b, [{bp, sp} + *  ]			2C		3		 NOP 		 1
mov b, d			2D		1		 NOP 		 1
mov bl, * 			2E		2		 NOP 		 1
mov bl, {al, gl}			2F		1		 NOP 		 1
mov bl, {bh, gh}			30		1		 NOP 		 1
mov bl, [*  ]			31		3		 NOP 		 1
mov bl, [d]			32		1		 NOP 		 1
mov bl, [d + *  ]			33		3		 NOP 		 1
mov bl, [{bp, sp} + *  ]			34		3		 NOP 		 1
mov bl, [{bp, sp} + d]			35		1		 NOP 		 1
mov bh, {al, gl}			36		1		 NOP 		 1
mov bh, {bl, gh}			37		1		 NOP 		 1
mov c, {*  , g}			38		3		 NOP 		 1
mov c, {a, b}			39		1		 NOP 		 1
mov cl, {* , gl}			3A		2		 NOP 		 1
mov d, {*  , g}			3B		3		 NOP 		 1
mov d, {a, c}			3C		1		 NOP 		 1
mov [*  ], {al, bl}			3D		3		 NOP 		 1
mov [d], {al, bl}			3E		1		 NOP 		 1
mov [d + *  ], {al, bl}			3F		3		 NOP 		 1
mov [{bp, sp} + *  ], al			40		3		 NOP 		 1
mov [{bp, sp} + d], al			41		1		 NOP 		 1
mov [*  ], {a, b}			42		3		 NOP 		 1
mov [d], {a, b}			43		1		 NOP 		 1
mov [d + *  ], {a, b}			44		3		 NOP 		 1
mov [{bp, sp} + *  ], a			45		3		 NOP 		 1
mov [{bp, sp} + d], a			46		1		 NOP 		 1
mov sp, {a, *  }			47		3		 NOP 		 1
mov a, sp			48		1		 NOP 		 1
mov bp, {a, *  }			49		3		 NOP 		 1
mov a, bp - cmc			4A		1		 NOP 		 1
pusha			4B		1		 NOP 		 1
popa			4C		1		 NOP 		 1
mov si, {a, *  }			4D		3		 NOP 		 1
mov a, si - mov si, d			4E		1		 NOP 		 1
mov di, {a, *  }			4F		3		 NOP 		 1
mov a, di - mov di, d			50		1		 NOP 		 1
add sp, *   - inc sp			51		3		 NOP 		 1
sub sp, *   - dec sp			52		3		 NOP 		 1
add a, *   - stc			53		3		 NOP 		 1
add a, b   - clc			54		1		 NOP 		 1
add b, *   - add a, c			55		3		 NOP 		 1
add b, a   - add a, d			56		1		 NOP 		 1
add c, *   - add b, c			57		3		 NOP 		 1
add d, *   - add b, d			58		3		 NOP 		 1
add d, a   - add c, a			59		1		 NOP 		 1
add d, b   - add c, b			5A		1		 NOP 		 1
adc a, *   - add c, d			5B		3		 NOP 		 1
adc a, b   - add d, c			5C		1		 NOP 		 1
adc b, *   - sub a, c			5D		3		 NOP 		 1
adc c, *   - sub a, d			5E		3		 NOP 		 1
sub a, *   - sub b, a			5F		3		 NOP 		 1
sub a, b   - sub b, c			60		1		 NOP 		 1
sub b, *   - sub b, d			61		3		 NOP 		 1
sub c, *   - sub c, a			62		3		 NOP 		 1
sub d, *   - sub c, b			63		3		 NOP 		 1
sub d, a   - sub c, d			64		1		 NOP 		 1
sub d, b   - sub d, c			65		1		 NOP 		 1
sbb a, *   - add al, ah			66		3		 NOP 		 1
sbb a, b   - add al, bh			67		1		 NOP 		 1
sbb b, *   - add al, cl			68		3		 NOP 		 1
sbb c, *   - add al, ch			69		3		 NOP 		 1
add al, *  - add al, dl			6A		2		 NOP 		 1
add al, bl - add al, dh			6B		1		 NOP 		 1
add bl, *  - add bl, al			6C		2		 NOP 		 1
add cl, *  - add bl, ah			6D		2		 NOP 		 1
add ch, *  - add cl, al			6E		2		 NOP 		 1
sub al, *  - add cl, ah			6F		2		 NOP 		 1
sub al, bl			70		1		 NOP 		 1
sub cl, * 			71		2		 NOP 		 1
sub ch, * 			72		2		 NOP 		 1
dec ah			73		1		 NOP 		 1
mov d, b			74		1		 NOP 		 1
inc ah			75		1		 NOP 		 1
cmp ah, * 			76		2		 NOP 		 1
inc {a, b}			77		1		 NOP 		 1
inc c  - mov g, a			78		1		 NOP 		 1
inc d  - mov g, b			79		1		 NOP 		 1
inc al - mov g, c			7A		1		 NOP 		 1
inc cl - mov g, d			7B		1		 NOP 		 1
inc ch - mov g, si			7C		1		 NOP 		 1
dec {a, b}			7D		1		 NOP 		 1
dec c - mov g, di			7E		1		 NOP 		 1
dec d			7F		1		 NOP 		 1
dec al			80		1		 NOP 		 1
dec cl			81		1		 NOP 		 1
dec ch			82		1		 NOP 		 1
mov cl, {al, gh}			83		1		 NOP 		 1
mov al, cl - nand al, * 			84		2		 NOP 		 1
and a, *   - nand a, u16			85		3		 NOP 		 1
and a, b   - nand a, b			86		1		 NOP 		 1
and al, *  - and bl, u8			87		2		 NOP 		 1
and al, bl - nand al, bl			88		1		 NOP 		 1
or a, *    - nor a, u16			89		3		 NOP 		 1
or a, b    - nor a, b			8A		1		 NOP 		 1
or al, *   - or bl, u8			8B		2		 NOP 		 1
or al, bl  - nor al, bl			8C		1		 NOP 		 1
xor a, *   - nor al, * 			8D		4		 NOP 		 1
xor a, b    - ashr b, cl			8E		1		 NOP 		 1
xor al, *   - ashr bl, cl			8F		2		 NOP 		 1
xor al, bl  - ashr b, * 			90		2		 NOP 		 1
test a, *   - ashr bl, * 			91		4		 NOP 		 1
test a, b			92		1		 NOP 		 1
test al, *  - test bl, u8			93		2		 NOP 		 1
test al, bl - test cl, * 			94		2		 NOP 		 1
not a  - neg a			95		1		 NOP 		 1
not al - neg al			96		1		 NOP 		 1
not b  - neg b			97		1		 NOP 		 1
not bl - neg bl			98		1		 NOP 		 1
mov bl, ah - shl a			99		1		 NOP 		 1
mov bh, ah - shl al			9A		1		 NOP 		 1
mov bp, sp - shr a			9B		1		 NOP 		 1
mov sp, bp - shr al			9C		1		 NOP 		 1
shl a, {cl, * }			9D		2		 NOP 		 1
shl al, {cl, * }			9E		2		 NOP 		 1
shl b, {cl, * }			9F		2		 NOP 		 1
shl bl, {cl, * }			A0		2		 NOP 		 1
shr a, {cl, * }			A1		2		 NOP 		 1
shr al, {cl, * }			A2		2		 NOP 		 1
shr b, {cl, * }			A3		2		 NOP 		 1
shr bl, {cl, * }			A4		2		 NOP 		 1
ashr a, {cl, * }			A5		2		 NOP 		 1
ashr al, {cl, * }			A6		2		 NOP 		 1
mov bh, * 			A7		2		 NOP 		 1
mov al, ch			A8		1		 NOP 		 1
loopc *   - loopb u16			A9		3		 NOP 		 1
snex a - swp A			AA		1		 NOP 		 1
snex b - swp B			AB		1		 NOP 		 1
mul a, {b, c}			AC		1		 NOP 		 1
mul al, bl			AD		1		 NOP 		 1
div a, b			AE		1		 NOP 		 1
cmp a, *  			AF		3		 NOP 		 1
cmp a, b			B0		1		 NOP 		 1
cmp a, c			B1		1		 NOP 		 1
cmp a, d			B2		1		 NOP 		 1
cmp word[*  ], u16			B3		3		 NOP 		 1
cmp word[d], *  			B4		3		 NOP 		 1
cmp word[d + *  ], *  			B5		5		 NOP 		 1
cmp word[{bp,sp}+*  ], *  			B6		5		 NOP 		 1
mov a, [a + *  ]			B7		3		 NOP 		 1
mov word[*  ], u16			B8		3		 NOP 		 1
cmp al, * 			B9		2		 NOP 		 1
cmp al, bl			BA		1		 NOP 		 1
cmp al, cl			BB		1		 NOP 		 1
cmp byte[*  ], * 			BC		4		 NOP 		 1
cmp byte[d], * 			BD		2		 NOP 		 1
cmp byte[d + *  ], * 			BE		4		 NOP 		 1
cmp byte[{bp,sp}+*  ], * 			BF		4		 NOP 		 1
cmp b, *   - cmp b, c			C0		3		 NOP 		 1
cmp bl, * 			C1		2		 NOP 		 1
cmp c, *  			C2		3		 NOP 		 1
cmp cl, *  - add byte [*  ], i8			C3		4		 NOP 		 1
cmp ch, *  - add byte [d], i8			C4		2		 NOP 		 1
cmp d, *   - add byte [d+i16], * 			C5		4		 NOP 		 1
jz *       - add byte [bp+*  ], * 			C6		6		 NOP 		 1
jnz *      - add byte [sp+*  ], * 			C7		6		 NOP 		 1
jc/jlu *   - add word [u16], *  			C8		5		 NOP 		 1
jnc/jgeu *   - add word [d], *  			C9		5		 NOP 		 1
jneg *   - add word [d+*  ], i16			CA		5		 NOP 		 1
jpos *   - add word [bp+*  ], i16			CB		5		 NOP 		 1
jl *   - add word [sp+*  ], i16			CC		5		 NOP 		 1
jle *   - sub byte [u16], * 			CD		4		 NOP 		 1
jg *   - sub byte [d], * 			CE		4		 NOP 		 1
jge *   - sub byte [d+*  ], * 			CF		6		 NOP 		 1
jleu *   - sub byte [bp+*  ], * 			D0		6		 NOP 		 1
jgu *   - sub byte [sp+*  ], * 			D1		6		 NOP 		 1
push bp - sub word [*  ], *  			D2		5		 NOP 		 1
add si, *   - sub word [d], i16			D3		3		 NOP 		 1
add di, *   - sub word [d+i16], i16			D4		3		 NOP 		 1
sub si, *   - sub word [bp+i16], i16			D5		3		 NOP 		 1
sub di, *   - sub word [sp+i16], i16			D6		3		 NOP 		 1
push {a, word *  }			D7		3		 NOP 		 1
push {b, g}			D8		1		 NOP 		 1
push c			D9		1		 NOP 		 1
push d			DA		1		 NOP 		 1
push {al, byte * }			DB		2		 NOP 		 1
push ah			DC		1		 NOP 		 1
push bl			DD		1		 NOP 		 1
push bh - rol a, cl			DE		1		 NOP 		 1
push cl - rol al, cl			DF		1		 NOP 		 1
push ch - rlc a, cl			E0		1		 NOP 		 1
pushf   - rlc al, cl			E1		1		 NOP 		 1
push si - ror a, cl			E2		1		 NOP 		 1
push di - ror al, cl			E3		1		 NOP 		 1
pop a   - rrc a, cl			E4		1		 NOP 		 1
pop b   - rrc al, cl			E5		1		 NOP 		 1
pop c   - rol b, cl			E6		1		 NOP 		 1
pop d   - rol bl, cl			E7		1		 NOP 		 1
pop al  - rlc b, cl			E8		1		 NOP 		 1
pop ah  - rlc bl, cl			E9		1		 NOP 		 1
pop bl  - ror b, cl			EA		1		 NOP 		 1
pop bh  - ror bl, cl			EB		1		 NOP 		 1
pop cl  - rrc b, cl			EC		1		 NOP 		 1
pop ch  - rrc bl, cl			ED		1		 NOP 		 1
popf			EE		1		 NOP 		 1
pop si			EF		1		 NOP 		 1
pop di
			F0		1		 NOP 		 1
pop {bp, g}			F1		1		 NOP 		 1
mov byte[*  ], * 			F2		4		 NOP 		 1
{repz} cmpsb			F3		1		 NOP 		 1
scansb			F4		1		 NOP 		 1
{rep} movsb			F5		1		 NOP 		 1
lodsb - repnz cmpsb			F6		1		 NOP 		 1
{rep} stosb			F7		1		 NOP 		 1
enter *   - lea d, [bp + A*2^*  + B]			F8		4		 NOP 		 1
leave - lea d, [*   + A*2^*  + B]			F9		4		 NOP 		 1
lea d, [{bp, sp} + *  ]			FA		3		 NOP 		 1
lea d, [si + *  ]			FB		3		 NOP 		 1
lea d, [di + *  ]			FC		3		 NOP 		 1
esc * 			FD		2		 NOP 		 1
nop - strcmp			FE		1		 NOP 		 1
halt			FF		1		 NOP 		 1
