0001   0000             .include "kernel.exp"
0001+  0000             PROC_TEXT_ORG    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_IDE          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_fileio       .EQU  $0004
0007+  0000             sys_fork         .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pauseproc    .EQU  $0009
0012+  0000             sys_resumeproc   .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0002   0000             
0003   0400             .org PROC_TEXT_ORG			; origin at 1024
0004   0400             
0005   0400             main:
0006   0400 07 E6 04    	call init_board
0007   0403 07 0F 05    	call init_board2
0008   0406 19 00       	mov al, 0
0009   0408 3D B7 05    	mov [parity], al
0010   040B             main_loop:
0011   040B             
0012   040B 10 01 00    	mov a, 1
0013   040E 42 B3 05    	mov [line], a
0014   0411 42 B5 05    	mov [col], a
0015   0414             board_lines:;{
0016   0414 10 01 00    	mov a, 1
0017   0417 42 B5 05    	mov [col], a
0018   041A             board_cols:;{
0019   041A 07 70 04    	call update_cell
0020   041D 14 B5 05    	mov a, [col]
0021   0420 77          	inc a
0022   0421 42 B5 05    	mov [col], a
0023   0424 AF 7F 00    	cmp a, width-1
0024   0427 C7 1A 04    	jne board_cols
0025   042A             ;}	
0026   042A 14 B3 05    	mov a, [line]
0027   042D 77          	inc a
0028   042E 42 B3 05    	mov [line], a
0029   0431 AF 2F 00    	cmp a, height-1
0030   0434 C7 14 04    	jne board_lines
0031   0437             ;}
0032   0437             	
0033   0437 3B B8 05    	mov d, s_clear
0034   043A 07 FF 07    	call puts
0035   043D 07 B0 04    	call print_board
0036   0440             	
0037   0440 1D B7 05    	mov al, [parity]
0038   0443 96          	not al
0039   0444 3D B7 05    	mov [parity], al
0040   0447             	
0041   0447 0A 0B 04    	jmp main_loop
0042   044A             
0043   044A             check_parity_inv:
0044   044A D7          	push a
0045   044B 1D B7 05    	mov al, [parity]
0046   044E B9 00       	cmp al, 0
0047   0450 C6 58 04    	je parity_inv_even
0048   0453 3B 37 09    	mov d, board
0049   0456 E4          	pop a
0050   0457 09          	ret
0051   0458             parity_inv_even:
0052   0458 3B 37 09    	mov d, board
0053   045B E4          	pop a
0054   045C 09          	ret
0055   045D             
0056   045D             check_parity:
0057   045D D7          	push a
0058   045E 1D B7 05    	mov al, [parity]
0059   0461 B9 00       	cmp al, 0
0060   0463 C6 6B 04    	je parity_even
0061   0466 3B 37 09    	mov d, board
0062   0469 E4          	pop a
0063   046A 09          	ret
0064   046B             parity_even:
0065   046B 3B 37 09    	mov d, board
0066   046E E4          	pop a
0067   046F 09          	ret
0068   0470             
0069   0470             update_cell:
0070   0470 29 B3 05    	mov b, [line]
0071   0473 10 80 00    	mov a, width
0072   0476 AC          	mul a, b
0073   0477 14 B5 05    	mov a, [col]
0074   047A 56          	add b, a
0075   047B D8          	push b				; save cell number
0076   047C 07 5D 04    	call check_parity
0077   047F 5A          	add d, b
0078   0480 1E          	mov al, [d]
0079   0481 B9 2A       	cmp al, '*'
0080   0483 C6 98 04    	je live_cell
0081   0486 E4          	pop a
0082   0487 07 38 05    	call get_live_neighbours
0083   048A C0 03 00    	cmp b, 3
0084   048D C7 97 04    	jne update_cell_end
0085   0490 07 4A 04    	call check_parity_inv
0086   0493 59          	add d, a
0087   0494 19 2A       	mov al, '*'
0088   0496 3E          	mov [d], al
0089   0497             update_cell_end:
0090   0497 09          	ret
0091   0498             live_cell:
0092   0498 E4          	pop a
0093   0499 07 38 05    	call get_live_neighbours
0094   049C C0 02 00    	cmp b, 2
0095   049F C6 97 04    	je update_cell_end	; continue alive
0096   04A2 C0 03 00    	cmp b, 3
0097   04A5 C6 97 04    	je update_cell_end	; continue alive
0098   04A8 07 4A 04    	call check_parity_inv
0099   04AB 59          	add d, a
0100   04AC 19 20       	mov al, ' '
0101   04AE 3E          	mov [d], al
0102   04AF 09          	ret
0103   04B0             
0104   04B0             print_board:
0105   04B0 10 00 00    	mov a, 0
0106   04B3 42 B1 05    	mov [c], a
0107   04B6 42 AF 05    	mov [l], a
0108   04B9 07 4A 04    	call check_parity_inv
0109   04BC             print_L0:
0110   04BC 1E          	mov al, [d]
0111   04BD 23          	mov ah, al
0112   04BE 07 CA 06    	call putchar
0113   04C1 79          	inc d
0114   04C2 14 B1 05    	mov a, [c]
0115   04C5 77          	inc a
0116   04C6 42 B1 05    	mov [c], a
0117   04C9 AF 80 00    	cmp a, width
0118   04CC C7 BC 04    	jne print_L0
0119   04CF 07 AC 07    	call printnl
0120   04D2 10 00 00    	mov a, 0
0121   04D5 42 B1 05    	mov [c], a
0122   04D8 14 AF 05    	mov a, [l]
0123   04DB 77          	inc a
0124   04DC 42 AF 05    	mov [l], a
0125   04DF AF 30 00    	cmp a, height
0126   04E2 C7 BC 04    	jne print_L0
0127   04E5 09          	ret
0128   04E6             
0129   04E6             init_board:
0130   04E6 3B 37 09    	mov d, board
0131   04E9 26 00 00    	mov b, 0
0132   04EC             init_L0:
0133   04EC 1B          	mov al, bl
0134   04ED 87 05       	and al, 5
0135   04EF B9 05       	cmp al, 5
0136   04F1 C6 02 05    	je init_odd
0137   04F4 19 2A       	mov al, '*'
0138   04F6 3E          	mov [d], al
0139   04F7 79          	inc d
0140   04F8 FD 77       	inc b
0141   04FA 78          	inc c
0142   04FB C0 00 18    	cmp b, width*height
0143   04FE C7 EC 04    	jne init_L0
0144   0501 09          	ret
0145   0502             init_odd:
0146   0502 19 20       	mov al, ' '
0147   0504 3E          	mov [d], al
0148   0505 79          	inc d
0149   0506 FD 77       	inc b
0150   0508 C0 00 18    	cmp b, width*height
0151   050B C7 EC 04    	jne init_L0
0152   050E 09          	ret
0153   050F             
0154   050F             init_board2:
0155   050F 3B 37 21    	mov d, board2
0156   0512 26 00 00    	mov b, 0
0157   0515             init_L02:
0158   0515 1B          	mov al, bl
0159   0516 87 05       	and al, 5
0160   0518 B9 05       	cmp al, 5
0161   051A C6 2B 05    	je init_odd2
0162   051D 19 2A       	mov al, '*'
0163   051F 3E          	mov [d], al
0164   0520 79          	inc d
0165   0521 FD 77       	inc b
0166   0523 78          	inc c
0167   0524 C0 00 18    	cmp b, width*height
0168   0527 C7 15 05    	jne init_L02
0169   052A 09          	ret
0170   052B             init_odd2:
0171   052B 19 20       	mov al, ' '
0172   052D 3E          	mov [d], al
0173   052E 79          	inc d
0174   052F FD 77       	inc b
0175   0531 C0 00 18    	cmp b, width*height
0176   0534 C7 15 05    	jne init_L02
0177   0537 09          	ret
0178   0538             ; find total neighbours at a point
0179   0538             ; A = position
0180   0538             ; B = result
0181   0538             get_live_neighbours:
0182   0538 D7          	push a
0183   0539 DA          	push d
0184   053A D9          	push c
0185   053B 38 00 00    	mov c, 0	; reset number
0186   053E             
0187   053E 07 5D 04    	call check_parity
0188   0541 59          	add d, a
0189   0542 63 81 00    	sub d, width+1
0190   0545 32          	mov bl, [d]
0191   0546 C1 2A       	cmp bl, '*'
0192   0548 C7 4C 05    	jne jmp1
0193   054B 78          	inc c
0194   054C             jmp1:
0195   054C 07 5D 04    	call check_parity
0196   054F 59          	add d, a
0197   0550 63 80 00    	sub d, width
0198   0553 32          	mov bl, [d]
0199   0554 C1 2A       	cmp bl, '*'
0200   0556 C7 5A 05    	jne jmp2
0201   0559 78          	inc c
0202   055A             jmp2:
0203   055A 07 5D 04    	call check_parity
0204   055D 59          	add d, a
0205   055E 63 7F 00    	sub d, width-1
0206   0561 32          	mov bl, [d]
0207   0562 C1 2A       	cmp bl, '*'
0208   0564 C7 68 05    	jne jmp3
0209   0567 78          	inc c
0210   0568             jmp3:
0211   0568 07 5D 04    	call check_parity
0212   056B 59          	add d, a
0213   056C 79          	inc d 
0214   056D 32          	mov bl, [d]
0215   056E C1 2A       	cmp bl, '*'
0216   0570 C7 74 05    	jne jmp4
0217   0573 78          	inc c
0218   0574             jmp4:
0219   0574 07 5D 04    	call check_parity
0220   0577 59          	add d, a
0221   0578 58 81 00    	add d, width+1
0222   057B 32          	mov bl, [d]
0223   057C C1 2A       	cmp bl, '*'
0224   057E C7 82 05    	jne jmp5
0225   0581 78          	inc c
0226   0582             jmp5:
0227   0582 07 5D 04    	call check_parity
0228   0585 59          	add d, a
0229   0586 58 80 00    	add d, width
0230   0589 32          	mov bl, [d]
0231   058A C1 2A       	cmp bl, '*'
0232   058C C7 90 05    	jne jmp6
0233   058F 78          	inc c
0234   0590             jmp6:
0235   0590 07 5D 04    	call check_parity
0236   0593 59          	add d, a
0237   0594 58 7F 00    	add d, width-1
0238   0597 32          	mov bl, [d]
0239   0598 C1 2A       	cmp bl, '*'
0240   059A C7 9E 05    	jne jmp7
0241   059D 78          	inc c
0242   059E             jmp7:
0243   059E 07 5D 04    	call check_parity
0244   05A1 59          	add d, a
0245   05A2 7F          	dec d
0246   05A3 32          	mov bl, [d]
0247   05A4 C1 2A       	cmp bl, '*'
0248   05A6 C7 AA 05    	jne jmp8
0249   05A9 78          	inc c
0250   05AA             jmp8:
0251   05AA 28          	mov b, c
0252   05AB E6          	pop c
0253   05AC E7          	pop d
0254   05AD E4          	pop a
0255   05AE 09          	ret
0256   05AF             
0257   05AF             width: 			.equ 128
0258   05AF             height:			.equ 48
0259   05AF             
0260   05AF 00 00       l: .dw 0
0261   05B1 00 00       c: .dw 0
0262   05B3             
0263   05B3 01 00       line:	.dw 1
0264   05B5 01 00       col:	.dw 1
0265   05B7             
0266   05B7 00          parity: .db 0
0267   05B8             
0268   05B8 1B 5B 32 4A s_clear:		.db 27, "[2J", 27, "[H", 0
0268   05BC 1B 5B 48 00 
0269   05C0             
0270   05C0             .include "stdio.asm"
0001+  05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0002+  05C0             ; stdio.s
0003+  05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0004+  05C0             .include "string.asm"
0001++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0002++ 05C0             ; string.s
0003++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0004++ 05C0             
0005++ 05C0             
0006++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0007++ 05C0             ; strrev
0008++ 05C0             ; reverse a string
0009++ 05C0             ; D = string address
0010++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0011++ 05C0             ; 01234
0012++ 05C0             strrev:
0013++ 05C0 4B          	pusha
0014++ 05C1 07 07 06    	call strlen	; length in C
0015++ 05C4 12          	mov a, c
0016++ 05C5 AF 01 00    	cmp a, 1
0017++ 05C8 D0 E2 05    	jleu strrev_end	; check string length. string len must be > 1
0018++ 05CB 7D          	dec a
0019++ 05CC FD 4E       	mov si, d	; beginning of string
0020++ 05CE FD 50       	mov di, d	; beginning of string (for destinations)
0021++ 05D0 59          	add d, a	; end of string
0022++ 05D1 12          	mov a, c
0023++ 05D2 FD 9B       	shr a		; divide by 2
0024++ 05D4 39          	mov c, a	; C now counts the steps
0025++ 05D5             strrev_L0:
0026++ 05D5 32          	mov bl, [d]	; save load right-side char into BL
0027++ 05D6 F6          	lodsb		; load left-side char into AL; increase SI
0028++ 05D7 3E          	mov [d], al	; store left char into right side
0029++ 05D8 1B          	mov al, bl
0030++ 05D9 F7          	stosb		; store right-side char into left-side; increase DI
0031++ 05DA 7E          	dec c
0032++ 05DB 7F          	dec d
0033++ 05DC C2 00 00    	cmp c, 0
0034++ 05DF C7 D5 05    	jne strrev_L0
0035++ 05E2             strrev_end:
0036++ 05E2 4C          	popa
0037++ 05E3 09          	ret
0038++ 05E4             	
0039++ 05E4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0040++ 05E4             ; strchr
0041++ 05E4             ; search string in D for char in AL
0042++ 05E4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0043++ 05E4             strchr:
0044++ 05E4             strchr_L0:
0045++ 05E4 32          	mov bl, [d]
0046++ 05E5 C1 00       	cmp bl, 0
0047++ 05E7 C6 F2 05    	je strchr_end
0048++ 05EA BA          	cmp al, bl
0049++ 05EB C6 F2 05    	je strchr_end
0050++ 05EE 79          	inc d
0051++ 05EF 0A E4 05    	jmp strchr_L0
0052++ 05F2             strchr_end:
0053++ 05F2 1B          	mov al, bl
0054++ 05F3 09          	ret
0055++ 05F4             
0056++ 05F4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0057++ 05F4             ; strstr
0058++ 05F4             ; find sub-string
0059++ 05F4             ; str1 in SI
0060++ 05F4             ; str2 in DI
0061++ 05F4             ; SI points to end of source string
0062++ 05F4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0063++ 05F4             strstr:
0064++ 05F4 DB          	push al
0065++ 05F5 DA          	push d
0066++ 05F6 E3          	push di
0067++ 05F7             strstr_loop:
0068++ 05F7 F3          	cmpsb					; compare a byte of the strings
0069++ 05F8 C7 03 06    	jne strstr_ret
0070++ 05FB FC 00 00    	lea d, [di + 0]
0071++ 05FE BD 00       	cmp byte[d], 0				; check if at end of string (null)
0072++ 0600 C7 F7 05    	jne strstr_loop				; equal chars but not at end
0073++ 0603             strstr_ret:
0074++ 0603 F0          	pop di
0075++ 0604 E7          	pop d
0076++ 0605 E8          	pop al
0077++ 0606 09          	ret
0078++ 0607             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0079++ 0607             ; length of null terminated string
0080++ 0607             ; result in C
0081++ 0607             ; pointer in D
0082++ 0607             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0083++ 0607             strlen:
0084++ 0607 DA          	push d
0085++ 0608 38 00 00    	mov c, 0
0086++ 060B             strlen_L1:
0087++ 060B BD 00       	cmp byte [d], 0
0088++ 060D C6 15 06    	je strlen_ret
0089++ 0610 79          	inc d
0090++ 0611 78          	inc c
0091++ 0612 0A 0B 06    	jmp strlen_L1
0092++ 0615             strlen_ret:
0093++ 0615 E7          	pop d
0094++ 0616 09          	ret
0095++ 0617             
0096++ 0617             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0097++ 0617             ; STRCMP
0098++ 0617             ; compare two strings
0099++ 0617             ; str1 in SI
0100++ 0617             ; str2 in DI
0101++ 0617             ; CREATE A STRING COMPAIRON INSTRUCION ?????
0102++ 0617             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0103++ 0617             strcmp:
0104++ 0617 DB          	push al
0105++ 0618 DA          	push d
0106++ 0619 E3          	push di
0107++ 061A E2          	push si
0108++ 061B             strcmp_loop:
0109++ 061B F3          	cmpsb					; compare a byte of the strings
0110++ 061C C7 27 06    	jne strcmp_ret
0111++ 061F FB FF FF    	lea d, [si +- 1]
0112++ 0622 BD 00       	cmp byte[d], 0				; check if at end of string (null)
0113++ 0624 C7 1B 06    	jne strcmp_loop				; equal chars but not at end
0114++ 0627             strcmp_ret:
0115++ 0627 EF          	pop si
0116++ 0628 F0          	pop di
0117++ 0629 E7          	pop d
0118++ 062A E8          	pop al
0119++ 062B 09          	ret
0120++ 062C             
0121++ 062C             
0122++ 062C             ; STRCPY
0123++ 062C             ; copy null terminated string from SI to DI
0124++ 062C             ; source in SI
0125++ 062C             ; destination in DI
0126++ 062C             strcpy:
0127++ 062C E2          	push si
0128++ 062D E3          	push di
0129++ 062E DB          	push al
0130++ 062F             strcpy_L1:
0131++ 062F F6          	lodsb
0132++ 0630 F7          	stosb
0133++ 0631 B9 00       	cmp al, 0
0134++ 0633 C7 2F 06    	jne strcpy_L1
0135++ 0636             strcpy_end:
0136++ 0636 E8          	pop al
0137++ 0637 F0          	pop di
0138++ 0638 EF          	pop si
0139++ 0639 09          	ret
0140++ 063A             
0141++ 063A             ; STRCAT
0142++ 063A             ; concatenate a NULL terminated string into string at DI, from string at SI
0143++ 063A             ; source in SI
0144++ 063A             ; destination in DI
0145++ 063A             strcat:
0146++ 063A E2          	push si
0147++ 063B E3          	push di
0148++ 063C D7          	push a
0149++ 063D DA          	push d
0150++ 063E 50          	mov a, di
0151++ 063F 3C          	mov d, a
0152++ 0640             strcat_goto_end_L1:
0153++ 0640 BD 00       	cmp byte[d], 0
0154++ 0642 C6 49 06    	je strcat_start
0155++ 0645 79          	inc d
0156++ 0646 0A 40 06    	jmp strcat_goto_end_L1
0157++ 0649             strcat_start:
0158++ 0649 FD 50       	mov di, d
0159++ 064B             strcat_L1:
0160++ 064B F6          	lodsb
0161++ 064C F7          	stosb
0162++ 064D B9 00       	cmp al, 0
0163++ 064F C7 4B 06    	jne strcat_L1
0164++ 0652             strcat_end:
0165++ 0652 E7          	pop d
0166++ 0653 E4          	pop a
0167++ 0654 F0          	pop di
0168++ 0655 EF          	pop si
0169++ 0656 09          	ret
0005+  0657             
0006+  0657 30 31 32 33 s_hex_digits:	.db "0123456789ABCDEF"	
0006+  065B 34 35 36 37 
0006+  065F 38 39 41 42 
0006+  0663 43 44 45 46 
0007+  0667             
0008+  0667 01 00       table_power:.dw 1
0009+  0669 0A 00       			.dw 10
0010+  066B 64 00       			.dw 100
0011+  066D E8 03       			.dw 1000
0012+  066F 10 27       			.dw 10000
0013+  0671             
0014+  0671             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0015+  0671             ; CONVERT ASCII 'O'..'F' TO INTEGER 0..15
0016+  0671             ; ASCII in BL
0017+  0671             ; result in AL
0018+  0671             ; ascii for F = 0100 0110
0019+  0671             ; ascii for 9 = 0011 1001
0020+  0671             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0021+  0671             hex_ascii_encode:
0022+  0671 1B          	mov al, bl
0023+  0672 93 40       	test al, $40				; test if letter or number
0024+  0674 C7 7A 06    	jnz hex_letter
0025+  0677 87 0F       	and al, $0F				; get number
0026+  0679 09          	ret
0027+  067A             hex_letter:
0028+  067A 87 0F       	and al, $0F				; get letter
0029+  067C 6A 09       	add al, 9
0030+  067E 09          	ret
0031+  067F             
0032+  067F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0033+  067F             ; ATOI
0034+  067F             ; 2 letter hex string in B
0035+  067F             ; 8bit integer returned in AL
0036+  067F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0037+  067F             atoi:
0038+  067F D8          	push b
0039+  0680 07 71 06    	call hex_ascii_encode			; convert BL to 4bit code in AL
0040+  0683 30          	mov bl, bh
0041+  0684 DB          	push al					; save a
0042+  0685 07 71 06    	call hex_ascii_encode
0043+  0688 EA          	pop bl	
0044+  0689 FD 9E 04    	shl al, 4
0045+  068C 8C          	or al, bl
0046+  068D E5          	pop b
0047+  068E 09          	ret	
0048+  068F             
0049+  068F             
0050+  068F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0051+  068F             ; printf
0052+  068F             ; no need for explanations!
0053+  068F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0054+  068F             printf:
0055+  068F 09          	ret
0056+  0690             
0057+  0690             
0058+  0690             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0059+  0690             ; scanf
0060+  0690             ; no need for explanations!
0061+  0690             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0062+  0690             scanf:
0063+  0690 09          	ret
0064+  0691             
0065+  0691             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0066+  0691             ; ITOA
0067+  0691             ; 8bit value in BL
0068+  0691             ; 2 byte ASCII result in A
0069+  0691             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0070+  0691             itoa:
0071+  0691 DA          	push d
0072+  0692 D8          	push b
0073+  0693 A7 00       	mov bh, 0
0074+  0695 FD A4 04    	shr bl, 4	
0075+  0698 74          	mov d, b
0076+  0699 1F 57 06    	mov al, [d + s_hex_digits]
0077+  069C 23          	mov ah, al
0078+  069D             	
0079+  069D E5          	pop b
0080+  069E D8          	push b
0081+  069F A7 00       	mov bh, 0
0082+  06A1 FD 87 0F    	and bl, $0F
0083+  06A4 74          	mov d, b
0084+  06A5 1F 57 06    	mov al, [d + s_hex_digits]
0085+  06A8 E5          	pop b
0086+  06A9 E7          	pop d
0087+  06AA 09          	ret
0088+  06AB             
0089+  06AB             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0090+  06AB             ; HEX STRING TO BINARY
0091+  06AB             ; di = destination address
0092+  06AB             ; si = source
0093+  06AB             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0094+  06AB             hex_to_int:
0095+  06AB             hex_to_int_L1:
0096+  06AB F6          	lodsb					; load from [SI] to AL
0097+  06AC B9 00       	cmp al, 0				; check if ASCII 0
0098+  06AE C6 BB 06    	jz hex_to_int_ret
0099+  06B1 36          	mov bh, al
0100+  06B2 F6          	lodsb
0101+  06B3 2F          	mov bl, al
0102+  06B4 07 7F 06    	call atoi				; convert ASCII byte in B to int (to AL)
0103+  06B7 F7          	stosb					; store AL to [DI]
0104+  06B8 0A AB 06    	jmp hex_to_int_L1
0105+  06BB             hex_to_int_ret:
0106+  06BB 09          	ret		
0107+  06BC             
0108+  06BC             
0109+  06BC             
0110+  06BC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0111+  06BC             ; GETCHAR
0112+  06BC             ; char in ah
0113+  06BC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0114+  06BC             getchar:
0115+  06BC DB          	push al
0116+  06BD             getchar_retry:
0117+  06BD FD 0C       	sti
0118+  06BF 19 01       	mov al, 1
0119+  06C1 05 03       	syscall sys_io			; receive in AH
0120+  06C3 B9 00       	cmp al, 0			; check if any char was receive
0121+  06C5 C6 BD 06    	je getchar_retry
0122+  06C8 E8          	pop al
0123+  06C9 09          	ret
0124+  06CA             
0125+  06CA             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0126+  06CA             ; PUTCHAR
0127+  06CA             ; char in ah
0128+  06CA             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0129+  06CA             putchar:
0130+  06CA D7          	push a
0131+  06CB 19 00       	mov al, 0
0132+  06CD 05 03       	syscall sys_io			; char in AH
0133+  06CF E4          	pop a
0134+  06D0 09          	ret
0135+  06D1             
0136+  06D1             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0137+  06D1             ;; INPUT A STRING
0138+  06D1             ;; terminates with null
0139+  06D1             ;; pointer in D
0140+  06D1             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0141+  06D1             gets:
0142+  06D1 D7          	push a
0143+  06D2 DA          	push d
0144+  06D3             gets_loop:
0145+  06D3 FD 0C       	sti
0146+  06D5 19 01       	mov al, 1
0147+  06D7 05 03       	syscall sys_io			; receive in AH
0148+  06D9 B9 00       	cmp al, 0				; check error code (AL)
0149+  06DB C6 D3 06    	je gets_loop			; if no char received, retry
0150+  06DE             
0151+  06DE 76 1B       	cmp ah, 27
0152+  06E0 C6 FC 06    	je gets_telnet_escape
0153+  06E3 76 0A       	cmp ah, $0A				; LF
0154+  06E5 C6 55 07    	je gets_end
0155+  06E8 76 5C       	cmp ah, $5C				; '\\'
0156+  06EA C6 2C 07    	je gets_escape
0157+  06ED             	
0158+  06ED 76 08       	cmp ah, $08			; check for backspace
0159+  06EF C6 F8 06    	je gets_backspace
0160+  06F2             
0161+  06F2 1A          	mov al, ah
0162+  06F3 3E          	mov [d], al
0163+  06F4 79          	inc d
0164+  06F5 0A D3 06    	jmp gets_loop
0165+  06F8             gets_backspace:
0166+  06F8 7F          	dec d
0167+  06F9 0A D3 06    	jmp gets_loop
0168+  06FC             gets_telnet_escape:
0169+  06FC FD 0C       	sti
0170+  06FE 19 01       	mov al, 1
0171+  0700 05 03       	syscall sys_io				; receive in AH without echo
0172+  0702 B9 00       	cmp al, 0					; check error code (AL)
0173+  0704 C6 FC 06    	je gets_telnet_escape		; if no char received, retry
0174+  0707 76 5B       	cmp ah, '['
0175+  0709 C7 D3 06    	jne gets_loop
0176+  070C             gets_telnet_escape_phase2:
0177+  070C FD 0C       	sti
0178+  070E 19 01       	mov al, 1
0179+  0710 05 03       	syscall sys_io					; receive in AH without echo
0180+  0712 B9 00       	cmp al, 0						; check error code (AL)
0181+  0714 C6 0C 07    	je gets_telnet_escape_phase2	; if no char received, retry
0182+  0717 76 44       	cmp ah, 'D'
0183+  0719 C6 24 07    	je gets_left_arrow
0184+  071C 76 43       	cmp ah, 'C'
0185+  071E C6 28 07    	je gets_right_arrow
0186+  0721 0A D3 06    	jmp gets_loop
0187+  0724             gets_left_arrow:
0188+  0724 7F          	dec d
0189+  0725 0A D3 06    	jmp gets_loop
0190+  0728             gets_right_arrow:
0191+  0728 79          	inc d
0192+  0729 0A D3 06    	jmp gets_loop
0193+  072C             gets_escape:
0194+  072C FD 0C       	sti
0195+  072E 19 01       	mov al, 1
0196+  0730 05 03       	syscall sys_io			; receive in AH
0197+  0732 B9 00       	cmp al, 0				; check error code (AL)
0198+  0734 C6 2C 07    	je gets_escape			; if no char received, retry
0199+  0737 76 6E       	cmp ah, 'n'
0200+  0739 C6 47 07    	je gets_LF
0201+  073C 76 72       	cmp ah, 'r'
0202+  073E C6 4E 07    	je gets_CR
0203+  0741 1A          	mov al, ah				; if not a known escape, it is just a normal letter
0204+  0742 3E          	mov [d], al
0205+  0743 79          	inc d
0206+  0744 0A D3 06    	jmp gets_loop
0207+  0747             gets_LF:
0208+  0747 19 0A       	mov al, $0A
0209+  0749 3E          	mov [d], al
0210+  074A 79          	inc d
0211+  074B 0A D3 06    	jmp gets_loop
0212+  074E             gets_CR:
0213+  074E 19 0D       	mov al, $0D
0214+  0750 3E          	mov [d], al
0215+  0751 79          	inc d
0216+  0752 0A D3 06    	jmp gets_loop
0217+  0755             gets_end:
0218+  0755 19 00       	mov al, 0
0219+  0757 3E          	mov [d], al				; terminate string
0220+  0758 E7          	pop d
0221+  0759 E4          	pop a
0222+  075A 09          	ret
0223+  075B             
0224+  075B             
0225+  075B             
0226+  075B             
0227+  075B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0228+  075B             ;; INPUT TEXT
0229+  075B             ;; terminated with CTRL+D
0230+  075B             ;; pointer in D
0231+  075B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0232+  075B             gettxt:
0233+  075B D7          	push a
0234+  075C DA          	push d
0235+  075D             gettxt_loop:
0236+  075D 19 01       	mov al, 1
0237+  075F 05 03       	syscall sys_io			; receive in AH
0238+  0761 B9 00       	cmp al, 0				; check error code (AL)
0239+  0763 C6 5D 07    	je gettxt_loop		; if no char received, retry
0240+  0766 76 04       	cmp ah, 4			; EOT
0241+  0768 C6 A6 07    	je gettxt_end
0242+  076B 76 08       	cmp ah, $08			; check for backspace
0243+  076D C6 A2 07    	je gettxt_backspace
0244+  0770 76 5C       	cmp ah, $5C				; '\\'
0245+  0772 C6 7B 07    	je gettxt_escape
0246+  0775 1A          	mov al, ah
0247+  0776 3E          	mov [d], al
0248+  0777 79          	inc d
0249+  0778 0A 5D 07    	jmp gettxt_loop
0250+  077B             gettxt_escape:
0251+  077B 19 01       	mov al, 1
0252+  077D 05 03       	syscall sys_io			; receive in AH
0253+  077F B9 00       	cmp al, 0				; check error code (AL)
0254+  0781 C6 7B 07    	je gettxt_escape		; if no char received, retry
0255+  0784 76 6E       	cmp ah, 'n'
0256+  0786 C6 94 07    	je gettxt_LF
0257+  0789 76 72       	cmp ah, 'r'
0258+  078B C6 9B 07    	je gettxt_CR
0259+  078E 1A          	mov al, ah				; if not a known escape, it is just a normal letter
0260+  078F 3E          	mov [d], al
0261+  0790 79          	inc d
0262+  0791 0A 5D 07    	jmp gettxt_loop
0263+  0794             gettxt_LF:
0264+  0794 19 0A       	mov al, $0A
0265+  0796 3E          	mov [d], al
0266+  0797 79          	inc d
0267+  0798 0A 5D 07    	jmp gettxt_loop
0268+  079B             gettxt_CR:
0269+  079B 19 0D       	mov al, $0D
0270+  079D 3E          	mov [d], al
0271+  079E 79          	inc d
0272+  079F 0A 5D 07    	jmp gettxt_loop
0273+  07A2             gettxt_backspace:
0274+  07A2 7F          	dec d
0275+  07A3 0A 5D 07    	jmp gettxt_loop
0276+  07A6             gettxt_end:
0277+  07A6 19 00       	mov al, 0
0278+  07A8 3E          	mov [d], al				; terminate string
0279+  07A9 E7          	pop d
0280+  07AA E4          	pop a
0281+  07AB 09          	ret
0282+  07AC             
0283+  07AC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0284+  07AC             ; PRINT NEW LINE
0285+  07AC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0286+  07AC             printnl:
0287+  07AC D7          	push a
0288+  07AD 10 00 0A    	mov a, $0A00
0289+  07B0 05 03       	syscall sys_io
0290+  07B2 10 00 0D    	mov a, $0D00
0291+  07B5 05 03       	syscall sys_io
0292+  07B7 E4          	pop a
0293+  07B8 09          	ret
0294+  07B9             
0295+  07B9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0296+  07B9             ; strtoint
0297+  07B9             ; 4 digit hex string number in d
0298+  07B9             ; integer returned in A
0299+  07B9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0300+  07B9             strtointx:
0301+  07B9 D8          	push b
0302+  07BA 32          	mov bl, [d]
0303+  07BB 37          	mov bh, bl
0304+  07BC 33 01 00    	mov bl, [d + 1]
0305+  07BF 07 7F 06    	call atoi				; convert to int in AL
0306+  07C2 23          	mov ah, al				; move to AH
0307+  07C3 33 02 00    	mov bl, [d + 2]
0308+  07C6 37          	mov bh, bl
0309+  07C7 33 03 00    	mov bl, [d + 3]
0310+  07CA 07 7F 06    	call atoi				; convert to int in AL
0311+  07CD E5          	pop b
0312+  07CE 09          	ret
0313+  07CF             
0314+  07CF             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0315+  07CF             ; strtoint
0316+  07CF             ; 5 digit base10 string number in d
0317+  07CF             ; integer returned in A
0318+  07CF             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0319+  07CF             strtoint:
0320+  07CF E2          	push si
0321+  07D0 D8          	push b
0322+  07D1 D9          	push c
0323+  07D2 DA          	push d
0324+  07D3 07 07 06    	call strlen			; get string length in C
0325+  07D6 7E          	dec c
0326+  07D7 FD 4E       	mov si, d
0327+  07D9 12          	mov a, c
0328+  07DA FD 99       	shl a
0329+  07DC 3B 67 06    	mov d, table_power
0330+  07DF 59          	add d, a
0331+  07E0 38 00 00    	mov c, 0
0332+  07E3             strtoint_L0:
0333+  07E3 F6          	lodsb			; load ASCII to al
0334+  07E4 B9 00       	cmp al, 0
0335+  07E6 C6 F9 07    	je strtoint_end
0336+  07E9 6F 30       	sub al, $30		; make into integer
0337+  07EB 22 00       	mov ah, 0
0338+  07ED 2A          	mov b, [d]
0339+  07EE AC          	mul a, b			; result in B since it fits in 16bits
0340+  07EF 11          	mov a, b
0341+  07F0 28          	mov b, c
0342+  07F1 54          	add a, b
0343+  07F2 39          	mov c, a
0344+  07F3 63 02 00    	sub d, 2
0345+  07F6 0A E3 07    	jmp strtoint_L0
0346+  07F9             strtoint_end:
0347+  07F9 12          	mov a, c
0348+  07FA E7          	pop d
0349+  07FB E6          	pop c
0350+  07FC E5          	pop b
0351+  07FD EF          	pop si
0352+  07FE 09          	ret
0353+  07FF             
0354+  07FF             
0355+  07FF             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0356+  07FF             ; PRINT NULL TERMINATED STRING
0357+  07FF             ; pointer in D
0358+  07FF             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0359+  07FF             puts:
0360+  07FF D7          	push a
0361+  0800 DA          	push d
0362+  0801             puts_L1:
0363+  0801 1E          	mov al, [d]
0364+  0802 B9 00       	cmp al, 0
0365+  0804 C6 10 08    	jz puts_END
0366+  0807 23          	mov ah, al
0367+  0808 19 00       	mov al, 0
0368+  080A 05 03       	syscall sys_io
0369+  080C 79          	inc d
0370+  080D 0A 01 08    	jmp puts_L1
0371+  0810             puts_END:
0372+  0810 E7          	pop d
0373+  0811 E4          	pop a
0374+  0812 09          	ret
0375+  0813             
0376+  0813             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0377+  0813             ; PRINT N SIZE STRING
0378+  0813             ; pointer in D
0379+  0813             ; size in C
0380+  0813             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0381+  0813             putsn:
0382+  0813 DB          	push al
0383+  0814 DA          	push d
0384+  0815 D9          	push c
0385+  0816             putsn_L0:
0386+  0816 1E          	mov al, [d]
0387+  0817 23          	mov ah, al
0388+  0818 19 00       	mov al, 0
0389+  081A 05 03       	syscall sys_io
0390+  081C 79          	inc d
0391+  081D 7E          	dec c	
0392+  081E C2 00 00    	cmp c, 0
0393+  0821 C7 16 08    	jne putsn_L0
0394+  0824             putsn_end:
0395+  0824 E6          	pop c
0396+  0825 E7          	pop d
0397+  0826 E8          	pop al
0398+  0827 09          	ret
0399+  0828             
0400+  0828             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0401+  0828             ; print 16bit decimal number
0402+  0828             ; input number in A
0403+  0828             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0404+  0828             print_u16d:
0405+  0828 D7          	push a
0406+  0829 D8          	push b
0407+  082A 26 10 27    	mov b, 10000
0408+  082D AE          	div a, b			; get 10000 coeff.
0409+  082E 07 54 08    	call print_zero_or_space
0410+  0831 11          	mov a, b
0411+  0832 26 E8 03    	mov b, 1000
0412+  0835 AE          	div a, b			; get 10000 coeff.
0413+  0836 07 54 08    	call print_zero_or_space
0414+  0839 11          	mov a, b
0415+  083A 26 64 00    	mov b, 100
0416+  083D AE          	div a, b
0417+  083E 07 54 08    	call print_zero_or_space
0418+  0841 11          	mov a, b
0419+  0842 26 0A 00    	mov b, 10
0420+  0845 AE          	div a, b
0421+  0846 07 54 08    	call print_zero_or_space
0422+  0849 11          	mov a, b
0423+  084A 6A 30       	add al, $30
0424+  084C 23          	mov ah, al
0425+  084D 19 00       	mov al, 0
0426+  084F 05 03       	syscall sys_io	; print coeff
0427+  0851 E5          	pop b
0428+  0852 E4          	pop a
0429+  0853 09          	ret
0430+  0854             
0431+  0854             
0432+  0854             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0433+  0854             ; if A == 0, print space
0434+  0854             ; else print A
0435+  0854             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0436+  0854             print_zero_or_space:
0437+  0854             	; cmp a, 0
0438+  0854             	; jne print_number
0439+  0854             	; mov ah, $20
0440+  0854             	; call putchar
0441+  0854             	; ret
0442+  0854             print_number:
0443+  0854 6A 30       	add al, $30
0444+  0856 23          	mov ah, al
0445+  0857 07 CA 06    	call putchar
0446+  085A 09          	ret
0447+  085B             
0448+  085B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0449+  085B             ; PRINT 16BIT HEX INTEGER
0450+  085B             ; integer value in reg B
0451+  085B             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0452+  085B             print_u16x:
0453+  085B D7          	push a
0454+  085C D8          	push b
0455+  085D DD          	push bl
0456+  085E 30          	mov bl, bh
0457+  085F 07 91 06    	call itoa				; convert bh to char in A
0458+  0862 2F          	mov bl, al				; save al
0459+  0863 19 00       	mov al, 0
0460+  0865 05 03       	syscall sys_io				; display AH
0461+  0867 24          	mov ah, bl				; retrieve al
0462+  0868 19 00       	mov al, 0
0463+  086A 05 03       	syscall sys_io				; display AL
0464+  086C             
0465+  086C EA          	pop bl
0466+  086D 07 91 06    	call itoa				; convert bh to char in A
0467+  0870 2F          	mov bl, al				; save al
0468+  0871 19 00       	mov al, 0
0469+  0873 05 03       	syscall sys_io				; display AH
0470+  0875 24          	mov ah, bl				; retrieve al
0471+  0876 19 00       	mov al, 0
0472+  0878 05 03       	syscall sys_io				; display AL
0473+  087A             
0474+  087A E5          	pop b
0475+  087B E4          	pop a
0476+  087C 09          	ret
0477+  087D             
0478+  087D             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0479+  087D             ; INPUT 16BIT HEX INTEGER
0480+  087D             ; read 16bit integer into A
0481+  087D             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0482+  087D             scan_u16x:
0483+  087D F8 10 00    	enter 16
0484+  0880 D8          	push b
0485+  0881 DA          	push d
0486+  0882             
0487+  0882 FA F1 FF    	lea d, [bp + -15]
0488+  0885 07 D1 06    	call gets				; get number
0489+  0888             
0490+  0888 32          	mov bl, [d]
0491+  0889 37          	mov bh, bl
0492+  088A 33 01 00    	mov bl, [d + 1]
0493+  088D 07 7F 06    	call atoi				; convert to int in AL
0494+  0890 23          	mov ah, al				; move to AH
0495+  0891             
0496+  0891 33 02 00    	mov bl, [d + 2]
0497+  0894 37          	mov bh, bl
0498+  0895 33 03 00    	mov bl, [d + 3]
0499+  0898 07 7F 06    	call atoi				; convert to int in AL
0500+  089B             
0501+  089B E7          	pop d
0502+  089C E5          	pop b
0503+  089D F9          	leave
0504+  089E 09          	ret
0505+  089F             
0506+  089F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0507+  089F             ; PRINT 8bit HEX INTEGER
0508+  089F             ; integer value in reg bl
0509+  089F             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0510+  089F             print_u8x:
0511+  089F D7          	push a
0512+  08A0 DD          	push bl
0513+  08A1             
0514+  08A1 07 91 06    	call itoa				; convert bl to char in A
0515+  08A4 2F          	mov bl, al				; save al
0516+  08A5 19 00       	mov al, 0
0517+  08A7 05 03       	syscall sys_io				; display AH
0518+  08A9 24          	mov ah, bl				; retrieve al
0519+  08AA 19 00       	mov al, 0
0520+  08AC 05 03       	syscall sys_io				; display AL
0521+  08AE             
0522+  08AE EA          	pop bl
0523+  08AF E4          	pop a
0524+  08B0 09          	ret
0525+  08B1             
0526+  08B1             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0527+  08B1             ; print 8bit decimal unsigned number
0528+  08B1             ; input number in AL
0529+  08B1             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0530+  08B1             print_u8d:
0531+  08B1 D7          	push a
0532+  08B2 D8          	push b
0533+  08B3             
0534+  08B3 22 00       	mov ah, 0
0535+  08B5 26 64 00    	mov b, 100
0536+  08B8 AE          	div a, b
0537+  08B9 D8          	push b			; save remainder
0538+  08BA B9 00       	cmp al, 0
0539+  08BC C6 C6 08    	je skip100
0540+  08BF 6A 30       	add al, $30
0541+  08C1 23          	mov ah, al
0542+  08C2 19 00       	mov al, 0
0543+  08C4 05 03       	syscall sys_io	; print coeff
0544+  08C6             skip100:
0545+  08C6 E4          	pop a
0546+  08C7 22 00       	mov ah, 0
0547+  08C9 26 0A 00    	mov b, 10
0548+  08CC AE          	div a, b
0549+  08CD D8          	push b			; save remainder
0550+  08CE B9 00       	cmp al, 0
0551+  08D0 C6 DA 08    	je skip10
0552+  08D3 6A 30       	add al, $30
0553+  08D5 23          	mov ah, al
0554+  08D6 19 00       	mov al, 0
0555+  08D8 05 03       	syscall sys_io	; print coeff
0556+  08DA             skip10:
0557+  08DA E4          	pop a
0558+  08DB 1B          	mov al, bl
0559+  08DC 6A 30       	add al, $30
0560+  08DE 23          	mov ah, al
0561+  08DF 19 00       	mov al, 0
0562+  08E1 05 03       	syscall sys_io	; print coeff
0563+  08E3 E5          	pop b
0564+  08E4 E4          	pop a
0565+  08E5 09          	ret
0566+  08E6             
0567+  08E6             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0568+  08E6             ; INPUT 8BIT HEX INTEGER
0569+  08E6             ; read 8bit integer into AL
0570+  08E6             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0571+  08E6             scan_u8x:
0572+  08E6 F8 04 00    	enter 4
0573+  08E9 D8          	push b
0574+  08EA DA          	push d
0575+  08EB             
0576+  08EB FA FD FF    	lea d, [bp + -3]
0577+  08EE 07 D1 06    	call gets				; get number
0578+  08F1             
0579+  08F1 32          	mov bl, [d]
0580+  08F2 37          	mov bh, bl
0581+  08F3 33 01 00    	mov bl, [d + 1]
0582+  08F6 07 7F 06    	call atoi				; convert to int in AL
0583+  08F9             
0584+  08F9 E7          	pop d
0585+  08FA E5          	pop b
0586+  08FB F9          	leave
0587+  08FC 09          	ret
0588+  08FD             
0589+  08FD             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0590+  08FD             ; input decimal number
0591+  08FD             ; result in A
0592+  08FD             ; 655'\0'
0593+  08FD             ; low--------high
0594+  08FD             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0595+  08FD             scan_u16d:
0596+  08FD F8 08 00    	enter 8
0597+  0900 E2          	push si
0598+  0901 D8          	push b
0599+  0902 D9          	push c
0600+  0903 DA          	push d
0601+  0904 FA F9 FF    	lea d, [bp +- 7]
0602+  0907 07 D1 06    	call gets
0603+  090A 07 07 06    	call strlen			; get string length in C
0604+  090D 7E          	dec c
0605+  090E FD 4E       	mov si, d
0606+  0910 12          	mov a, c
0607+  0911 FD 99       	shl a
0608+  0913 3B 67 06    	mov d, table_power
0609+  0916 59          	add d, a
0610+  0917 38 00 00    	mov c, 0
0611+  091A             mul_loop:
0612+  091A F6          	lodsb			; load ASCII to al
0613+  091B B9 00       	cmp al, 0
0614+  091D C6 30 09    	je mul_exit
0615+  0920 6F 30       	sub al, $30		; make into integer
0616+  0922 22 00       	mov ah, 0
0617+  0924 2A          	mov b, [d]
0618+  0925 AC          	mul a, b			; result in B since it fits in 16bits
0619+  0926 11          	mov a, b
0620+  0927 28          	mov b, c
0621+  0928 54          	add a, b
0622+  0929 39          	mov c, a
0623+  092A 63 02 00    	sub d, 2
0624+  092D 0A 1A 09    	jmp mul_loop
0625+  0930             mul_exit:
0626+  0930 12          	mov a, c
0627+  0931 E7          	pop d
0628+  0932 E6          	pop c
0629+  0933 E5          	pop b
0630+  0934 EF          	pop si
0631+  0935 F9          	leave
0632+  0936 09          	ret
0271   0937             
0272   0937 20 20 20 20 board:			.fill (width)*(height), ' '
0272   093B 20 20 20 20 
0272   093F 20 20 20 20 
0272   0943 20 20 20 20 
0272   0947 20 20 20 20 
0272   094B 20 20 20 20 
0272   094F 20 20 20 20 
0272   0953 20 20 20 20 
0272   0957 20 20 20 20 
0272   095B 20 20 20 20 
0272   095F 20 20 20 20 
0272   0963 20 20 20 20 
0272   0967 20 20 20 20 
0272   096B 20 20 20 20 
0272   096F 20 20 20 20 
0272   0973 20 20 20 20 
0272   0977 20 20 20 20 
0272   097B 20 20 20 20 
0272   097F 20 20 20 20 
0272   0983 20 20 20 20 
0272   0987 20 20 20 20 
0272   098B 20 20 20 20 
0272   098F 20 20 20 20 
0272   0993 20 20 20 20 
0272   0997 20 20 20 20 
0272   099B 20 20 20 20 
0272   099F 20 20 20 20 
0272   09A3 20 20 20 20 
0272   09A7 20 20 20 20 
0272   09AB 20 20 20 20 
0272   09AF 20 20 20 20 
0272   09B3 20 20 20 20 
0272   09B7 20 20 20 20 
0272   09BB 20 20 20 20 
0272   09BF 20 20 20 20 
0272   09C3 20 20 20 20 
0272   09C7 20 20 20 20 
0272   09CB 20 20 20 20 
0272   09CF 20 20 20 20 
0272   09D3 20 20 20 20 
0272   09D7 20 20 20 20 
0272   09DB 20 20 20 20 
0272   09DF 20 20 20 20 
0272   09E3 20 20 20 20 
0272   09E7 20 20 20 20 
0272   09EB 20 20 20 20 
0272   09EF 20 20 20 20 
0272   09F3 20 20 20 20 
0272   09F7 20 20 20 20 
0272   09FB 20 20 20 20 
0272   09FF 20 20 20 20 
0272   0A03 20 20 20 20 
0272   0A07 20 20 20 20 
0272   0A0B 20 20 20 20 
0272   0A0F 20 20 20 20 
0272   0A13 20 20 20 20 
0272   0A17 20 20 20 20 
0272   0A1B 20 20 20 20 
0272   0A1F 20 20 20 20 
0272   0A23 20 20 20 20 
0272   0A27 20 20 20 20 
0272   0A2B 20 20 20 20 
0272   0A2F 20 20 20 20 
0272   0A33 20 20 20 20 
0272   0A37 20 20 20 20 
0272   0A3B 20 20 20 20 
0272   0A3F 20 20 20 20 
0272   0A43 20 20 20 20 
0272   0A47 20 20 20 20 
0272   0A4B 20 20 20 20 
0272   0A4F 20 20 20 20 
0272   0A53 20 20 20 20 
0272   0A57 20 20 20 20 
0272   0A5B 20 20 20 20 
0272   0A5F 20 20 20 20 
0272   0A63 20 20 20 20 
0272   0A67 20 20 20 20 
0272   0A6B 20 20 20 20 
0272   0A6F 20 20 20 20 
0272   0A73 20 20 20 20 
0272   0A77 20 20 20 20 
0272   0A7B 20 20 20 20 
0272   0A7F 20 20 20 20 
0272   0A83 20 20 20 20 
0272   0A87 20 20 20 20 
0272   0A8B 20 20 20 20 
0272   0A8F 20 20 20 20 
0272   0A93 20 20 20 20 
0272   0A97 20 20 20 20 
0272   0A9B 20 20 20 20 
0272   0A9F 20 20 20 20 
0272   0AA3 20 20 20 20 
0272   0AA7 20 20 20 20 
0272   0AAB 20 20 20 20 
0272   0AAF 20 20 20 20 
0272   0AB3 20 20 20 20 
0272   0AB7 20 20 20 20 
0272   0ABB 20 20 20 20 
0272   0ABF 20 20 20 20 
0272   0AC3 20 20 20 20 
0272   0AC7 20 20 20 20 
0272   0ACB 20 20 20 20 
0272   0ACF 20 20 20 20 
0272   0AD3 20 20 20 20 
0272   0AD7 20 20 20 20 
0272   0ADB 20 20 20 20 
0272   0ADF 20 20 20 20 
0272   0AE3 20 20 20 20 
0272   0AE7 20 20 20 20 
0272   0AEB 20 20 20 20 
0272   0AEF 20 20 20 20 
0272   0AF3 20 20 20 20 
0272   0AF7 20 20 20 20 
0272   0AFB 20 20 20 20 
0272   0AFF 20 20 20 20 
0272   0B03 20 20 20 20 
0272   0B07 20 20 20 20 
0272   0B0B 20 20 20 20 
0272   0B0F 20 20 20 20 
0272   0B13 20 20 20 20 
0272   0B17 20 20 20 20 
0272   0B1B 20 20 20 20 
0272   0B1F 20 20 20 20 
0272   0B23 20 20 20 20 
0272   0B27 20 20 20 20 
0272   0B2B 20 20 20 20 
0272   0B2F 20 20 20 20 
0272   0B33 20 20 20 20 
0272   0B37 20 20 20 20 
0272   0B3B 20 20 20 20 
0272   0B3F 20 20 20 20 
0272   0B43 20 20 20 20 
0272   0B47 20 20 20 20 
0272   0B4B 20 20 20 20 
0272   0B4F 20 20 20 20 
0272   0B53 20 20 20 20 
0272   0B57 20 20 20 20 
0272   0B5B 20 20 20 20 
0272   0B5F 20 20 20 20 
0272   0B63 20 20 20 20 
0272   0B67 20 20 20 20 
0272   0B6B 20 20 20 20 
0272   0B6F 20 20 20 20 
0272   0B73 20 20 20 20 
0272   0B77 20 20 20 20 
0272   0B7B 20 20 20 20 
0272   0B7F 20 20 20 20 
0272   0B83 20 20 20 20 
0272   0B87 20 20 20 20 
0272   0B8B 20 20 20 20 
0272   0B8F 20 20 20 20 
0272   0B93 20 20 20 20 
0272   0B97 20 20 20 20 
0272   0B9B 20 20 20 20 
0272   0B9F 20 20 20 20 
0272   0BA3 20 20 20 20 
0272   0BA7 20 20 20 20 
0272   0BAB 20 20 20 20 
0272   0BAF 20 20 20 20 
0272   0BB3 20 20 20 20 
0272   0BB7 20 20 20 20 
0272   0BBB 20 20 20 20 
0272   0BBF 20 20 20 20 
0272   0BC3 20 20 20 20 
0272   0BC7 20 20 20 20 
0272   0BCB 20 20 20 20 
0272   0BCF 20 20 20 20 
0272   0BD3 20 20 20 20 
0272   0BD7 20 20 20 20 
0272   0BDB 20 20 20 20 
0272   0BDF 20 20 20 20 
0272   0BE3 20 20 20 20 
0272   0BE7 20 20 20 20 
0272   0BEB 20 20 20 20 
0272   0BEF 20 20 20 20 
0272   0BF3 20 20 20 20 
0272   0BF7 20 20 20 20 
0272   0BFB 20 20 20 20 
0272   0BFF 20 20 20 20 
0272   0C03 20 20 20 20 
0272   0C07 20 20 20 20 
0272   0C0B 20 20 20 20 
0272   0C0F 20 20 20 20 
0272   0C13 20 20 20 20 
0272   0C17 20 20 20 20 
0272   0C1B 20 20 20 20 
0272   0C1F 20 20 20 20 
0272   0C23 20 20 20 20 
0272   0C27 20 20 20 20 
0272   0C2B 20 20 20 20 
0272   0C2F 20 20 20 20 
0272   0C33 20 20 20 20 
0272   0C37 20 20 20 20 
0272   0C3B 20 20 20 20 
0272   0C3F 20 20 20 20 
0272   0C43 20 20 20 20 
0272   0C47 20 20 20 20 
0272   0C4B 20 20 20 20 
0272   0C4F 20 20 20 20 
0272   0C53 20 20 20 20 
0272   0C57 20 20 20 20 
0272   0C5B 20 20 20 20 
0272   0C5F 20 20 20 20 
0272   0C63 20 20 20 20 
0272   0C67 20 20 20 20 
0272   0C6B 20 20 20 20 
0272   0C6F 20 20 20 20 
0272   0C73 20 20 20 20 
0272   0C77 20 20 20 20 
0272   0C7B 20 20 20 20 
0272   0C7F 20 20 20 20 
0272   0C83 20 20 20 20 
0272   0C87 20 20 20 20 
0272   0C8B 20 20 20 20 
0272   0C8F 20 20 20 20 
0272   0C93 20 20 20 20 
0272   0C97 20 20 20 20 
0272   0C9B 20 20 20 20 
0272   0C9F 20 20 20 20 
0272   0CA3 20 20 20 20 
0272   0CA7 20 20 20 20 
0272   0CAB 20 20 20 20 
0272   0CAF 20 20 20 20 
0272   0CB3 20 20 20 20 
0272   0CB7 20 20 20 20 
0272   0CBB 20 20 20 20 
0272   0CBF 20 20 20 20 
0272   0CC3 20 20 20 20 
0272   0CC7 20 20 20 20 
0272   0CCB 20 20 20 20 
0272   0CCF 20 20 20 20 
0272   0CD3 20 20 20 20 
0272   0CD7 20 20 20 20 
0272   0CDB 20 20 20 20 
0272   0CDF 20 20 20 20 
0272   0CE3 20 20 20 20 
0272   0CE7 20 20 20 20 
0272   0CEB 20 20 20 20 
0272   0CEF 20 20 20 20 
0272   0CF3 20 20 20 20 
0272   0CF7 20 20 20 20 
0272   0CFB 20 20 20 20 
0272   0CFF 20 20 20 20 
0272   0D03 20 20 20 20 
0272   0D07 20 20 20 20 
0272   0D0B 20 20 20 20 
0272   0D0F 20 20 20 20 
0272   0D13 20 20 20 20 
0272   0D17 20 20 20 20 
0272   0D1B 20 20 20 20 
0272   0D1F 20 20 20 20 
0272   0D23 20 20 20 20 
0272   0D27 20 20 20 20 
0272   0D2B 20 20 20 20 
0272   0D2F 20 20 20 20 
0272   0D33 20 20 20 20 
0272   0D37 20 20 20 20 
0272   0D3B 20 20 20 20 
0272   0D3F 20 20 20 20 
0272   0D43 20 20 20 20 
0272   0D47 20 20 20 20 
0272   0D4B 20 20 20 20 
0272   0D4F 20 20 20 20 
0272   0D53 20 20 20 20 
0272   0D57 20 20 20 20 
0272   0D5B 20 20 20 20 
0272   0D5F 20 20 20 20 
0272   0D63 20 20 20 20 
0272   0D67 20 20 20 20 
0272   0D6B 20 20 20 20 
0272   0D6F 20 20 20 20 
0272   0D73 20 20 20 20 
0272   0D77 20 20 20 20 
0272   0D7B 20 20 20 20 
0272   0D7F 20 20 20 20 
0272   0D83 20 20 20 20 
0272   0D87 20 20 20 20 
0272   0D8B 20 20 20 20 
0272   0D8F 20 20 20 20 
0272   0D93 20 20 20 20 
0272   0D97 20 20 20 20 
0272   0D9B 20 20 20 20 
0272   0D9F 20 20 20 20 
0272   0DA3 20 20 20 20 
0272   0DA7 20 20 20 20 
0272   0DAB 20 20 20 20 
0272   0DAF 20 20 20 20 
0272   0DB3 20 20 20 20 
0272   0DB7 20 20 20 20 
0272   0DBB 20 20 20 20 
0272   0DBF 20 20 20 20 
0272   0DC3 20 20 20 20 
0272   0DC7 20 20 20 20 
0272   0DCB 20 20 20 20 
0272   0DCF 20 20 20 20 
0272   0DD3 20 20 20 20 
0272   0DD7 20 20 20 20 
0272   0DDB 20 20 20 20 
0272   0DDF 20 20 20 20 
0272   0DE3 20 20 20 20 
0272   0DE7 20 20 20 20 
0272   0DEB 20 20 20 20 
0272   0DEF 20 20 20 20 
0272   0DF3 20 20 20 20 
0272   0DF7 20 20 20 20 
0272   0DFB 20 20 20 20 
0272   0DFF 20 20 20 20 
0272   0E03 20 20 20 20 
0272   0E07 20 20 20 20 
0272   0E0B 20 20 20 20 
0272   0E0F 20 20 20 20 
0272   0E13 20 20 20 20 
0272   0E17 20 20 20 20 
0272   0E1B 20 20 20 20 
0272   0E1F 20 20 20 20 
0272   0E23 20 20 20 20 
0272   0E27 20 20 20 20 
0272   0E2B 20 20 20 20 
0272   0E2F 20 20 20 20 
0272   0E33 20 20 20 20 
0272   0E37 20 20 20 20 
0272   0E3B 20 20 20 20 
0272   0E3F 20 20 20 20 
0272   0E43 20 20 20 20 
0272   0E47 20 20 20 20 
0272   0E4B 20 20 20 20 
0272   0E4F 20 20 20 20 
0272   0E53 20 20 20 20 
0272   0E57 20 20 20 20 
0272   0E5B 20 20 20 20 
0272   0E5F 20 20 20 20 
0272   0E63 20 20 20 20 
0272   0E67 20 20 20 20 
0272   0E6B 20 20 20 20 
0272   0E6F 20 20 20 20 
0272   0E73 20 20 20 20 
0272   0E77 20 20 20 20 
0272   0E7B 20 20 20 20 
0272   0E7F 20 20 20 20 
0272   0E83 20 20 20 20 
0272   0E87 20 20 20 20 
0272   0E8B 20 20 20 20 
0272   0E8F 20 20 20 20 
0272   0E93 20 20 20 20 
0272   0E97 20 20 20 20 
0272   0E9B 20 20 20 20 
0272   0E9F 20 20 20 20 
0272   0EA3 20 20 20 20 
0272   0EA7 20 20 20 20 
0272   0EAB 20 20 20 20 
0272   0EAF 20 20 20 20 
0272   0EB3 20 20 20 20 
0272   0EB7 20 20 20 20 
0272   0EBB 20 20 20 20 
0272   0EBF 20 20 20 20 
0272   0EC3 20 20 20 20 
0272   0EC7 20 20 20 20 
0272   0ECB 20 20 20 20 
0272   0ECF 20 20 20 20 
0272   0ED3 20 20 20 20 
0272   0ED7 20 20 20 20 
0272   0EDB 20 20 20 20 
0272   0EDF 20 20 20 20 
0272   0EE3 20 20 20 20 
0272   0EE7 20 20 20 20 
0272   0EEB 20 20 20 20 
0272   0EEF 20 20 20 20 
0272   0EF3 20 20 20 20 
0272   0EF7 20 20 20 20 
0272   0EFB 20 20 20 20 
0272   0EFF 20 20 20 20 
0272   0F03 20 20 20 20 
0272   0F07 20 20 20 20 
0272   0F0B 20 20 20 20 
0272   0F0F 20 20 20 20 
0272   0F13 20 20 20 20 
0272   0F17 20 20 20 20 
0272   0F1B 20 20 20 20 
0272   0F1F 20 20 20 20 
0272   0F23 20 20 20 20 
0272   0F27 20 20 20 20 
0272   0F2B 20 20 20 20 
0272   0F2F 20 20 20 20 
0272   0F33 20 20 20 20 
0272   0F37 20 20 20 20 
0272   0F3B 20 20 20 20 
0272   0F3F 20 20 20 20 
0272   0F43 20 20 20 20 
0272   0F47 20 20 20 20 
0272   0F4B 20 20 20 20 
0272   0F4F 20 20 20 20 
0272   0F53 20 20 20 20 
0272   0F57 20 20 20 20 
0272   0F5B 20 20 20 20 
0272   0F5F 20 20 20 20 
0272   0F63 20 20 20 20 
0272   0F67 20 20 20 20 
0272   0F6B 20 20 20 20 
0272   0F6F 20 20 20 20 
0272   0F73 20 20 20 20 
0272   0F77 20 20 20 20 
0272   0F7B 20 20 20 20 
0272   0F7F 20 20 20 20 
0272   0F83 20 20 20 20 
0272   0F87 20 20 20 20 
0272   0F8B 20 20 20 20 
0272   0F8F 20 20 20 20 
0272   0F93 20 20 20 20 
0272   0F97 20 20 20 20 
0272   0F9B 20 20 20 20 
0272   0F9F 20 20 20 20 
0272   0FA3 20 20 20 20 
0272   0FA7 20 20 20 20 
0272   0FAB 20 20 20 20 
0272   0FAF 20 20 20 20 
0272   0FB3 20 20 20 20 
0272   0FB7 20 20 20 20 
0272   0FBB 20 20 20 20 
0272   0FBF 20 20 20 20 
0272   0FC3 20 20 20 20 
0272   0FC7 20 20 20 20 
0272   0FCB 20 20 20 20 
0272   0FCF 20 20 20 20 
0272   0FD3 20 20 20 20 
0272   0FD7 20 20 20 20 
0272   0FDB 20 20 20 20 
0272   0FDF 20 20 20 20 
0272   0FE3 20 20 20 20 
0272   0FE7 20 20 20 20 
0272   0FEB 20 20 20 20 
0272   0FEF 20 20 20 20 
0272   0FF3 20 20 20 20 
0272   0FF7 20 20 20 20 
0272   0FFB 20 20 20 20 
0272   0FFF 20 20 20 20 
0272   1003 20 20 20 20 
0272   1007 20 20 20 20 
0272   100B 20 20 20 20 
0272   100F 20 20 20 20 
0272   1013 20 20 20 20 
0272   1017 20 20 20 20 
0272   101B 20 20 20 20 
0272   101F 20 20 20 20 
0272   1023 20 20 20 20 
0272   1027 20 20 20 20 
0272   102B 20 20 20 20 
0272   102F 20 20 20 20 
0272   1033 20 20 20 20 
0272   1037 20 20 20 20 
0272   103B 20 20 20 20 
0272   103F 20 20 20 20 
0272   1043 20 20 20 20 
0272   1047 20 20 20 20 
0272   104B 20 20 20 20 
0272   104F 20 20 20 20 
0272   1053 20 20 20 20 
0272   1057 20 20 20 20 
0272   105B 20 20 20 20 
0272   105F 20 20 20 20 
0272   1063 20 20 20 20 
0272   1067 20 20 20 20 
0272   106B 20 20 20 20 
0272   106F 20 20 20 20 
0272   1073 20 20 20 20 
0272   1077 20 20 20 20 
0272   107B 20 20 20 20 
0272   107F 20 20 20 20 
0272   1083 20 20 20 20 
0272   1087 20 20 20 20 
0272   108B 20 20 20 20 
0272   108F 20 20 20 20 
0272   1093 20 20 20 20 
0272   1097 20 20 20 20 
0272   109B 20 20 20 20 
0272   109F 20 20 20 20 
0272   10A3 20 20 20 20 
0272   10A7 20 20 20 20 
0272   10AB 20 20 20 20 
0272   10AF 20 20 20 20 
0272   10B3 20 20 20 20 
0272   10B7 20 20 20 20 
0272   10BB 20 20 20 20 
0272   10BF 20 20 20 20 
0272   10C3 20 20 20 20 
0272   10C7 20 20 20 20 
0272   10CB 20 20 20 20 
0272   10CF 20 20 20 20 
0272   10D3 20 20 20 20 
0272   10D7 20 20 20 20 
0272   10DB 20 20 20 20 
0272   10DF 20 20 20 20 
0272   10E3 20 20 20 20 
0272   10E7 20 20 20 20 
0272   10EB 20 20 20 20 
0272   10EF 20 20 20 20 
0272   10F3 20 20 20 20 
0272   10F7 20 20 20 20 
0272   10FB 20 20 20 20 
0272   10FF 20 20 20 20 
0272   1103 20 20 20 20 
0272   1107 20 20 20 20 
0272   110B 20 20 20 20 
0272   110F 20 20 20 20 
0272   1113 20 20 20 20 
0272   1117 20 20 20 20 
0272   111B 20 20 20 20 
0272   111F 20 20 20 20 
0272   1123 20 20 20 20 
0272   1127 20 20 20 20 
0272   112B 20 20 20 20 
0272   112F 20 20 20 20 
0272   1133 20 20 20 20 
0272   1137 20 20 20 20 
0272   113B 20 20 20 20 
0272   113F 20 20 20 20 
0272   1143 20 20 20 20 
0272   1147 20 20 20 20 
0272   114B 20 20 20 20 
0272   114F 20 20 20 20 
0272   1153 20 20 20 20 
0272   1157 20 20 20 20 
0272   115B 20 20 20 20 
0272   115F 20 20 20 20 
0272   1163 20 20 20 20 
0272   1167 20 20 20 20 
0272   116B 20 20 20 20 
0272   116F 20 20 20 20 
0272   1173 20 20 20 20 
0272   1177 20 20 20 20 
0272   117B 20 20 20 20 
0272   117F 20 20 20 20 
0272   1183 20 20 20 20 
0272   1187 20 20 20 20 
0272   118B 20 20 20 20 
0272   118F 20 20 20 20 
0272   1193 20 20 20 20 
0272   1197 20 20 20 20 
0272   119B 20 20 20 20 
0272   119F 20 20 20 20 
0272   11A3 20 20 20 20 
0272   11A7 20 20 20 20 
0272   11AB 20 20 20 20 
0272   11AF 20 20 20 20 
0272   11B3 20 20 20 20 
0272   11B7 20 20 20 20 
0272   11BB 20 20 20 20 
0272   11BF 20 20 20 20 
0272   11C3 20 20 20 20 
0272   11C7 20 20 20 20 
0272   11CB 20 20 20 20 
0272   11CF 20 20 20 20 
0272   11D3 20 20 20 20 
0272   11D7 20 20 20 20 
0272   11DB 20 20 20 20 
0272   11DF 20 20 20 20 
0272   11E3 20 20 20 20 
0272   11E7 20 20 20 20 
0272   11EB 20 20 20 20 
0272   11EF 20 20 20 20 
0272   11F3 20 20 20 20 
0272   11F7 20 20 20 20 
0272   11FB 20 20 20 20 
0272   11FF 20 20 20 20 
0272   1203 20 20 20 20 
0272   1207 20 20 20 20 
0272   120B 20 20 20 20 
0272   120F 20 20 20 20 
0272   1213 20 20 20 20 
0272   1217 20 20 20 20 
0272   121B 20 20 20 20 
0272   121F 20 20 20 20 
0272   1223 20 20 20 20 
0272   1227 20 20 20 20 
0272   122B 20 20 20 20 
0272   122F 20 20 20 20 
0272   1233 20 20 20 20 
0272   1237 20 20 20 20 
0272   123B 20 20 20 20 
0272   123F 20 20 20 20 
0272   1243 20 20 20 20 
0272   1247 20 20 20 20 
0272   124B 20 20 20 20 
0272   124F 20 20 20 20 
0272   1253 20 20 20 20 
0272   1257 20 20 20 20 
0272   125B 20 20 20 20 
0272   125F 20 20 20 20 
0272   1263 20 20 20 20 
0272   1267 20 20 20 20 
0272   126B 20 20 20 20 
0272   126F 20 20 20 20 
0272   1273 20 20 20 20 
0272   1277 20 20 20 20 
0272   127B 20 20 20 20 
0272   127F 20 20 20 20 
0272   1283 20 20 20 20 
0272   1287 20 20 20 20 
0272   128B 20 20 20 20 
0272   128F 20 20 20 20 
0272   1293 20 20 20 20 
0272   1297 20 20 20 20 
0272   129B 20 20 20 20 
0272   129F 20 20 20 20 
0272   12A3 20 20 20 20 
0272   12A7 20 20 20 20 
0272   12AB 20 20 20 20 
0272   12AF 20 20 20 20 
0272   12B3 20 20 20 20 
0272   12B7 20 20 20 20 
0272   12BB 20 20 20 20 
0272   12BF 20 20 20 20 
0272   12C3 20 20 20 20 
0272   12C7 20 20 20 20 
0272   12CB 20 20 20 20 
0272   12CF 20 20 20 20 
0272   12D3 20 20 20 20 
0272   12D7 20 20 20 20 
0272   12DB 20 20 20 20 
0272   12DF 20 20 20 20 
0272   12E3 20 20 20 20 
0272   12E7 20 20 20 20 
0272   12EB 20 20 20 20 
0272   12EF 20 20 20 20 
0272   12F3 20 20 20 20 
0272   12F7 20 20 20 20 
0272   12FB 20 20 20 20 
0272   12FF 20 20 20 20 
0272   1303 20 20 20 20 
0272   1307 20 20 20 20 
0272   130B 20 20 20 20 
0272   130F 20 20 20 20 
0272   1313 20 20 20 20 
0272   1317 20 20 20 20 
0272   131B 20 20 20 20 
0272   131F 20 20 20 20 
0272   1323 20 20 20 20 
0272   1327 20 20 20 20 
0272   132B 20 20 20 20 
0272   132F 20 20 20 20 
0272   1333 20 20 20 20 
0272   1337 20 20 20 20 
0272   133B 20 20 20 20 
0272   133F 20 20 20 20 
0272   1343 20 20 20 20 
0272   1347 20 20 20 20 
0272   134B 20 20 20 20 
0272   134F 20 20 20 20 
0272   1353 20 20 20 20 
0272   1357 20 20 20 20 
0272   135B 20 20 20 20 
0272   135F 20 20 20 20 
0272   1363 20 20 20 20 
0272   1367 20 20 20 20 
0272   136B 20 20 20 20 
0272   136F 20 20 20 20 
0272   1373 20 20 20 20 
0272   1377 20 20 20 20 
0272   137B 20 20 20 20 
0272   137F 20 20 20 20 
0272   1383 20 20 20 20 
0272   1387 20 20 20 20 
0272   138B 20 20 20 20 
0272   138F 20 20 20 20 
0272   1393 20 20 20 20 
0272   1397 20 20 20 20 
0272   139B 20 20 20 20 
0272   139F 20 20 20 20 
0272   13A3 20 20 20 20 
0272   13A7 20 20 20 20 
0272   13AB 20 20 20 20 
0272   13AF 20 20 20 20 
0272   13B3 20 20 20 20 
0272   13B7 20 20 20 20 
0272   13BB 20 20 20 20 
0272   13BF 20 20 20 20 
0272   13C3 20 20 20 20 
0272   13C7 20 20 20 20 
0272   13CB 20 20 20 20 
0272   13CF 20 20 20 20 
0272   13D3 20 20 20 20 
0272   13D7 20 20 20 20 
0272   13DB 20 20 20 20 
0272   13DF 20 20 20 20 
0272   13E3 20 20 20 20 
0272   13E7 20 20 20 20 
0272   13EB 20 20 20 20 
0272   13EF 20 20 20 20 
0272   13F3 20 20 20 20 
0272   13F7 20 20 20 20 
0272   13FB 20 20 20 20 
0272   13FF 20 20 20 20 
0272   1403 20 20 20 20 
0272   1407 20 20 20 20 
0272   140B 20 20 20 20 
0272   140F 20 20 20 20 
0272   1413 20 20 20 20 
0272   1417 20 20 20 20 
0272   141B 20 20 20 20 
0272   141F 20 20 20 20 
0272   1423 20 20 20 20 
0272   1427 20 20 20 20 
0272   142B 20 20 20 20 
0272   142F 20 20 20 20 
0272   1433 20 20 20 20 
0272   1437 20 20 20 20 
0272   143B 20 20 20 20 
0272   143F 20 20 20 20 
0272   1443 20 20 20 20 
0272   1447 20 20 20 20 
0272   144B 20 20 20 20 
0272   144F 20 20 20 20 
0272   1453 20 20 20 20 
0272   1457 20 20 20 20 
0272   145B 20 20 20 20 
0272   145F 20 20 20 20 
0272   1463 20 20 20 20 
0272   1467 20 20 20 20 
0272   146B 20 20 20 20 
0272   146F 20 20 20 20 
0272   1473 20 20 20 20 
0272   1477 20 20 20 20 
0272   147B 20 20 20 20 
0272   147F 20 20 20 20 
0272   1483 20 20 20 20 
0272   1487 20 20 20 20 
0272   148B 20 20 20 20 
0272   148F 20 20 20 20 
0272   1493 20 20 20 20 
0272   1497 20 20 20 20 
0272   149B 20 20 20 20 
0272   149F 20 20 20 20 
0272   14A3 20 20 20 20 
0272   14A7 20 20 20 20 
0272   14AB 20 20 20 20 
0272   14AF 20 20 20 20 
0272   14B3 20 20 20 20 
0272   14B7 20 20 20 20 
0272   14BB 20 20 20 20 
0272   14BF 20 20 20 20 
0272   14C3 20 20 20 20 
0272   14C7 20 20 20 20 
0272   14CB 20 20 20 20 
0272   14CF 20 20 20 20 
0272   14D3 20 20 20 20 
0272   14D7 20 20 20 20 
0272   14DB 20 20 20 20 
0272   14DF 20 20 20 20 
0272   14E3 20 20 20 20 
0272   14E7 20 20 20 20 
0272   14EB 20 20 20 20 
0272   14EF 20 20 20 20 
0272   14F3 20 20 20 20 
0272   14F7 20 20 20 20 
0272   14FB 20 20 20 20 
0272   14FF 20 20 20 20 
0272   1503 20 20 20 20 
0272   1507 20 20 20 20 
0272   150B 20 20 20 20 
0272   150F 20 20 20 20 
0272   1513 20 20 20 20 
0272   1517 20 20 20 20 
0272   151B 20 20 20 20 
0272   151F 20 20 20 20 
0272   1523 20 20 20 20 
0272   1527 20 20 20 20 
0272   152B 20 20 20 20 
0272   152F 20 20 20 20 
0272   1533 20 20 20 20 
0272   1537 20 20 20 20 
0272   153B 20 20 20 20 
0272   153F 20 20 20 20 
0272   1543 20 20 20 20 
0272   1547 20 20 20 20 
0272   154B 20 20 20 20 
0272   154F 20 20 20 20 
0272   1553 20 20 20 20 
0272   1557 20 20 20 20 
0272   155B 20 20 20 20 
0272   155F 20 20 20 20 
0272   1563 20 20 20 20 
0272   1567 20 20 20 20 
0272   156B 20 20 20 20 
0272   156F 20 20 20 20 
0272   1573 20 20 20 20 
0272   1577 20 20 20 20 
0272   157B 20 20 20 20 
0272   157F 20 20 20 20 
0272   1583 20 20 20 20 
0272   1587 20 20 20 20 
0272   158B 20 20 20 20 
0272   158F 20 20 20 20 
0272   1593 20 20 20 20 
0272   1597 20 20 20 20 
0272   159B 20 20 20 20 
0272   159F 20 20 20 20 
0272   15A3 20 20 20 20 
0272   15A7 20 20 20 20 
0272   15AB 20 20 20 20 
0272   15AF 20 20 20 20 
0272   15B3 20 20 20 20 
0272   15B7 20 20 20 20 
0272   15BB 20 20 20 20 
0272   15BF 20 20 20 20 
0272   15C3 20 20 20 20 
0272   15C7 20 20 20 20 
0272   15CB 20 20 20 20 
0272   15CF 20 20 20 20 
0272   15D3 20 20 20 20 
0272   15D7 20 20 20 20 
0272   15DB 20 20 20 20 
0272   15DF 20 20 20 20 
0272   15E3 20 20 20 20 
0272   15E7 20 20 20 20 
0272   15EB 20 20 20 20 
0272   15EF 20 20 20 20 
0272   15F3 20 20 20 20 
0272   15F7 20 20 20 20 
0272   15FB 20 20 20 20 
0272   15FF 20 20 20 20 
0272   1603 20 20 20 20 
0272   1607 20 20 20 20 
0272   160B 20 20 20 20 
0272   160F 20 20 20 20 
0272   1613 20 20 20 20 
0272   1617 20 20 20 20 
0272   161B 20 20 20 20 
0272   161F 20 20 20 20 
0272   1623 20 20 20 20 
0272   1627 20 20 20 20 
0272   162B 20 20 20 20 
0272   162F 20 20 20 20 
0272   1633 20 20 20 20 
0272   1637 20 20 20 20 
0272   163B 20 20 20 20 
0272   163F 20 20 20 20 
0272   1643 20 20 20 20 
0272   1647 20 20 20 20 
0272   164B 20 20 20 20 
0272   164F 20 20 20 20 
0272   1653 20 20 20 20 
0272   1657 20 20 20 20 
0272   165B 20 20 20 20 
0272   165F 20 20 20 20 
0272   1663 20 20 20 20 
0272   1667 20 20 20 20 
0272   166B 20 20 20 20 
0272   166F 20 20 20 20 
0272   1673 20 20 20 20 
0272   1677 20 20 20 20 
0272   167B 20 20 20 20 
0272   167F 20 20 20 20 
0272   1683 20 20 20 20 
0272   1687 20 20 20 20 
0272   168B 20 20 20 20 
0272   168F 20 20 20 20 
0272   1693 20 20 20 20 
0272   1697 20 20 20 20 
0272   169B 20 20 20 20 
0272   169F 20 20 20 20 
0272   16A3 20 20 20 20 
0272   16A7 20 20 20 20 
0272   16AB 20 20 20 20 
0272   16AF 20 20 20 20 
0272   16B3 20 20 20 20 
0272   16B7 20 20 20 20 
0272   16BB 20 20 20 20 
0272   16BF 20 20 20 20 
0272   16C3 20 20 20 20 
0272   16C7 20 20 20 20 
0272   16CB 20 20 20 20 
0272   16CF 20 20 20 20 
0272   16D3 20 20 20 20 
0272   16D7 20 20 20 20 
0272   16DB 20 20 20 20 
0272   16DF 20 20 20 20 
0272   16E3 20 20 20 20 
0272   16E7 20 20 20 20 
0272   16EB 20 20 20 20 
0272   16EF 20 20 20 20 
0272   16F3 20 20 20 20 
0272   16F7 20 20 20 20 
0272   16FB 20 20 20 20 
0272   16FF 20 20 20 20 
0272   1703 20 20 20 20 
0272   1707 20 20 20 20 
0272   170B 20 20 20 20 
0272   170F 20 20 20 20 
0272   1713 20 20 20 20 
0272   1717 20 20 20 20 
0272   171B 20 20 20 20 
0272   171F 20 20 20 20 
0272   1723 20 20 20 20 
0272   1727 20 20 20 20 
0272   172B 20 20 20 20 
0272   172F 20 20 20 20 
0272   1733 20 20 20 20 
0272   1737 20 20 20 20 
0272   173B 20 20 20 20 
0272   173F 20 20 20 20 
0272   1743 20 20 20 20 
0272   1747 20 20 20 20 
0272   174B 20 20 20 20 
0272   174F 20 20 20 20 
0272   1753 20 20 20 20 
0272   1757 20 20 20 20 
0272   175B 20 20 20 20 
0272   175F 20 20 20 20 
0272   1763 20 20 20 20 
0272   1767 20 20 20 20 
0272   176B 20 20 20 20 
0272   176F 20 20 20 20 
0272   1773 20 20 20 20 
0272   1777 20 20 20 20 
0272   177B 20 20 20 20 
0272   177F 20 20 20 20 
0272   1783 20 20 20 20 
0272   1787 20 20 20 20 
0272   178B 20 20 20 20 
0272   178F 20 20 20 20 
0272   1793 20 20 20 20 
0272   1797 20 20 20 20 
0272   179B 20 20 20 20 
0272   179F 20 20 20 20 
0272   17A3 20 20 20 20 
0272   17A7 20 20 20 20 
0272   17AB 20 20 20 20 
0272   17AF 20 20 20 20 
0272   17B3 20 20 20 20 
0272   17B7 20 20 20 20 
0272   17BB 20 20 20 20 
0272   17BF 20 20 20 20 
0272   17C3 20 20 20 20 
0272   17C7 20 20 20 20 
0272   17CB 20 20 20 20 
0272   17CF 20 20 20 20 
0272   17D3 20 20 20 20 
0272   17D7 20 20 20 20 
0272   17DB 20 20 20 20 
0272   17DF 20 20 20 20 
0272   17E3 20 20 20 20 
0272   17E7 20 20 20 20 
0272   17EB 20 20 20 20 
0272   17EF 20 20 20 20 
0272   17F3 20 20 20 20 
0272   17F7 20 20 20 20 
0272   17FB 20 20 20 20 
0272   17FF 20 20 20 20 
0272   1803 20 20 20 20 
0272   1807 20 20 20 20 
0272   180B 20 20 20 20 
0272   180F 20 20 20 20 
0272   1813 20 20 20 20 
0272   1817 20 20 20 20 
0272   181B 20 20 20 20 
0272   181F 20 20 20 20 
0272   1823 20 20 20 20 
0272   1827 20 20 20 20 
0272   182B 20 20 20 20 
0272   182F 20 20 20 20 
0272   1833 20 20 20 20 
0272   1837 20 20 20 20 
0272   183B 20 20 20 20 
0272   183F 20 20 20 20 
0272   1843 20 20 20 20 
0272   1847 20 20 20 20 
0272   184B 20 20 20 20 
0272   184F 20 20 20 20 
0272   1853 20 20 20 20 
0272   1857 20 20 20 20 
0272   185B 20 20 20 20 
0272   185F 20 20 20 20 
0272   1863 20 20 20 20 
0272   1867 20 20 20 20 
0272   186B 20 20 20 20 
0272   186F 20 20 20 20 
0272   1873 20 20 20 20 
0272   1877 20 20 20 20 
0272   187B 20 20 20 20 
0272   187F 20 20 20 20 
0272   1883 20 20 20 20 
0272   1887 20 20 20 20 
0272   188B 20 20 20 20 
0272   188F 20 20 20 20 
0272   1893 20 20 20 20 
0272   1897 20 20 20 20 
0272   189B 20 20 20 20 
0272   189F 20 20 20 20 
0272   18A3 20 20 20 20 
0272   18A7 20 20 20 20 
0272   18AB 20 20 20 20 
0272   18AF 20 20 20 20 
0272   18B3 20 20 20 20 
0272   18B7 20 20 20 20 
0272   18BB 20 20 20 20 
0272   18BF 20 20 20 20 
0272   18C3 20 20 20 20 
0272   18C7 20 20 20 20 
0272   18CB 20 20 20 20 
0272   18CF 20 20 20 20 
0272   18D3 20 20 20 20 
0272   18D7 20 20 20 20 
0272   18DB 20 20 20 20 
0272   18DF 20 20 20 20 
0272   18E3 20 20 20 20 
0272   18E7 20 20 20 20 
0272   18EB 20 20 20 20 
0272   18EF 20 20 20 20 
0272   18F3 20 20 20 20 
0272   18F7 20 20 20 20 
0272   18FB 20 20 20 20 
0272   18FF 20 20 20 20 
0272   1903 20 20 20 20 
0272   1907 20 20 20 20 
0272   190B 20 20 20 20 
0272   190F 20 20 20 20 
0272   1913 20 20 20 20 
0272   1917 20 20 20 20 
0272   191B 20 20 20 20 
0272   191F 20 20 20 20 
0272   1923 20 20 20 20 
0272   1927 20 20 20 20 
0272   192B 20 20 20 20 
0272   192F 20 20 20 20 
0272   1933 20 20 20 20 
0272   1937 20 20 20 20 
0272   193B 20 20 20 20 
0272   193F 20 20 20 20 
0272   1943 20 20 20 20 
0272   1947 20 20 20 20 
0272   194B 20 20 20 20 
0272   194F 20 20 20 20 
0272   1953 20 20 20 20 
0272   1957 20 20 20 20 
0272   195B 20 20 20 20 
0272   195F 20 20 20 20 
0272   1963 20 20 20 20 
0272   1967 20 20 20 20 
0272   196B 20 20 20 20 
0272   196F 20 20 20 20 
0272   1973 20 20 20 20 
0272   1977 20 20 20 20 
0272   197B 20 20 20 20 
0272   197F 20 20 20 20 
0272   1983 20 20 20 20 
0272   1987 20 20 20 20 
0272   198B 20 20 20 20 
0272   198F 20 20 20 20 
0272   1993 20 20 20 20 
0272   1997 20 20 20 20 
0272   199B 20 20 20 20 
0272   199F 20 20 20 20 
0272   19A3 20 20 20 20 
0272   19A7 20 20 20 20 
0272   19AB 20 20 20 20 
0272   19AF 20 20 20 20 
0272   19B3 20 20 20 20 
0272   19B7 20 20 20 20 
0272   19BB 20 20 20 20 
0272   19BF 20 20 20 20 
0272   19C3 20 20 20 20 
0272   19C7 20 20 20 20 
0272   19CB 20 20 20 20 
0272   19CF 20 20 20 20 
0272   19D3 20 20 20 20 
0272   19D7 20 20 20 20 
0272   19DB 20 20 20 20 
0272   19DF 20 20 20 20 
0272   19E3 20 20 20 20 
0272   19E7 20 20 20 20 
0272   19EB 20 20 20 20 
0272   19EF 20 20 20 20 
0272   19F3 20 20 20 20 
0272   19F7 20 20 20 20 
0272   19FB 20 20 20 20 
0272   19FF 20 20 20 20 
0272   1A03 20 20 20 20 
0272   1A07 20 20 20 20 
0272   1A0B 20 20 20 20 
0272   1A0F 20 20 20 20 
0272   1A13 20 20 20 20 
0272   1A17 20 20 20 20 
0272   1A1B 20 20 20 20 
0272   1A1F 20 20 20 20 
0272   1A23 20 20 20 20 
0272   1A27 20 20 20 20 
0272   1A2B 20 20 20 20 
0272   1A2F 20 20 20 20 
0272   1A33 20 20 20 20 
0272   1A37 20 20 20 20 
0272   1A3B 20 20 20 20 
0272   1A3F 20 20 20 20 
0272   1A43 20 20 20 20 
0272   1A47 20 20 20 20 
0272   1A4B 20 20 20 20 
0272   1A4F 20 20 20 20 
0272   1A53 20 20 20 20 
0272   1A57 20 20 20 20 
0272   1A5B 20 20 20 20 
0272   1A5F 20 20 20 20 
0272   1A63 20 20 20 20 
0272   1A67 20 20 20 20 
0272   1A6B 20 20 20 20 
0272   1A6F 20 20 20 20 
0272   1A73 20 20 20 20 
0272   1A77 20 20 20 20 
0272   1A7B 20 20 20 20 
0272   1A7F 20 20 20 20 
0272   1A83 20 20 20 20 
0272   1A87 20 20 20 20 
0272   1A8B 20 20 20 20 
0272   1A8F 20 20 20 20 
0272   1A93 20 20 20 20 
0272   1A97 20 20 20 20 
0272   1A9B 20 20 20 20 
0272   1A9F 20 20 20 20 
0272   1AA3 20 20 20 20 
0272   1AA7 20 20 20 20 
0272   1AAB 20 20 20 20 
0272   1AAF 20 20 20 20 
0272   1AB3 20 20 20 20 
0272   1AB7 20 20 20 20 
0272   1ABB 20 20 20 20 
0272   1ABF 20 20 20 20 
0272   1AC3 20 20 20 20 
0272   1AC7 20 20 20 20 
0272   1ACB 20 20 20 20 
0272   1ACF 20 20 20 20 
0272   1AD3 20 20 20 20 
0272   1AD7 20 20 20 20 
0272   1ADB 20 20 20 20 
0272   1ADF 20 20 20 20 
0272   1AE3 20 20 20 20 
0272   1AE7 20 20 20 20 
0272   1AEB 20 20 20 20 
0272   1AEF 20 20 20 20 
0272   1AF3 20 20 20 20 
0272   1AF7 20 20 20 20 
0272   1AFB 20 20 20 20 
0272   1AFF 20 20 20 20 
0272   1B03 20 20 20 20 
0272   1B07 20 20 20 20 
0272   1B0B 20 20 20 20 
0272   1B0F 20 20 20 20 
0272   1B13 20 20 20 20 
0272   1B17 20 20 20 20 
0272   1B1B 20 20 20 20 
0272   1B1F 20 20 20 20 
0272   1B23 20 20 20 20 
0272   1B27 20 20 20 20 
0272   1B2B 20 20 20 20 
0272   1B2F 20 20 20 20 
0272   1B33 20 20 20 20 
0272   1B37 20 20 20 20 
0272   1B3B 20 20 20 20 
0272   1B3F 20 20 20 20 
0272   1B43 20 20 20 20 
0272   1B47 20 20 20 20 
0272   1B4B 20 20 20 20 
0272   1B4F 20 20 20 20 
0272   1B53 20 20 20 20 
0272   1B57 20 20 20 20 
0272   1B5B 20 20 20 20 
0272   1B5F 20 20 20 20 
0272   1B63 20 20 20 20 
0272   1B67 20 20 20 20 
0272   1B6B 20 20 20 20 
0272   1B6F 20 20 20 20 
0272   1B73 20 20 20 20 
0272   1B77 20 20 20 20 
0272   1B7B 20 20 20 20 
0272   1B7F 20 20 20 20 
0272   1B83 20 20 20 20 
0272   1B87 20 20 20 20 
0272   1B8B 20 20 20 20 
0272   1B8F 20 20 20 20 
0272   1B93 20 20 20 20 
0272   1B97 20 20 20 20 
0272   1B9B 20 20 20 20 
0272   1B9F 20 20 20 20 
0272   1BA3 20 20 20 20 
0272   1BA7 20 20 20 20 
0272   1BAB 20 20 20 20 
0272   1BAF 20 20 20 20 
0272   1BB3 20 20 20 20 
0272   1BB7 20 20 20 20 
0272   1BBB 20 20 20 20 
0272   1BBF 20 20 20 20 
0272   1BC3 20 20 20 20 
0272   1BC7 20 20 20 20 
0272   1BCB 20 20 20 20 
0272   1BCF 20 20 20 20 
0272   1BD3 20 20 20 20 
0272   1BD7 20 20 20 20 
0272   1BDB 20 20 20 20 
0272   1BDF 20 20 20 20 
0272   1BE3 20 20 20 20 
0272   1BE7 20 20 20 20 
0272   1BEB 20 20 20 20 
0272   1BEF 20 20 20 20 
0272   1BF3 20 20 20 20 
0272   1BF7 20 20 20 20 
0272   1BFB 20 20 20 20 
0272   1BFF 20 20 20 20 
0272   1C03 20 20 20 20 
0272   1C07 20 20 20 20 
0272   1C0B 20 20 20 20 
0272   1C0F 20 20 20 20 
0272   1C13 20 20 20 20 
0272   1C17 20 20 20 20 
0272   1C1B 20 20 20 20 
0272   1C1F 20 20 20 20 
0272   1C23 20 20 20 20 
0272   1C27 20 20 20 20 
0272   1C2B 20 20 20 20 
0272   1C2F 20 20 20 20 
0272   1C33 20 20 20 20 
0272   1C37 20 20 20 20 
0272   1C3B 20 20 20 20 
0272   1C3F 20 20 20 20 
0272   1C43 20 20 20 20 
0272   1C47 20 20 20 20 
0272   1C4B 20 20 20 20 
0272   1C4F 20 20 20 20 
0272   1C53 20 20 20 20 
0272   1C57 20 20 20 20 
0272   1C5B 20 20 20 20 
0272   1C5F 20 20 20 20 
0272   1C63 20 20 20 20 
0272   1C67 20 20 20 20 
0272   1C6B 20 20 20 20 
0272   1C6F 20 20 20 20 
0272   1C73 20 20 20 20 
0272   1C77 20 20 20 20 
0272   1C7B 20 20 20 20 
0272   1C7F 20 20 20 20 
0272   1C83 20 20 20 20 
0272   1C87 20 20 20 20 
0272   1C8B 20 20 20 20 
0272   1C8F 20 20 20 20 
0272   1C93 20 20 20 20 
0272   1C97 20 20 20 20 
0272   1C9B 20 20 20 20 
0272   1C9F 20 20 20 20 
0272   1CA3 20 20 20 20 
0272   1CA7 20 20 20 20 
0272   1CAB 20 20 20 20 
0272   1CAF 20 20 20 20 
0272   1CB3 20 20 20 20 
0272   1CB7 20 20 20 20 
0272   1CBB 20 20 20 20 
0272   1CBF 20 20 20 20 
0272   1CC3 20 20 20 20 
0272   1CC7 20 20 20 20 
0272   1CCB 20 20 20 20 
0272   1CCF 20 20 20 20 
0272   1CD3 20 20 20 20 
0272   1CD7 20 20 20 20 
0272   1CDB 20 20 20 20 
0272   1CDF 20 20 20 20 
0272   1CE3 20 20 20 20 
0272   1CE7 20 20 20 20 
0272   1CEB 20 20 20 20 
0272   1CEF 20 20 20 20 
0272   1CF3 20 20 20 20 
0272   1CF7 20 20 20 20 
0272   1CFB 20 20 20 20 
0272   1CFF 20 20 20 20 
0272   1D03 20 20 20 20 
0272   1D07 20 20 20 20 
0272   1D0B 20 20 20 20 
0272   1D0F 20 20 20 20 
0272   1D13 20 20 20 20 
0272   1D17 20 20 20 20 
0272   1D1B 20 20 20 20 
0272   1D1F 20 20 20 20 
0272   1D23 20 20 20 20 
0272   1D27 20 20 20 20 
0272   1D2B 20 20 20 20 
0272   1D2F 20 20 20 20 
0272   1D33 20 20 20 20 
0272   1D37 20 20 20 20 
0272   1D3B 20 20 20 20 
0272   1D3F 20 20 20 20 
0272   1D43 20 20 20 20 
0272   1D47 20 20 20 20 
0272   1D4B 20 20 20 20 
0272   1D4F 20 20 20 20 
0272   1D53 20 20 20 20 
0272   1D57 20 20 20 20 
0272   1D5B 20 20 20 20 
0272   1D5F 20 20 20 20 
0272   1D63 20 20 20 20 
0272   1D67 20 20 20 20 
0272   1D6B 20 20 20 20 
0272   1D6F 20 20 20 20 
0272   1D73 20 20 20 20 
0272   1D77 20 20 20 20 
0272   1D7B 20 20 20 20 
0272   1D7F 20 20 20 20 
0272   1D83 20 20 20 20 
0272   1D87 20 20 20 20 
0272   1D8B 20 20 20 20 
0272   1D8F 20 20 20 20 
0272   1D93 20 20 20 20 
0272   1D97 20 20 20 20 
0272   1D9B 20 20 20 20 
0272   1D9F 20 20 20 20 
0272   1DA3 20 20 20 20 
0272   1DA7 20 20 20 20 
0272   1DAB 20 20 20 20 
0272   1DAF 20 20 20 20 
0272   1DB3 20 20 20 20 
0272   1DB7 20 20 20 20 
0272   1DBB 20 20 20 20 
0272   1DBF 20 20 20 20 
0272   1DC3 20 20 20 20 
0272   1DC7 20 20 20 20 
0272   1DCB 20 20 20 20 
0272   1DCF 20 20 20 20 
0272   1DD3 20 20 20 20 
0272   1DD7 20 20 20 20 
0272   1DDB 20 20 20 20 
0272   1DDF 20 20 20 20 
0272   1DE3 20 20 20 20 
0272   1DE7 20 20 20 20 
0272   1DEB 20 20 20 20 
0272   1DEF 20 20 20 20 
0272   1DF3 20 20 20 20 
0272   1DF7 20 20 20 20 
0272   1DFB 20 20 20 20 
0272   1DFF 20 20 20 20 
0272   1E03 20 20 20 20 
0272   1E07 20 20 20 20 
0272   1E0B 20 20 20 20 
0272   1E0F 20 20 20 20 
0272   1E13 20 20 20 20 
0272   1E17 20 20 20 20 
0272   1E1B 20 20 20 20 
0272   1E1F 20 20 20 20 
0272   1E23 20 20 20 20 
0272   1E27 20 20 20 20 
0272   1E2B 20 20 20 20 
0272   1E2F 20 20 20 20 
0272   1E33 20 20 20 20 
0272   1E37 20 20 20 20 
0272   1E3B 20 20 20 20 
0272   1E3F 20 20 20 20 
0272   1E43 20 20 20 20 
0272   1E47 20 20 20 20 
0272   1E4B 20 20 20 20 
0272   1E4F 20 20 20 20 
0272   1E53 20 20 20 20 
0272   1E57 20 20 20 20 
0272   1E5B 20 20 20 20 
0272   1E5F 20 20 20 20 
0272   1E63 20 20 20 20 
0272   1E67 20 20 20 20 
0272   1E6B 20 20 20 20 
0272   1E6F 20 20 20 20 
0272   1E73 20 20 20 20 
0272   1E77 20 20 20 20 
0272   1E7B 20 20 20 20 
0272   1E7F 20 20 20 20 
0272   1E83 20 20 20 20 
0272   1E87 20 20 20 20 
0272   1E8B 20 20 20 20 
0272   1E8F 20 20 20 20 
0272   1E93 20 20 20 20 
0272   1E97 20 20 20 20 
0272   1E9B 20 20 20 20 
0272   1E9F 20 20 20 20 
0272   1EA3 20 20 20 20 
0272   1EA7 20 20 20 20 
0272   1EAB 20 20 20 20 
0272   1EAF 20 20 20 20 
0272   1EB3 20 20 20 20 
0272   1EB7 20 20 20 20 
0272   1EBB 20 20 20 20 
0272   1EBF 20 20 20 20 
0272   1EC3 20 20 20 20 
0272   1EC7 20 20 20 20 
0272   1ECB 20 20 20 20 
0272   1ECF 20 20 20 20 
0272   1ED3 20 20 20 20 
0272   1ED7 20 20 20 20 
0272   1EDB 20 20 20 20 
0272   1EDF 20 20 20 20 
0272   1EE3 20 20 20 20 
0272   1EE7 20 20 20 20 
0272   1EEB 20 20 20 20 
0272   1EEF 20 20 20 20 
0272   1EF3 20 20 20 20 
0272   1EF7 20 20 20 20 
0272   1EFB 20 20 20 20 
0272   1EFF 20 20 20 20 
0272   1F03 20 20 20 20 
0272   1F07 20 20 20 20 
0272   1F0B 20 20 20 20 
0272   1F0F 20 20 20 20 
0272   1F13 20 20 20 20 
0272   1F17 20 20 20 20 
0272   1F1B 20 20 20 20 
0272   1F1F 20 20 20 20 
0272   1F23 20 20 20 20 
0272   1F27 20 20 20 20 
0272   1F2B 20 20 20 20 
0272   1F2F 20 20 20 20 
0272   1F33 20 20 20 20 
0272   1F37 20 20 20 20 
0272   1F3B 20 20 20 20 
0272   1F3F 20 20 20 20 
0272   1F43 20 20 20 20 
0272   1F47 20 20 20 20 
0272   1F4B 20 20 20 20 
0272   1F4F 20 20 20 20 
0272   1F53 20 20 20 20 
0272   1F57 20 20 20 20 
0272   1F5B 20 20 20 20 
0272   1F5F 20 20 20 20 
0272   1F63 20 20 20 20 
0272   1F67 20 20 20 20 
0272   1F6B 20 20 20 20 
0272   1F6F 20 20 20 20 
0272   1F73 20 20 20 20 
0272   1F77 20 20 20 20 
0272   1F7B 20 20 20 20 
0272   1F7F 20 20 20 20 
0272   1F83 20 20 20 20 
0272   1F87 20 20 20 20 
0272   1F8B 20 20 20 20 
0272   1F8F 20 20 20 20 
0272   1F93 20 20 20 20 
0272   1F97 20 20 20 20 
0272   1F9B 20 20 20 20 
0272   1F9F 20 20 20 20 
0272   1FA3 20 20 20 20 
0272   1FA7 20 20 20 20 
0272   1FAB 20 20 20 20 
0272   1FAF 20 20 20 20 
0272   1FB3 20 20 20 20 
0272   1FB7 20 20 20 20 
0272   1FBB 20 20 20 20 
0272   1FBF 20 20 20 20 
0272   1FC3 20 20 20 20 
0272   1FC7 20 20 20 20 
0272   1FCB 20 20 20 20 
0272   1FCF 20 20 20 20 
0272   1FD3 20 20 20 20 
0272   1FD7 20 20 20 20 
0272   1FDB 20 20 20 20 
0272   1FDF 20 20 20 20 
0272   1FE3 20 20 20 20 
0272   1FE7 20 20 20 20 
0272   1FEB 20 20 20 20 
0272   1FEF 20 20 20 20 
0272   1FF3 20 20 20 20 
0272   1FF7 20 20 20 20 
0272   1FFB 20 20 20 20 
0272   1FFF 20 20 20 20 
0272   2003 20 20 20 20 
0272   2007 20 20 20 20 
0272   200B 20 20 20 20 
0272   200F 20 20 20 20 
0272   2013 20 20 20 20 
0272   2017 20 20 20 20 
0272   201B 20 20 20 20 
0272   201F 20 20 20 20 
0272   2023 20 20 20 20 
0272   2027 20 20 20 20 
0272   202B 20 20 20 20 
0272   202F 20 20 20 20 
0272   2033 20 20 20 20 
0272   2037 20 20 20 20 
0272   203B 20 20 20 20 
0272   203F 20 20 20 20 
0272   2043 20 20 20 20 
0272   2047 20 20 20 20 
0272   204B 20 20 20 20 
0272   204F 20 20 20 20 
0272   2053 20 20 20 20 
0272   2057 20 20 20 20 
0272   205B 20 20 20 20 
0272   205F 20 20 20 20 
0272   2063 20 20 20 20 
0272   2067 20 20 20 20 
0272   206B 20 20 20 20 
0272   206F 20 20 20 20 
0272   2073 20 20 20 20 
0272   2077 20 20 20 20 
0272   207B 20 20 20 20 
0272   207F 20 20 20 20 
0272   2083 20 20 20 20 
0272   2087 20 20 20 20 
0272   208B 20 20 20 20 
0272   208F 20 20 20 20 
0272   2093 20 20 20 20 
0272   2097 20 20 20 20 
0272   209B 20 20 20 20 
0272   209F 20 20 20 20 
0272   20A3 20 20 20 20 
0272   20A7 20 20 20 20 
0272   20AB 20 20 20 20 
0272   20AF 20 20 20 20 
0272   20B3 20 20 20 20 
0272   20B7 20 20 20 20 
0272   20BB 20 20 20 20 
0272   20BF 20 20 20 20 
0272   20C3 20 20 20 20 
0272   20C7 20 20 20 20 
0272   20CB 20 20 20 20 
0272   20CF 20 20 20 20 
0272   20D3 20 20 20 20 
0272   20D7 20 20 20 20 
0272   20DB 20 20 20 20 
0272   20DF 20 20 20 20 
0272   20E3 20 20 20 20 
0272   20E7 20 20 20 20 
0272   20EB 20 20 20 20 
0272   20EF 20 20 20 20 
0272   20F3 20 20 20 20 
0272   20F7 20 20 20 20 
0272   20FB 20 20 20 20 
0272   20FF 20 20 20 20 
0272   2103 20 20 20 20 
0272   2107 20 20 20 20 
0272   210B 20 20 20 20 
0272   210F 20 20 20 20 
0272   2113 20 20 20 20 
0272   2117 20 20 20 20 
0272   211B 20 20 20 20 
0272   211F 20 20 20 20 
0272   2123 20 20 20 20 
0272   2127 20 20 20 20 
0272   212B 20 20 20 20 
0272   212F 20 20 20 20 
0272   2133 20 20 20 20 
0273   2137             board2:		
0274   2137             
0275   2137             
0276   2137             .end
0277   2137             
tasm: Number of errors = 0
