0001   0000             .include "kernel.exp"
0001+  0000             PROC_TEXT_ORG    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_IDE          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_fileio       .EQU  $0004
0007+  0000             sys_fork         .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pauseproc    .EQU  $0009
0012+  0000             sys_resumeproc   .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0002   0000             
0003   0400             .org PROC_TEXT_ORG			; origin at 1024
0004   0400             
0005   0400             main:
0006   0400 07 E6 04    	call init_board
0007   0403 07 0F 05    	call init_board2
0008   0406 19 00       	mov al, 0
0009   0408 3D B7 05    	mov [parity], al
0010   040B             main_loop:
0011   040B             
0012   040B 10 01 00    	mov a, 1
0013   040E 42 B3 05    	mov [line], a
0014   0411 42 B5 05    	mov [col], a
0015   0414             board_lines:;{
0016   0414 10 01 00    	mov a, 1
0017   0417 42 B5 05    	mov [col], a
0018   041A             board_cols:;{
0019   041A 07 70 04    	call update_cell
0020   041D 14 B5 05    	mov a, [col]
0021   0420 77          	inc a
0022   0421 42 B5 05    	mov [col], a
0023   0424 AF 7F 00    	cmp a, width-1
0024   0427 C7 1A 04    	jne board_cols
0025   042A             ;}	
0026   042A 14 B3 05    	mov a, [line]
0027   042D 77          	inc a
0028   042E 42 B3 05    	mov [line], a
0029   0431 AF 2F 00    	cmp a, height-1
0030   0434 C7 14 04    	jne board_lines
0031   0437             ;}
0032   0437             	
0033   0437 3B B8 05    	mov d, s_clear
0034   043A 07 0C 08    	call puts
0035   043D 07 B0 04    	call print_board
0036   0440             	
0037   0440 1D B7 05    	mov al, [parity]
0038   0443 96          	not al
0039   0444 3D B7 05    	mov [parity], al
0040   0447             	
0041   0447 0A 0B 04    	jmp main_loop
0042   044A             
0043   044A             check_parity_inv:
0044   044A D7          	push a
0045   044B 1D B7 05    	mov al, [parity]
0046   044E B9 00       	cmp al, 0
0047   0450 C6 58 04    	je parity_inv_even
0048   0453 3B 44 09    	mov d, board
0049   0456 E4          	pop a
0050   0457 09          	ret
0051   0458             parity_inv_even:
0052   0458 3B 44 09    	mov d, board
0053   045B E4          	pop a
0054   045C 09          	ret
0055   045D             
0056   045D             check_parity:
0057   045D D7          	push a
0058   045E 1D B7 05    	mov al, [parity]
0059   0461 B9 00       	cmp al, 0
0060   0463 C6 6B 04    	je parity_even
0061   0466 3B 44 09    	mov d, board
0062   0469 E4          	pop a
0063   046A 09          	ret
0064   046B             parity_even:
0065   046B 3B 44 09    	mov d, board
0066   046E E4          	pop a
0067   046F 09          	ret
0068   0470             
0069   0470             update_cell:
0070   0470 29 B3 05    	mov b, [line]
0071   0473 10 80 00    	mov a, width
0072   0476 AC          	mul a, b
0073   0477 14 B5 05    	mov a, [col]
0074   047A 56          	add b, a
0075   047B D8          	push b				; save cell number
0076   047C 07 5D 04    	call check_parity
0077   047F 5A          	add d, b
0078   0480 1E          	mov al, [d]
0079   0481 B9 2A       	cmp al, '*'
0080   0483 C6 98 04    	je live_cell
0081   0486 E4          	pop a
0082   0487 07 38 05    	call get_live_neighbours
0083   048A C0 03 00    	cmp b, 3
0084   048D C7 97 04    	jne update_cell_end
0085   0490 07 4A 04    	call check_parity_inv
0086   0493 59          	add d, a
0087   0494 19 2A       	mov al, '*'
0088   0496 3E          	mov [d], al
0089   0497             update_cell_end:
0090   0497 09          	ret
0091   0498             live_cell:
0092   0498 E4          	pop a
0093   0499 07 38 05    	call get_live_neighbours
0094   049C C0 02 00    	cmp b, 2
0095   049F C6 97 04    	je update_cell_end	; continue alive
0096   04A2 C0 03 00    	cmp b, 3
0097   04A5 C6 97 04    	je update_cell_end	; continue alive
0098   04A8 07 4A 04    	call check_parity_inv
0099   04AB 59          	add d, a
0100   04AC 19 20       	mov al, ' '
0101   04AE 3E          	mov [d], al
0102   04AF 09          	ret
0103   04B0             
0104   04B0             print_board:
0105   04B0 10 00 00    	mov a, 0
0106   04B3 42 B1 05    	mov [c], a
0107   04B6 42 AF 05    	mov [l], a
0108   04B9 07 4A 04    	call check_parity_inv
0109   04BC             print_L0:
0110   04BC 1E          	mov al, [d]
0111   04BD 23          	mov ah, al
0112   04BE 07 D2 06    	call putchar
0113   04C1 79          	inc d
0114   04C2 14 B1 05    	mov a, [c]
0115   04C5 77          	inc a
0116   04C6 42 B1 05    	mov [c], a
0117   04C9 AF 80 00    	cmp a, width
0118   04CC C7 BC 04    	jne print_L0
0119   04CF 07 B9 07    	call printnl
0120   04D2 10 00 00    	mov a, 0
0121   04D5 42 B1 05    	mov [c], a
0122   04D8 14 AF 05    	mov a, [l]
0123   04DB 77          	inc a
0124   04DC 42 AF 05    	mov [l], a
0125   04DF AF 30 00    	cmp a, height
0126   04E2 C7 BC 04    	jne print_L0
0127   04E5 09          	ret
0128   04E6             
0129   04E6             init_board:
0130   04E6 3B 44 09    	mov d, board
0131   04E9 26 00 00    	mov b, 0
0132   04EC             init_L0:
0133   04EC 1B          	mov al, bl
0134   04ED 87 05       	and al, 5
0135   04EF B9 05       	cmp al, 5
0136   04F1 C6 02 05    	je init_odd
0137   04F4 19 2A       	mov al, '*'
0138   04F6 3E          	mov [d], al
0139   04F7 79          	inc d
0140   04F8 FD 77       	inc b
0141   04FA 78          	inc c
0142   04FB C0 00 18    	cmp b, width*height
0143   04FE C7 EC 04    	jne init_L0
0144   0501 09          	ret
0145   0502             init_odd:
0146   0502 19 20       	mov al, ' '
0147   0504 3E          	mov [d], al
0148   0505 79          	inc d
0149   0506 FD 77       	inc b
0150   0508 C0 00 18    	cmp b, width*height
0151   050B C7 EC 04    	jne init_L0
0152   050E 09          	ret
0153   050F             
0154   050F             init_board2:
0155   050F 3B 44 21    	mov d, board2
0156   0512 26 00 00    	mov b, 0
0157   0515             init_L02:
0158   0515 1B          	mov al, bl
0159   0516 87 05       	and al, 5
0160   0518 B9 05       	cmp al, 5
0161   051A C6 2B 05    	je init_odd2
0162   051D 19 2A       	mov al, '*'
0163   051F 3E          	mov [d], al
0164   0520 79          	inc d
0165   0521 FD 77       	inc b
0166   0523 78          	inc c
0167   0524 C0 00 18    	cmp b, width*height
0168   0527 C7 15 05    	jne init_L02
0169   052A 09          	ret
0170   052B             init_odd2:
0171   052B 19 20       	mov al, ' '
0172   052D 3E          	mov [d], al
0173   052E 79          	inc d
0174   052F FD 77       	inc b
0175   0531 C0 00 18    	cmp b, width*height
0176   0534 C7 15 05    	jne init_L02
0177   0537 09          	ret
0178   0538             ; find total neighbours at a point
0179   0538             ; A = position
0180   0538             ; B = result
0181   0538             get_live_neighbours:
0182   0538 D7          	push a
0183   0539 DA          	push d
0184   053A D9          	push c
0185   053B 38 00 00    	mov c, 0	; reset number
0186   053E             
0187   053E 07 5D 04    	call check_parity
0188   0541 59          	add d, a
0189   0542 63 81 00    	sub d, width+1
0190   0545 32          	mov bl, [d]
0191   0546 C1 2A       	cmp bl, '*'
0192   0548 C7 4C 05    	jne jmp1
0193   054B 78          	inc c
0194   054C             jmp1:
0195   054C 07 5D 04    	call check_parity
0196   054F 59          	add d, a
0197   0550 63 80 00    	sub d, width
0198   0553 32          	mov bl, [d]
0199   0554 C1 2A       	cmp bl, '*'
0200   0556 C7 5A 05    	jne jmp2
0201   0559 78          	inc c
0202   055A             jmp2:
0203   055A 07 5D 04    	call check_parity
0204   055D 59          	add d, a
0205   055E 63 7F 00    	sub d, width-1
0206   0561 32          	mov bl, [d]
0207   0562 C1 2A       	cmp bl, '*'
0208   0564 C7 68 05    	jne jmp3
0209   0567 78          	inc c
0210   0568             jmp3:
0211   0568 07 5D 04    	call check_parity
0212   056B 59          	add d, a
0213   056C 79          	inc d 
0214   056D 32          	mov bl, [d]
0215   056E C1 2A       	cmp bl, '*'
0216   0570 C7 74 05    	jne jmp4
0217   0573 78          	inc c
0218   0574             jmp4:
0219   0574 07 5D 04    	call check_parity
0220   0577 59          	add d, a
0221   0578 58 81 00    	add d, width+1
0222   057B 32          	mov bl, [d]
0223   057C C1 2A       	cmp bl, '*'
0224   057E C7 82 05    	jne jmp5
0225   0581 78          	inc c
0226   0582             jmp5:
0227   0582 07 5D 04    	call check_parity
0228   0585 59          	add d, a
0229   0586 58 80 00    	add d, width
0230   0589 32          	mov bl, [d]
0231   058A C1 2A       	cmp bl, '*'
0232   058C C7 90 05    	jne jmp6
0233   058F 78          	inc c
0234   0590             jmp6:
0235   0590 07 5D 04    	call check_parity
0236   0593 59          	add d, a
0237   0594 58 7F 00    	add d, width-1
0238   0597 32          	mov bl, [d]
0239   0598 C1 2A       	cmp bl, '*'
0240   059A C7 9E 05    	jne jmp7
0241   059D 78          	inc c
0242   059E             jmp7:
0243   059E 07 5D 04    	call check_parity
0244   05A1 59          	add d, a
0245   05A2 7F          	dec d
0246   05A3 32          	mov bl, [d]
0247   05A4 C1 2A       	cmp bl, '*'
0248   05A6 C7 AA 05    	jne jmp8
0249   05A9 78          	inc c
0250   05AA             jmp8:
0251   05AA 28          	mov b, c
0252   05AB E6          	pop c
0253   05AC E7          	pop d
0254   05AD E4          	pop a
0255   05AE 09          	ret
0256   05AF             
0257   05AF             width: 			.equ 128
0258   05AF             height:			.equ 48
0259   05AF             
0260   05AF 00 00       l: .dw 0
0261   05B1 00 00       c: .dw 0
0262   05B3             
0263   05B3 01 00       line:	.dw 1
0264   05B5 01 00       col:	.dw 1
0265   05B7             
0266   05B7 00          parity: .db 0
0267   05B8             
0268   05B8 1B 5B 32 4A s_clear:		.db 27, "[2J", 27, "[H", 0
0268   05BC 1B 5B 48 00 
0269   05C0             
0270   05C0             .include "stdio.asm"
0001+  05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0002+  05C0             ; stdio.s
0003+  05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0004+  05C0             .include "string.asm"
0001++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0002++ 05C0             ; string.s
0003++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0004++ 05C0             
0005++ 05C0             
0006++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0007++ 05C0             ; strrev
0008++ 05C0             ; reverse a string
0009++ 05C0             ; D = string address
0010++ 05C0             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0011++ 05C0             ; 01234
0012++ 05C0             strrev:
0013++ 05C0 4B          	pusha
0014++ 05C1 07 07 06    	call strlen	; length in C
0015++ 05C4 12          	mov a, c
0016++ 05C5 AF 01 00    	cmp a, 1
0017++ 05C8 D0 E2 05    	jleu strrev_end	; check string length. string len must be > 1
0018++ 05CB 7D          	dec a
0019++ 05CC FD 4E       	mov si, d	; beginning of string
0020++ 05CE FD 50       	mov di, d	; beginning of string (for destinations)
0021++ 05D0 59          	add d, a	; end of string
0022++ 05D1 12          	mov a, c
0023++ 05D2 FD 9B       	shr a		; divide by 2
0024++ 05D4 39          	mov c, a	; C now counts the steps
0025++ 05D5             strrev_L0:
0026++ 05D5 32          	mov bl, [d]	; save load right-side char into BL
0027++ 05D6 F6          	lodsb		; load left-side char into AL; increase SI
0028++ 05D7 3E          	mov [d], al	; store left char into right side
0029++ 05D8 1B          	mov al, bl
0030++ 05D9 F7          	stosb		; store right-side char into left-side; increase DI
0031++ 05DA 7E          	dec c
0032++ 05DB 7F          	dec d
0033++ 05DC C2 00 00    	cmp c, 0
0034++ 05DF C7 D5 05    	jne strrev_L0
0035++ 05E2             strrev_end:
0036++ 05E2 4C          	popa
0037++ 05E3 09          	ret
0038++ 05E4             	
0039++ 05E4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0040++ 05E4             ; strchr
0041++ 05E4             ; search string in D for char in AL
0042++ 05E4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0043++ 05E4             strchr:
0044++ 05E4             strchr_L0:
0045++ 05E4 32          	mov bl, [d]
0046++ 05E5 C1 00       	cmp bl, 0
0047++ 05E7 C6 F2 05    	je strchr_end
0048++ 05EA BA          	cmp al, bl
0049++ 05EB C6 F2 05    	je strchr_end
0050++ 05EE 79          	inc d
0051++ 05EF 0A E4 05    	jmp strchr_L0
0052++ 05F2             strchr_end:
0053++ 05F2 1B          	mov al, bl
0054++ 05F3 09          	ret
0055++ 05F4             
0056++ 05F4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0057++ 05F4             ; strstr
0058++ 05F4             ; find sub-string
0059++ 05F4             ; str1 in SI
0060++ 05F4             ; str2 in DI
0061++ 05F4             ; SI points to end of source string
0062++ 05F4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0063++ 05F4             strstr:
0064++ 05F4 DB          	push al
0065++ 05F5 DA          	push d
0066++ 05F6 E3          	push di
0067++ 05F7             strstr_loop:
0068++ 05F7 F3          	cmpsb					; compare a byte of the strings
0069++ 05F8 C7 03 06    	jne strstr_ret
0070++ 05FB FC 00 00    	lea d, [di + 0]
0071++ 05FE BD 00       	cmp byte[d], 0				; check if at end of string (null)
0072++ 0600 C7 F7 05    	jne strstr_loop				; equal chars but not at end
0073++ 0603             strstr_ret:
0074++ 0603 F0          	pop di
0075++ 0604 E7          	pop d
0076++ 0605 E8          	pop al
0077++ 0606 09          	ret
0078++ 0607             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0079++ 0607             ; length of null terminated string
0080++ 0607             ; result in C
0081++ 0607             ; pointer in D
0082++ 0607             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0083++ 0607             strlen:
0084++ 0607 DA          	push d
0085++ 0608 38 00 00    	mov c, 0
0086++ 060B             strlen_L1:
0087++ 060B BD 00       	cmp byte [d], 0
0088++ 060D C6 15 06    	je strlen_ret
0089++ 0610 79          	inc d
0090++ 0611 78          	inc c
0091++ 0612 0A 0B 06    	jmp strlen_L1
0092++ 0615             strlen_ret:
0093++ 0615 E7          	pop d
0094++ 0616 09          	ret
0095++ 0617             
0096++ 0617             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0097++ 0617             ; STRCMP
0098++ 0617             ; compare two strings
0099++ 0617             ; str1 in SI
0100++ 0617             ; str2 in DI
0101++ 0617             ; CREATE A STRING COMPAIRON INSTRUCION ?????
0102++ 0617             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0103++ 0617             strcmp:
0104++ 0617 DB          	push al
0105++ 0618 DA          	push d
0106++ 0619 E3          	push di
0107++ 061A E2          	push si
0108++ 061B             strcmp_loop:
0109++ 061B F3          	cmpsb					; compare a byte of the strings
0110++ 061C C7 27 06    	jne strcmp_ret
0111++ 061F FB FF FF    	lea d, [si +- 1]
0112++ 0622 BD 00       	cmp byte[d], 0				; check if at end of string (null)
0113++ 0624 C7 1B 06    	jne strcmp_loop				; equal chars but not at end
0114++ 0627             strcmp_ret:
0115++ 0627 EF          	pop si
0116++ 0628 F0          	pop di
0117++ 0629 E7          	pop d
0118++ 062A E8          	pop al
0119++ 062B 09          	ret
0120++ 062C             
0121++ 062C             
0122++ 062C             ; STRCPY
0123++ 062C             ; copy null terminated string from SI to DI
0124++ 062C             ; source in SI
0125++ 062C             ; destination in DI
0126++ 062C             strcpy:
0127++ 062C E2          	push si
0128++ 062D E3          	push di
0129++ 062E DB          	push al
0130++ 062F             strcpy_L1:
0131++ 062F F6          	lodsb
0132++ 0630 F7          	stosb
0133++ 0631 B9 00       	cmp al, 0
0134++ 0633 C7 2F 06    	jne strcpy_L1
0135++ 0636             strcpy_end:
0136++ 0636 E8          	pop al
0137++ 0637 F0          	pop di
0138++ 0638 EF          	pop si
0139++ 0639 09          	ret
0140++ 063A             
0141++ 063A             ; STRCAT
0142++ 063A             ; concatenate a NULL terminated string into string at DI, from string at SI
0143++ 063A             ; source in SI
0144++ 063A             ; destination in DI
0145++ 063A             strcat:
0146++ 063A E2          	push si
0147++ 063B E3          	push di
0148++ 063C D7          	push a
0149++ 063D DA          	push d
0150++ 063E 50          	mov a, di
0151++ 063F 3C          	mov d, a
0152++ 0640             strcat_goto_end_L1:
0153++ 0640 BD 00       	cmp byte[d], 0
0154++ 0642 C6 49 06    	je strcat_start
0155++ 0645 79          	inc d
0156++ 0646 0A 40 06    	jmp strcat_goto_end_L1
0157++ 0649             strcat_start:
0158++ 0649 FD 50       	mov di, d
0159++ 064B             strcat_L1:
0160++ 064B F6          	lodsb
0161++ 064C F7          	stosb
0162++ 064D B9 00       	cmp al, 0
0163++ 064F C7 4B 06    	jne strcat_L1
0164++ 0652             strcat_end:
0165++ 0652 E7          	pop d
0166++ 0653 E4          	pop a
0167++ 0654 F0          	pop di
0168++ 0655 EF          	pop si
0169++ 0656 09          	ret
0005+  0657             
0006+  0657 30 31 32 33 s_hex_digits:	.db "0123456789ABCDEF"	
0006+  065B 34 35 36 37 
0006+  065F 38 39 41 42 
0006+  0663 43 44 45 46 
0007+  0667 1B 5B 32 4A s_telnet_clear:	.db 27, "[2J", 27, "[H", 0
0007+  066B 1B 5B 48 00 
0008+  066F             
0009+  066F 01 00       table_power:.dw 1
0010+  0671 0A 00       			.dw 10
0011+  0673 64 00       			.dw 100
0012+  0675 E8 03       			.dw 1000
0013+  0677 10 27       			.dw 10000
0014+  0679             
0015+  0679             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0016+  0679             ; CONVERT ASCII 'O'..'F' TO INTEGER 0..15
0017+  0679             ; ASCII in BL
0018+  0679             ; result in AL
0019+  0679             ; ascii for F = 0100 0110
0020+  0679             ; ascii for 9 = 0011 1001
0021+  0679             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0022+  0679             hex_ascii_encode:
0023+  0679 1B          	mov al, bl
0024+  067A 93 40       	test al, $40				; test if letter or number
0025+  067C C7 82 06    	jnz hex_letter
0026+  067F 87 0F       	and al, $0F				; get number
0027+  0681 09          	ret
0028+  0682             hex_letter:
0029+  0682 87 0F       	and al, $0F				; get letter
0030+  0684 6A 09       	add al, 9
0031+  0686 09          	ret
0032+  0687             
0033+  0687             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0034+  0687             ; ATOI
0035+  0687             ; 2 letter hex string in B
0036+  0687             ; 8bit integer returned in AL
0037+  0687             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0038+  0687             atoi:
0039+  0687 D8          	push b
0040+  0688 07 79 06    	call hex_ascii_encode			; convert BL to 4bit code in AL
0041+  068B 30          	mov bl, bh
0042+  068C DB          	push al					; save a
0043+  068D 07 79 06    	call hex_ascii_encode
0044+  0690 EA          	pop bl	
0045+  0691 FD 9E 04    	shl al, 4
0046+  0694 8C          	or al, bl
0047+  0695 E5          	pop b
0048+  0696 09          	ret	
0049+  0697             
0050+  0697             
0051+  0697             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0052+  0697             ; printf
0053+  0697             ; no need for explanations!
0054+  0697             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0055+  0697             printf:
0056+  0697 09          	ret
0057+  0698             
0058+  0698             
0059+  0698             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0060+  0698             ; scanf
0061+  0698             ; no need for explanations!
0062+  0698             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0063+  0698             scanf:
0064+  0698 09          	ret
0065+  0699             
0066+  0699             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0067+  0699             ; ITOA
0068+  0699             ; 8bit value in BL
0069+  0699             ; 2 byte ASCII result in A
0070+  0699             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0071+  0699             itoa:
0072+  0699 DA          	push d
0073+  069A D8          	push b
0074+  069B A7 00       	mov bh, 0
0075+  069D FD A4 04    	shr bl, 4	
0076+  06A0 74          	mov d, b
0077+  06A1 1F 57 06    	mov al, [d + s_hex_digits]
0078+  06A4 23          	mov ah, al
0079+  06A5             	
0080+  06A5 E5          	pop b
0081+  06A6 D8          	push b
0082+  06A7 A7 00       	mov bh, 0
0083+  06A9 FD 87 0F    	and bl, $0F
0084+  06AC 74          	mov d, b
0085+  06AD 1F 57 06    	mov al, [d + s_hex_digits]
0086+  06B0 E5          	pop b
0087+  06B1 E7          	pop d
0088+  06B2 09          	ret
0089+  06B3             
0090+  06B3             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0091+  06B3             ; HEX STRING TO BINARY
0092+  06B3             ; di = destination address
0093+  06B3             ; si = source
0094+  06B3             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0095+  06B3             hex_to_int:
0096+  06B3             hex_to_int_L1:
0097+  06B3 F6          	lodsb					; load from [SI] to AL
0098+  06B4 B9 00       	cmp al, 0				; check if ASCII 0
0099+  06B6 C6 C3 06    	jz hex_to_int_ret
0100+  06B9 36          	mov bh, al
0101+  06BA F6          	lodsb
0102+  06BB 2F          	mov bl, al
0103+  06BC 07 87 06    	call atoi				; convert ASCII byte in B to int (to AL)
0104+  06BF F7          	stosb					; store AL to [DI]
0105+  06C0 0A B3 06    	jmp hex_to_int_L1
0106+  06C3             hex_to_int_ret:
0107+  06C3 09          	ret		
0108+  06C4             
0109+  06C4             
0110+  06C4             
0111+  06C4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0112+  06C4             ; GETCHAR
0113+  06C4             ; char in ah
0114+  06C4             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0115+  06C4             getchar:
0116+  06C4 DB          	push al
0117+  06C5             getchar_retry:
0118+  06C5 FD 0C       	sti
0119+  06C7 19 01       	mov al, 1
0120+  06C9 05 03       	syscall sys_io			; receive in AH
0121+  06CB B9 00       	cmp al, 0			; check if any char was receive
0122+  06CD C6 C5 06    	je getchar_retry
0123+  06D0 E8          	pop al
0124+  06D1 09          	ret
0125+  06D2             
0126+  06D2             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0127+  06D2             ; PUTCHAR
0128+  06D2             ; char in ah
0129+  06D2             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0130+  06D2             putchar:
0131+  06D2 D7          	push a
0132+  06D3 19 00       	mov al, 0
0133+  06D5 05 03       	syscall sys_io			; char in AH
0134+  06D7 E4          	pop a
0135+  06D8 09          	ret
0136+  06D9             
0137+  06D9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0138+  06D9             ;; INPUT A STRING
0139+  06D9             ;; terminates with null
0140+  06D9             ;; pointer in D
0141+  06D9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0142+  06D9             gets:
0143+  06D9 D7          	push a
0144+  06DA DA          	push d
0145+  06DB             gets_loop:
0146+  06DB FD 0C       	sti
0147+  06DD 19 01       	mov al, 1
0148+  06DF 05 03       	syscall sys_io			; receive in AH
0149+  06E1 B9 00       	cmp al, 0				; check error code (AL)
0150+  06E3 C6 DB 06    	je gets_loop			; if no char received, retry
0151+  06E6             
0152+  06E6 76 1B       	cmp ah, 27
0153+  06E8 C6 09 07    	je gets_telnet_escape
0154+  06EB 76 0A       	cmp ah, $0A				; LF
0155+  06ED C6 62 07    	je gets_end
0156+  06F0 76 0D       	cmp ah, $0D				; CR
0157+  06F2 C6 62 07    	je gets_end
0158+  06F5 76 5C       	cmp ah, $5C				; '\\'
0159+  06F7 C6 39 07    	je gets_escape
0160+  06FA             	
0161+  06FA 76 08       	cmp ah, $08			; check for backspace
0162+  06FC C6 05 07    	je gets_backspace
0163+  06FF             
0164+  06FF 1A          	mov al, ah
0165+  0700 3E          	mov [d], al
0166+  0701 79          	inc d
0167+  0702 0A DB 06    	jmp gets_loop
0168+  0705             gets_backspace:
0169+  0705 7F          	dec d
0170+  0706 0A DB 06    	jmp gets_loop
0171+  0709             gets_telnet_escape:
0172+  0709 FD 0C       	sti
0173+  070B 19 01       	mov al, 1
0174+  070D 05 03       	syscall sys_io				; receive in AH without echo
0175+  070F B9 00       	cmp al, 0					; check error code (AL)
0176+  0711 C6 09 07    	je gets_telnet_escape		; if no char received, retry
0177+  0714 76 5B       	cmp ah, '['
0178+  0716 C7 DB 06    	jne gets_loop
0179+  0719             gets_telnet_escape_phase2:
0180+  0719 FD 0C       	sti
0181+  071B 19 01       	mov al, 1
0182+  071D 05 03       	syscall sys_io					; receive in AH without echo
0183+  071F B9 00       	cmp al, 0						; check error code (AL)
0184+  0721 C6 19 07    	je gets_telnet_escape_phase2	; if no char received, retry
0185+  0724 76 44       	cmp ah, 'D'
0186+  0726 C6 31 07    	je gets_left_arrow
0187+  0729 76 43       	cmp ah, 'C'
0188+  072B C6 35 07    	je gets_right_arrow
0189+  072E 0A DB 06    	jmp gets_loop
0190+  0731             gets_left_arrow:
0191+  0731 7F          	dec d
0192+  0732 0A DB 06    	jmp gets_loop
0193+  0735             gets_right_arrow:
0194+  0735 79          	inc d
0195+  0736 0A DB 06    	jmp gets_loop
0196+  0739             gets_escape:
0197+  0739 FD 0C       	sti
0198+  073B 19 01       	mov al, 1
0199+  073D 05 03       	syscall sys_io			; receive in AH
0200+  073F B9 00       	cmp al, 0				; check error code (AL)
0201+  0741 C6 39 07    	je gets_escape			; if no char received, retry
0202+  0744 76 6E       	cmp ah, 'n'
0203+  0746 C6 54 07    	je gets_LF
0204+  0749 76 72       	cmp ah, 'r'
0205+  074B C6 5B 07    	je gets_CR
0206+  074E 1A          	mov al, ah				; if not a known escape, it is just a normal letter
0207+  074F 3E          	mov [d], al
0208+  0750 79          	inc d
0209+  0751 0A DB 06    	jmp gets_loop
0210+  0754             gets_LF:
0211+  0754 19 0A       	mov al, $0A
0212+  0756 3E          	mov [d], al
0213+  0757 79          	inc d
0214+  0758 0A DB 06    	jmp gets_loop
0215+  075B             gets_CR:
0216+  075B 19 0D       	mov al, $0D
0217+  075D 3E          	mov [d], al
0218+  075E 79          	inc d
0219+  075F 0A DB 06    	jmp gets_loop
0220+  0762             gets_end:
0221+  0762 19 00       	mov al, 0
0222+  0764 3E          	mov [d], al				; terminate string
0223+  0765 E7          	pop d
0224+  0766 E4          	pop a
0225+  0767 09          	ret
0226+  0768             
0227+  0768             
0228+  0768             
0229+  0768             
0230+  0768             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0231+  0768             ;; INPUT TEXT
0232+  0768             ;; terminated with CTRL+D
0233+  0768             ;; pointer in D
0234+  0768             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0235+  0768             gettxt:
0236+  0768 D7          	push a
0237+  0769 DA          	push d
0238+  076A             gettxt_loop:
0239+  076A 19 01       	mov al, 1
0240+  076C 05 03       	syscall sys_io			; receive in AH
0241+  076E B9 00       	cmp al, 0				; check error code (AL)
0242+  0770 C6 6A 07    	je gettxt_loop		; if no char received, retry
0243+  0773 76 04       	cmp ah, 4			; EOT
0244+  0775 C6 B3 07    	je gettxt_end
0245+  0778 76 08       	cmp ah, $08			; check for backspace
0246+  077A C6 AF 07    	je gettxt_backspace
0247+  077D 76 5C       	cmp ah, $5C				; '\\'
0248+  077F C6 88 07    	je gettxt_escape
0249+  0782 1A          	mov al, ah
0250+  0783 3E          	mov [d], al
0251+  0784 79          	inc d
0252+  0785 0A 6A 07    	jmp gettxt_loop
0253+  0788             gettxt_escape:
0254+  0788 19 01       	mov al, 1
0255+  078A 05 03       	syscall sys_io			; receive in AH
0256+  078C B9 00       	cmp al, 0				; check error code (AL)
0257+  078E C6 88 07    	je gettxt_escape		; if no char received, retry
0258+  0791 76 6E       	cmp ah, 'n'
0259+  0793 C6 A1 07    	je gettxt_LF
0260+  0796 76 72       	cmp ah, 'r'
0261+  0798 C6 A8 07    	je gettxt_CR
0262+  079B 1A          	mov al, ah				; if not a known escape, it is just a normal letter
0263+  079C 3E          	mov [d], al
0264+  079D 79          	inc d
0265+  079E 0A 6A 07    	jmp gettxt_loop
0266+  07A1             gettxt_LF:
0267+  07A1 19 0A       	mov al, $0A
0268+  07A3 3E          	mov [d], al
0269+  07A4 79          	inc d
0270+  07A5 0A 6A 07    	jmp gettxt_loop
0271+  07A8             gettxt_CR:
0272+  07A8 19 0D       	mov al, $0D
0273+  07AA 3E          	mov [d], al
0274+  07AB 79          	inc d
0275+  07AC 0A 6A 07    	jmp gettxt_loop
0276+  07AF             gettxt_backspace:
0277+  07AF 7F          	dec d
0278+  07B0 0A 6A 07    	jmp gettxt_loop
0279+  07B3             gettxt_end:
0280+  07B3 19 00       	mov al, 0
0281+  07B5 3E          	mov [d], al				; terminate string
0282+  07B6 E7          	pop d
0283+  07B7 E4          	pop a
0284+  07B8 09          	ret
0285+  07B9             
0286+  07B9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0287+  07B9             ; PRINT NEW LINE
0288+  07B9             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0289+  07B9             printnl:
0290+  07B9 D7          	push a
0291+  07BA 10 00 0A    	mov a, $0A00
0292+  07BD 05 03       	syscall sys_io
0293+  07BF 10 00 0D    	mov a, $0D00
0294+  07C2 05 03       	syscall sys_io
0295+  07C4 E4          	pop a
0296+  07C5 09          	ret
0297+  07C6             
0298+  07C6             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0299+  07C6             ; strtoint
0300+  07C6             ; 4 digit hex string number in d
0301+  07C6             ; integer returned in A
0302+  07C6             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0303+  07C6             strtointx:
0304+  07C6 D8          	push b
0305+  07C7 32          	mov bl, [d]
0306+  07C8 37          	mov bh, bl
0307+  07C9 33 01 00    	mov bl, [d + 1]
0308+  07CC 07 87 06    	call atoi				; convert to int in AL
0309+  07CF 23          	mov ah, al				; move to AH
0310+  07D0 33 02 00    	mov bl, [d + 2]
0311+  07D3 37          	mov bh, bl
0312+  07D4 33 03 00    	mov bl, [d + 3]
0313+  07D7 07 87 06    	call atoi				; convert to int in AL
0314+  07DA E5          	pop b
0315+  07DB 09          	ret
0316+  07DC             
0317+  07DC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0318+  07DC             ; strtoint
0319+  07DC             ; 5 digit base10 string number in d
0320+  07DC             ; integer returned in A
0321+  07DC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0322+  07DC             strtoint:
0323+  07DC E2          	push si
0324+  07DD D8          	push b
0325+  07DE D9          	push c
0326+  07DF DA          	push d
0327+  07E0 07 07 06    	call strlen			; get string length in C
0328+  07E3 7E          	dec c
0329+  07E4 FD 4E       	mov si, d
0330+  07E6 12          	mov a, c
0331+  07E7 FD 99       	shl a
0332+  07E9 3B 6F 06    	mov d, table_power
0333+  07EC 59          	add d, a
0334+  07ED 38 00 00    	mov c, 0
0335+  07F0             strtoint_L0:
0336+  07F0 F6          	lodsb			; load ASCII to al
0337+  07F1 B9 00       	cmp al, 0
0338+  07F3 C6 06 08    	je strtoint_end
0339+  07F6 6F 30       	sub al, $30		; make into integer
0340+  07F8 22 00       	mov ah, 0
0341+  07FA 2A          	mov b, [d]
0342+  07FB AC          	mul a, b			; result in B since it fits in 16bits
0343+  07FC 11          	mov a, b
0344+  07FD 28          	mov b, c
0345+  07FE 54          	add a, b
0346+  07FF 39          	mov c, a
0347+  0800 63 02 00    	sub d, 2
0348+  0803 0A F0 07    	jmp strtoint_L0
0349+  0806             strtoint_end:
0350+  0806 12          	mov a, c
0351+  0807 E7          	pop d
0352+  0808 E6          	pop c
0353+  0809 E5          	pop b
0354+  080A EF          	pop si
0355+  080B 09          	ret
0356+  080C             
0357+  080C             
0358+  080C             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0359+  080C             ; PRINT NULL TERMINATED STRING
0360+  080C             ; pointer in D
0361+  080C             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0362+  080C             puts:
0363+  080C D7          	push a
0364+  080D DA          	push d
0365+  080E             puts_L1:
0366+  080E 1E          	mov al, [d]
0367+  080F B9 00       	cmp al, 0
0368+  0811 C6 1D 08    	jz puts_END
0369+  0814 23          	mov ah, al
0370+  0815 19 00       	mov al, 0
0371+  0817 05 03       	syscall sys_io
0372+  0819 79          	inc d
0373+  081A 0A 0E 08    	jmp puts_L1
0374+  081D             puts_END:
0375+  081D E7          	pop d
0376+  081E E4          	pop a
0377+  081F 09          	ret
0378+  0820             
0379+  0820             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0380+  0820             ; PRINT N SIZE STRING
0381+  0820             ; pointer in D
0382+  0820             ; size in C
0383+  0820             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0384+  0820             putsn:
0385+  0820 DB          	push al
0386+  0821 DA          	push d
0387+  0822 D9          	push c
0388+  0823             putsn_L0:
0389+  0823 1E          	mov al, [d]
0390+  0824 23          	mov ah, al
0391+  0825 19 00       	mov al, 0
0392+  0827 05 03       	syscall sys_io
0393+  0829 79          	inc d
0394+  082A 7E          	dec c	
0395+  082B C2 00 00    	cmp c, 0
0396+  082E C7 23 08    	jne putsn_L0
0397+  0831             putsn_end:
0398+  0831 E6          	pop c
0399+  0832 E7          	pop d
0400+  0833 E8          	pop al
0401+  0834 09          	ret
0402+  0835             
0403+  0835             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0404+  0835             ; print 16bit decimal number
0405+  0835             ; input number in A
0406+  0835             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0407+  0835             print_u16d:
0408+  0835 D7          	push a
0409+  0836 D8          	push b
0410+  0837 26 10 27    	mov b, 10000
0411+  083A AE          	div a, b			; get 10000 coeff.
0412+  083B 07 61 08    	call print_number
0413+  083E 11          	mov a, b
0414+  083F 26 E8 03    	mov b, 1000
0415+  0842 AE          	div a, b			; get 10000 coeff.
0416+  0843 07 61 08    	call print_number
0417+  0846 11          	mov a, b
0418+  0847 26 64 00    	mov b, 100
0419+  084A AE          	div a, b
0420+  084B 07 61 08    	call print_number
0421+  084E 11          	mov a, b
0422+  084F 26 0A 00    	mov b, 10
0423+  0852 AE          	div a, b
0424+  0853 07 61 08    	call print_number
0425+  0856 11          	mov a, b
0426+  0857 6A 30       	add al, $30
0427+  0859 23          	mov ah, al
0428+  085A 19 00       	mov al, 0
0429+  085C 05 03       	syscall sys_io	; print coeff
0430+  085E E5          	pop b
0431+  085F E4          	pop a
0432+  0860 09          	ret
0433+  0861             
0434+  0861             
0435+  0861             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0436+  0861             ; if A == 0, print space
0437+  0861             ; else print A
0438+  0861             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0439+  0861             print_number:
0440+  0861 6A 30       	add al, $30
0441+  0863 23          	mov ah, al
0442+  0864 07 D2 06    	call putchar
0443+  0867 09          	ret
0444+  0868             
0445+  0868             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0446+  0868             ; PRINT 16BIT HEX INTEGER
0447+  0868             ; integer value in reg B
0448+  0868             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0449+  0868             print_u16x:
0450+  0868 D7          	push a
0451+  0869 D8          	push b
0452+  086A DD          	push bl
0453+  086B 30          	mov bl, bh
0454+  086C 07 99 06    	call itoa				; convert bh to char in A
0455+  086F 2F          	mov bl, al				; save al
0456+  0870 19 00       	mov al, 0
0457+  0872 05 03       	syscall sys_io				; display AH
0458+  0874 24          	mov ah, bl				; retrieve al
0459+  0875 19 00       	mov al, 0
0460+  0877 05 03       	syscall sys_io				; display AL
0461+  0879             
0462+  0879 EA          	pop bl
0463+  087A 07 99 06    	call itoa				; convert bh to char in A
0464+  087D 2F          	mov bl, al				; save al
0465+  087E 19 00       	mov al, 0
0466+  0880 05 03       	syscall sys_io				; display AH
0467+  0882 24          	mov ah, bl				; retrieve al
0468+  0883 19 00       	mov al, 0
0469+  0885 05 03       	syscall sys_io				; display AL
0470+  0887             
0471+  0887 E5          	pop b
0472+  0888 E4          	pop a
0473+  0889 09          	ret
0474+  088A             
0475+  088A             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0476+  088A             ; INPUT 16BIT HEX INTEGER
0477+  088A             ; read 16bit integer into A
0478+  088A             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0479+  088A             scan_u16x:
0480+  088A F8 10 00    	enter 16
0481+  088D D8          	push b
0482+  088E DA          	push d
0483+  088F             
0484+  088F FA F1 FF    	lea d, [bp + -15]
0485+  0892 07 D9 06    	call gets				; get number
0486+  0895             
0487+  0895 32          	mov bl, [d]
0488+  0896 37          	mov bh, bl
0489+  0897 33 01 00    	mov bl, [d + 1]
0490+  089A 07 87 06    	call atoi				; convert to int in AL
0491+  089D 23          	mov ah, al				; move to AH
0492+  089E             
0493+  089E 33 02 00    	mov bl, [d + 2]
0494+  08A1 37          	mov bh, bl
0495+  08A2 33 03 00    	mov bl, [d + 3]
0496+  08A5 07 87 06    	call atoi				; convert to int in AL
0497+  08A8             
0498+  08A8 E7          	pop d
0499+  08A9 E5          	pop b
0500+  08AA F9          	leave
0501+  08AB 09          	ret
0502+  08AC             
0503+  08AC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0504+  08AC             ; PRINT 8bit HEX INTEGER
0505+  08AC             ; integer value in reg bl
0506+  08AC             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0507+  08AC             print_u8x:
0508+  08AC D7          	push a
0509+  08AD DD          	push bl
0510+  08AE             
0511+  08AE 07 99 06    	call itoa				; convert bl to char in A
0512+  08B1 2F          	mov bl, al				; save al
0513+  08B2 19 00       	mov al, 0
0514+  08B4 05 03       	syscall sys_io				; display AH
0515+  08B6 24          	mov ah, bl				; retrieve al
0516+  08B7 19 00       	mov al, 0
0517+  08B9 05 03       	syscall sys_io				; display AL
0518+  08BB             
0519+  08BB EA          	pop bl
0520+  08BC E4          	pop a
0521+  08BD 09          	ret
0522+  08BE             
0523+  08BE             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0524+  08BE             ; print 8bit decimal unsigned number
0525+  08BE             ; input number in AL
0526+  08BE             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0527+  08BE             print_u8d:
0528+  08BE D7          	push a
0529+  08BF D8          	push b
0530+  08C0             
0531+  08C0 22 00       	mov ah, 0
0532+  08C2 26 64 00    	mov b, 100
0533+  08C5 AE          	div a, b
0534+  08C6 D8          	push b			; save remainder
0535+  08C7 B9 00       	cmp al, 0
0536+  08C9 C6 D3 08    	je skip100
0537+  08CC 6A 30       	add al, $30
0538+  08CE 23          	mov ah, al
0539+  08CF 19 00       	mov al, 0
0540+  08D1 05 03       	syscall sys_io	; print coeff
0541+  08D3             skip100:
0542+  08D3 E4          	pop a
0543+  08D4 22 00       	mov ah, 0
0544+  08D6 26 0A 00    	mov b, 10
0545+  08D9 AE          	div a, b
0546+  08DA D8          	push b			; save remainder
0547+  08DB B9 00       	cmp al, 0
0548+  08DD C6 E7 08    	je skip10
0549+  08E0 6A 30       	add al, $30
0550+  08E2 23          	mov ah, al
0551+  08E3 19 00       	mov al, 0
0552+  08E5 05 03       	syscall sys_io	; print coeff
0553+  08E7             skip10:
0554+  08E7 E4          	pop a
0555+  08E8 1B          	mov al, bl
0556+  08E9 6A 30       	add al, $30
0557+  08EB 23          	mov ah, al
0558+  08EC 19 00       	mov al, 0
0559+  08EE 05 03       	syscall sys_io	; print coeff
0560+  08F0 E5          	pop b
0561+  08F1 E4          	pop a
0562+  08F2 09          	ret
0563+  08F3             
0564+  08F3             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0565+  08F3             ; INPUT 8BIT HEX INTEGER
0566+  08F3             ; read 8bit integer into AL
0567+  08F3             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0568+  08F3             scan_u8x:
0569+  08F3 F8 04 00    	enter 4
0570+  08F6 D8          	push b
0571+  08F7 DA          	push d
0572+  08F8             
0573+  08F8 FA FD FF    	lea d, [bp + -3]
0574+  08FB 07 D9 06    	call gets				; get number
0575+  08FE             
0576+  08FE 32          	mov bl, [d]
0577+  08FF 37          	mov bh, bl
0578+  0900 33 01 00    	mov bl, [d + 1]
0579+  0903 07 87 06    	call atoi				; convert to int in AL
0580+  0906             
0581+  0906 E7          	pop d
0582+  0907 E5          	pop b
0583+  0908 F9          	leave
0584+  0909 09          	ret
0585+  090A             
0586+  090A             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0587+  090A             ; input decimal number
0588+  090A             ; result in A
0589+  090A             ; 655'\0'
0590+  090A             ; low--------high
0591+  090A             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0592+  090A             scan_u16d:
0593+  090A F8 08 00    	enter 8
0594+  090D E2          	push si
0595+  090E D8          	push b
0596+  090F D9          	push c
0597+  0910 DA          	push d
0598+  0911 FA F9 FF    	lea d, [bp +- 7]
0599+  0914 07 D9 06    	call gets
0600+  0917 07 07 06    	call strlen			; get string length in C
0601+  091A 7E          	dec c
0602+  091B FD 4E       	mov si, d
0603+  091D 12          	mov a, c
0604+  091E FD 99       	shl a
0605+  0920 3B 6F 06    	mov d, table_power
0606+  0923 59          	add d, a
0607+  0924 38 00 00    	mov c, 0
0608+  0927             mul_loop:
0609+  0927 F6          	lodsb			; load ASCII to al
0610+  0928 B9 00       	cmp al, 0
0611+  092A C6 3D 09    	je mul_exit
0612+  092D 6F 30       	sub al, $30		; make into integer
0613+  092F 22 00       	mov ah, 0
0614+  0931 2A          	mov b, [d]
0615+  0932 AC          	mul a, b			; result in B since it fits in 16bits
0616+  0933 11          	mov a, b
0617+  0934 28          	mov b, c
0618+  0935 54          	add a, b
0619+  0936 39          	mov c, a
0620+  0937 63 02 00    	sub d, 2
0621+  093A 0A 27 09    	jmp mul_loop
0622+  093D             mul_exit:
0623+  093D 12          	mov a, c
0624+  093E E7          	pop d
0625+  093F E6          	pop c
0626+  0940 E5          	pop b
0627+  0941 EF          	pop si
0628+  0942 F9          	leave
0629+  0943 09          	ret
0271   0944             
0272   0944 FF FF FF FF board:			.fill (width)*(height)
0272   0948 FF FF FF FF 
0272   094C FF FF FF FF 
0272   0950 FF FF FF FF 
0272   0954 FF FF FF FF 
0272   0958 FF FF FF FF 
0272   095C FF FF FF FF 
0272   0960 FF FF FF FF 
0272   0964 FF FF FF FF 
0272   0968 FF FF FF FF 
0272   096C FF FF FF FF 
0272   0970 FF FF FF FF 
0272   0974 FF FF FF FF 
0272   0978 FF FF FF FF 
0272   097C FF FF FF FF 
0272   0980 FF FF FF FF 
0272   0984 FF FF FF FF 
0272   0988 FF FF FF FF 
0272   098C FF FF FF FF 
0272   0990 FF FF FF FF 
0272   0994 FF FF FF FF 
0272   0998 FF FF FF FF 
0272   099C FF FF FF FF 
0272   09A0 FF FF FF FF 
0272   09A4 FF FF FF FF 
0272   09A8 FF FF FF FF 
0272   09AC FF FF FF FF 
0272   09B0 FF FF FF FF 
0272   09B4 FF FF FF FF 
0272   09B8 FF FF FF FF 
0272   09BC FF FF FF FF 
0272   09C0 FF FF FF FF 
0272   09C4 FF FF FF FF 
0272   09C8 FF FF FF FF 
0272   09CC FF FF FF FF 
0272   09D0 FF FF FF FF 
0272   09D4 FF FF FF FF 
0272   09D8 FF FF FF FF 
0272   09DC FF FF FF FF 
0272   09E0 FF FF FF FF 
0272   09E4 FF FF FF FF 
0272   09E8 FF FF FF FF 
0272   09EC FF FF FF FF 
0272   09F0 FF FF FF FF 
0272   09F4 FF FF FF FF 
0272   09F8 FF FF FF FF 
0272   09FC FF FF FF FF 
0272   0A00 FF FF FF FF 
0272   0A04 FF FF FF FF 
0272   0A08 FF FF FF FF 
0272   0A0C FF FF FF FF 
0272   0A10 FF FF FF FF 
0272   0A14 FF FF FF FF 
0272   0A18 FF FF FF FF 
0272   0A1C FF FF FF FF 
0272   0A20 FF FF FF FF 
0272   0A24 FF FF FF FF 
0272   0A28 FF FF FF FF 
0272   0A2C FF FF FF FF 
0272   0A30 FF FF FF FF 
0272   0A34 FF FF FF FF 
0272   0A38 FF FF FF FF 
0272   0A3C FF FF FF FF 
0272   0A40 FF FF FF FF 
0272   0A44 FF FF FF FF 
0272   0A48 FF FF FF FF 
0272   0A4C FF FF FF FF 
0272   0A50 FF FF FF FF 
0272   0A54 FF FF FF FF 
0272   0A58 FF FF FF FF 
0272   0A5C FF FF FF FF 
0272   0A60 FF FF FF FF 
0272   0A64 FF FF FF FF 
0272   0A68 FF FF FF FF 
0272   0A6C FF FF FF FF 
0272   0A70 FF FF FF FF 
0272   0A74 FF FF FF FF 
0272   0A78 FF FF FF FF 
0272   0A7C FF FF FF FF 
0272   0A80 FF FF FF FF 
0272   0A84 FF FF FF FF 
0272   0A88 FF FF FF FF 
0272   0A8C FF FF FF FF 
0272   0A90 FF FF FF FF 
0272   0A94 FF FF FF FF 
0272   0A98 FF FF FF FF 
0272   0A9C FF FF FF FF 
0272   0AA0 FF FF FF FF 
0272   0AA4 FF FF FF FF 
0272   0AA8 FF FF FF FF 
0272   0AAC FF FF FF FF 
0272   0AB0 FF FF FF FF 
0272   0AB4 FF FF FF FF 
0272   0AB8 FF FF FF FF 
0272   0ABC FF FF FF FF 
0272   0AC0 FF FF FF FF 
0272   0AC4 FF FF FF FF 
0272   0AC8 FF FF FF FF 
0272   0ACC FF FF FF FF 
0272   0AD0 FF FF FF FF 
0272   0AD4 FF FF FF FF 
0272   0AD8 FF FF FF FF 
0272   0ADC FF FF FF FF 
0272   0AE0 FF FF FF FF 
0272   0AE4 FF FF FF FF 
0272   0AE8 FF FF FF FF 
0272   0AEC FF FF FF FF 
0272   0AF0 FF FF FF FF 
0272   0AF4 FF FF FF FF 
0272   0AF8 FF FF FF FF 
0272   0AFC FF FF FF FF 
0272   0B00 FF FF FF FF 
0272   0B04 FF FF FF FF 
0272   0B08 FF FF FF FF 
0272   0B0C FF FF FF FF 
0272   0B10 FF FF FF FF 
0272   0B14 FF FF FF FF 
0272   0B18 FF FF FF FF 
0272   0B1C FF FF FF FF 
0272   0B20 FF FF FF FF 
0272   0B24 FF FF FF FF 
0272   0B28 FF FF FF FF 
0272   0B2C FF FF FF FF 
0272   0B30 FF FF FF FF 
0272   0B34 FF FF FF FF 
0272   0B38 FF FF FF FF 
0272   0B3C FF FF FF FF 
0272   0B40 FF FF FF FF 
0272   0B44 FF FF FF FF 
0272   0B48 FF FF FF FF 
0272   0B4C FF FF FF FF 
0272   0B50 FF FF FF FF 
0272   0B54 FF FF FF FF 
0272   0B58 FF FF FF FF 
0272   0B5C FF FF FF FF 
0272   0B60 FF FF FF FF 
0272   0B64 FF FF FF FF 
0272   0B68 FF FF FF FF 
0272   0B6C FF FF FF FF 
0272   0B70 FF FF FF FF 
0272   0B74 FF FF FF FF 
0272   0B78 FF FF FF FF 
0272   0B7C FF FF FF FF 
0272   0B80 FF FF FF FF 
0272   0B84 FF FF FF FF 
0272   0B88 FF FF FF FF 
0272   0B8C FF FF FF FF 
0272   0B90 FF FF FF FF 
0272   0B94 FF FF FF FF 
0272   0B98 FF FF FF FF 
0272   0B9C FF FF FF FF 
0272   0BA0 FF FF FF FF 
0272   0BA4 FF FF FF FF 
0272   0BA8 FF FF FF FF 
0272   0BAC FF FF FF FF 
0272   0BB0 FF FF FF FF 
0272   0BB4 FF FF FF FF 
0272   0BB8 FF FF FF FF 
0272   0BBC FF FF FF FF 
0272   0BC0 FF FF FF FF 
0272   0BC4 FF FF FF FF 
0272   0BC8 FF FF FF FF 
0272   0BCC FF FF FF FF 
0272   0BD0 FF FF FF FF 
0272   0BD4 FF FF FF FF 
0272   0BD8 FF FF FF FF 
0272   0BDC FF FF FF FF 
0272   0BE0 FF FF FF FF 
0272   0BE4 FF FF FF FF 
0272   0BE8 FF FF FF FF 
0272   0BEC FF FF FF FF 
0272   0BF0 FF FF FF FF 
0272   0BF4 FF FF FF FF 
0272   0BF8 FF FF FF FF 
0272   0BFC FF FF FF FF 
0272   0C00 FF FF FF FF 
0272   0C04 FF FF FF FF 
0272   0C08 FF FF FF FF 
0272   0C0C FF FF FF FF 
0272   0C10 FF FF FF FF 
0272   0C14 FF FF FF FF 
0272   0C18 FF FF FF FF 
0272   0C1C FF FF FF FF 
0272   0C20 FF FF FF FF 
0272   0C24 FF FF FF FF 
0272   0C28 FF FF FF FF 
0272   0C2C FF FF FF FF 
0272   0C30 FF FF FF FF 
0272   0C34 FF FF FF FF 
0272   0C38 FF FF FF FF 
0272   0C3C FF FF FF FF 
0272   0C40 FF FF FF FF 
0272   0C44 FF FF FF FF 
0272   0C48 FF FF FF FF 
0272   0C4C FF FF FF FF 
0272   0C50 FF FF FF FF 
0272   0C54 FF FF FF FF 
0272   0C58 FF FF FF FF 
0272   0C5C FF FF FF FF 
0272   0C60 FF FF FF FF 
0272   0C64 FF FF FF FF 
0272   0C68 FF FF FF FF 
0272   0C6C FF FF FF FF 
0272   0C70 FF FF FF FF 
0272   0C74 FF FF FF FF 
0272   0C78 FF FF FF FF 
0272   0C7C FF FF FF FF 
0272   0C80 FF FF FF FF 
0272   0C84 FF FF FF FF 
0272   0C88 FF FF FF FF 
0272   0C8C FF FF FF FF 
0272   0C90 FF FF FF FF 
0272   0C94 FF FF FF FF 
0272   0C98 FF FF FF FF 
0272   0C9C FF FF FF FF 
0272   0CA0 FF FF FF FF 
0272   0CA4 FF FF FF FF 
0272   0CA8 FF FF FF FF 
0272   0CAC FF FF FF FF 
0272   0CB0 FF FF FF FF 
0272   0CB4 FF FF FF FF 
0272   0CB8 FF FF FF FF 
0272   0CBC FF FF FF FF 
0272   0CC0 FF FF FF FF 
0272   0CC4 FF FF FF FF 
0272   0CC8 FF FF FF FF 
0272   0CCC FF FF FF FF 
0272   0CD0 FF FF FF FF 
0272   0CD4 FF FF FF FF 
0272   0CD8 FF FF FF FF 
0272   0CDC FF FF FF FF 
0272   0CE0 FF FF FF FF 
0272   0CE4 FF FF FF FF 
0272   0CE8 FF FF FF FF 
0272   0CEC FF FF FF FF 
0272   0CF0 FF FF FF FF 
0272   0CF4 FF FF FF FF 
0272   0CF8 FF FF FF FF 
0272   0CFC FF FF FF FF 
0272   0D00 FF FF FF FF 
0272   0D04 FF FF FF FF 
0272   0D08 FF FF FF FF 
0272   0D0C FF FF FF FF 
0272   0D10 FF FF FF FF 
0272   0D14 FF FF FF FF 
0272   0D18 FF FF FF FF 
0272   0D1C FF FF FF FF 
0272   0D20 FF FF FF FF 
0272   0D24 FF FF FF FF 
0272   0D28 FF FF FF FF 
0272   0D2C FF FF FF FF 
0272   0D30 FF FF FF FF 
0272   0D34 FF FF FF FF 
0272   0D38 FF FF FF FF 
0272   0D3C FF FF FF FF 
0272   0D40 FF FF FF FF 
0272   0D44 FF FF FF FF 
0272   0D48 FF FF FF FF 
0272   0D4C FF FF FF FF 
0272   0D50 FF FF FF FF 
0272   0D54 FF FF FF FF 
0272   0D58 FF FF FF FF 
0272   0D5C FF FF FF FF 
0272   0D60 FF FF FF FF 
0272   0D64 FF FF FF FF 
0272   0D68 FF FF FF FF 
0272   0D6C FF FF FF FF 
0272   0D70 FF FF FF FF 
0272   0D74 FF FF FF FF 
0272   0D78 FF FF FF FF 
0272   0D7C FF FF FF FF 
0272   0D80 FF FF FF FF 
0272   0D84 FF FF FF FF 
0272   0D88 FF FF FF FF 
0272   0D8C FF FF FF FF 
0272   0D90 FF FF FF FF 
0272   0D94 FF FF FF FF 
0272   0D98 FF FF FF FF 
0272   0D9C FF FF FF FF 
0272   0DA0 FF FF FF FF 
0272   0DA4 FF FF FF FF 
0272   0DA8 FF FF FF FF 
0272   0DAC FF FF FF FF 
0272   0DB0 FF FF FF FF 
0272   0DB4 FF FF FF FF 
0272   0DB8 FF FF FF FF 
0272   0DBC FF FF FF FF 
0272   0DC0 FF FF FF FF 
0272   0DC4 FF FF FF FF 
0272   0DC8 FF FF FF FF 
0272   0DCC FF FF FF FF 
0272   0DD0 FF FF FF FF 
0272   0DD4 FF FF FF FF 
0272   0DD8 FF FF FF FF 
0272   0DDC FF FF FF FF 
0272   0DE0 FF FF FF FF 
0272   0DE4 FF FF FF FF 
0272   0DE8 FF FF FF FF 
0272   0DEC FF FF FF FF 
0272   0DF0 FF FF FF FF 
0272   0DF4 FF FF FF FF 
0272   0DF8 FF FF FF FF 
0272   0DFC FF FF FF FF 
0272   0E00 FF FF FF FF 
0272   0E04 FF FF FF FF 
0272   0E08 FF FF FF FF 
0272   0E0C FF FF FF FF 
0272   0E10 FF FF FF FF 
0272   0E14 FF FF FF FF 
0272   0E18 FF FF FF FF 
0272   0E1C FF FF FF FF 
0272   0E20 FF FF FF FF 
0272   0E24 FF FF FF FF 
0272   0E28 FF FF FF FF 
0272   0E2C FF FF FF FF 
0272   0E30 FF FF FF FF 
0272   0E34 FF FF FF FF 
0272   0E38 FF FF FF FF 
0272   0E3C FF FF FF FF 
0272   0E40 FF FF FF FF 
0272   0E44 FF FF FF FF 
0272   0E48 FF FF FF FF 
0272   0E4C FF FF FF FF 
0272   0E50 FF FF FF FF 
0272   0E54 FF FF FF FF 
0272   0E58 FF FF FF FF 
0272   0E5C FF FF FF FF 
0272   0E60 FF FF FF FF 
0272   0E64 FF FF FF FF 
0272   0E68 FF FF FF FF 
0272   0E6C FF FF FF FF 
0272   0E70 FF FF FF FF 
0272   0E74 FF FF FF FF 
0272   0E78 FF FF FF FF 
0272   0E7C FF FF FF FF 
0272   0E80 FF FF FF FF 
0272   0E84 FF FF FF FF 
0272   0E88 FF FF FF FF 
0272   0E8C FF FF FF FF 
0272   0E90 FF FF FF FF 
0272   0E94 FF FF FF FF 
0272   0E98 FF FF FF FF 
0272   0E9C FF FF FF FF 
0272   0EA0 FF FF FF FF 
0272   0EA4 FF FF FF FF 
0272   0EA8 FF FF FF FF 
0272   0EAC FF FF FF FF 
0272   0EB0 FF FF FF FF 
0272   0EB4 FF FF FF FF 
0272   0EB8 FF FF FF FF 
0272   0EBC FF FF FF FF 
0272   0EC0 FF FF FF FF 
0272   0EC4 FF FF FF FF 
0272   0EC8 FF FF FF FF 
0272   0ECC FF FF FF FF 
0272   0ED0 FF FF FF FF 
0272   0ED4 FF FF FF FF 
0272   0ED8 FF FF FF FF 
0272   0EDC FF FF FF FF 
0272   0EE0 FF FF FF FF 
0272   0EE4 FF FF FF FF 
0272   0EE8 FF FF FF FF 
0272   0EEC FF FF FF FF 
0272   0EF0 FF FF FF FF 
0272   0EF4 FF FF FF FF 
0272   0EF8 FF FF FF FF 
0272   0EFC FF FF FF FF 
0272   0F00 FF FF FF FF 
0272   0F04 FF FF FF FF 
0272   0F08 FF FF FF FF 
0272   0F0C FF FF FF FF 
0272   0F10 FF FF FF FF 
0272   0F14 FF FF FF FF 
0272   0F18 FF FF FF FF 
0272   0F1C FF FF FF FF 
0272   0F20 FF FF FF FF 
0272   0F24 FF FF FF FF 
0272   0F28 FF FF FF FF 
0272   0F2C FF FF FF FF 
0272   0F30 FF FF FF FF 
0272   0F34 FF FF FF FF 
0272   0F38 FF FF FF FF 
0272   0F3C FF FF FF FF 
0272   0F40 FF FF FF FF 
0272   0F44 FF FF FF FF 
0272   0F48 FF FF FF FF 
0272   0F4C FF FF FF FF 
0272   0F50 FF FF FF FF 
0272   0F54 FF FF FF FF 
0272   0F58 FF FF FF FF 
0272   0F5C FF FF FF FF 
0272   0F60 FF FF FF FF 
0272   0F64 FF FF FF FF 
0272   0F68 FF FF FF FF 
0272   0F6C FF FF FF FF 
0272   0F70 FF FF FF FF 
0272   0F74 FF FF FF FF 
0272   0F78 FF FF FF FF 
0272   0F7C FF FF FF FF 
0272   0F80 FF FF FF FF 
0272   0F84 FF FF FF FF 
0272   0F88 FF FF FF FF 
0272   0F8C FF FF FF FF 
0272   0F90 FF FF FF FF 
0272   0F94 FF FF FF FF 
0272   0F98 FF FF FF FF 
0272   0F9C FF FF FF FF 
0272   0FA0 FF FF FF FF 
0272   0FA4 FF FF FF FF 
0272   0FA8 FF FF FF FF 
0272   0FAC FF FF FF FF 
0272   0FB0 FF FF FF FF 
0272   0FB4 FF FF FF FF 
0272   0FB8 FF FF FF FF 
0272   0FBC FF FF FF FF 
0272   0FC0 FF FF FF FF 
0272   0FC4 FF FF FF FF 
0272   0FC8 FF FF FF FF 
0272   0FCC FF FF FF FF 
0272   0FD0 FF FF FF FF 
0272   0FD4 FF FF FF FF 
0272   0FD8 FF FF FF FF 
0272   0FDC FF FF FF FF 
0272   0FE0 FF FF FF FF 
0272   0FE4 FF FF FF FF 
0272   0FE8 FF FF FF FF 
0272   0FEC FF FF FF FF 
0272   0FF0 FF FF FF FF 
0272   0FF4 FF FF FF FF 
0272   0FF8 FF FF FF FF 
0272   0FFC FF FF FF FF 
0272   1000 FF FF FF FF 
0272   1004 FF FF FF FF 
0272   1008 FF FF FF FF 
0272   100C FF FF FF FF 
0272   1010 FF FF FF FF 
0272   1014 FF FF FF FF 
0272   1018 FF FF FF FF 
0272   101C FF FF FF FF 
0272   1020 FF FF FF FF 
0272   1024 FF FF FF FF 
0272   1028 FF FF FF FF 
0272   102C FF FF FF FF 
0272   1030 FF FF FF FF 
0272   1034 FF FF FF FF 
0272   1038 FF FF FF FF 
0272   103C FF FF FF FF 
0272   1040 FF FF FF FF 
0272   1044 FF FF FF FF 
0272   1048 FF FF FF FF 
0272   104C FF FF FF FF 
0272   1050 FF FF FF FF 
0272   1054 FF FF FF FF 
0272   1058 FF FF FF FF 
0272   105C FF FF FF FF 
0272   1060 FF FF FF FF 
0272   1064 FF FF FF FF 
0272   1068 FF FF FF FF 
0272   106C FF FF FF FF 
0272   1070 FF FF FF FF 
0272   1074 FF FF FF FF 
0272   1078 FF FF FF FF 
0272   107C FF FF FF FF 
0272   1080 FF FF FF FF 
0272   1084 FF FF FF FF 
0272   1088 FF FF FF FF 
0272   108C FF FF FF FF 
0272   1090 FF FF FF FF 
0272   1094 FF FF FF FF 
0272   1098 FF FF FF FF 
0272   109C FF FF FF FF 
0272   10A0 FF FF FF FF 
0272   10A4 FF FF FF FF 
0272   10A8 FF FF FF FF 
0272   10AC FF FF FF FF 
0272   10B0 FF FF FF FF 
0272   10B4 FF FF FF FF 
0272   10B8 FF FF FF FF 
0272   10BC FF FF FF FF 
0272   10C0 FF FF FF FF 
0272   10C4 FF FF FF FF 
0272   10C8 FF FF FF FF 
0272   10CC FF FF FF FF 
0272   10D0 FF FF FF FF 
0272   10D4 FF FF FF FF 
0272   10D8 FF FF FF FF 
0272   10DC FF FF FF FF 
0272   10E0 FF FF FF FF 
0272   10E4 FF FF FF FF 
0272   10E8 FF FF FF FF 
0272   10EC FF FF FF FF 
0272   10F0 FF FF FF FF 
0272   10F4 FF FF FF FF 
0272   10F8 FF FF FF FF 
0272   10FC FF FF FF FF 
0272   1100 FF FF FF FF 
0272   1104 FF FF FF FF 
0272   1108 FF FF FF FF 
0272   110C FF FF FF FF 
0272   1110 FF FF FF FF 
0272   1114 FF FF FF FF 
0272   1118 FF FF FF FF 
0272   111C FF FF FF FF 
0272   1120 FF FF FF FF 
0272   1124 FF FF FF FF 
0272   1128 FF FF FF FF 
0272   112C FF FF FF FF 
0272   1130 FF FF FF FF 
0272   1134 FF FF FF FF 
0272   1138 FF FF FF FF 
0272   113C FF FF FF FF 
0272   1140 FF FF FF FF 
0272   1144 FF FF FF FF 
0272   1148 FF FF FF FF 
0272   114C FF FF FF FF 
0272   1150 FF FF FF FF 
0272   1154 FF FF FF FF 
0272   1158 FF FF FF FF 
0272   115C FF FF FF FF 
0272   1160 FF FF FF FF 
0272   1164 FF FF FF FF 
0272   1168 FF FF FF FF 
0272   116C FF FF FF FF 
0272   1170 FF FF FF FF 
0272   1174 FF FF FF FF 
0272   1178 FF FF FF FF 
0272   117C FF FF FF FF 
0272   1180 FF FF FF FF 
0272   1184 FF FF FF FF 
0272   1188 FF FF FF FF 
0272   118C FF FF FF FF 
0272   1190 FF FF FF FF 
0272   1194 FF FF FF FF 
0272   1198 FF FF FF FF 
0272   119C FF FF FF FF 
0272   11A0 FF FF FF FF 
0272   11A4 FF FF FF FF 
0272   11A8 FF FF FF FF 
0272   11AC FF FF FF FF 
0272   11B0 FF FF FF FF 
0272   11B4 FF FF FF FF 
0272   11B8 FF FF FF FF 
0272   11BC FF FF FF FF 
0272   11C0 FF FF FF FF 
0272   11C4 FF FF FF FF 
0272   11C8 FF FF FF FF 
0272   11CC FF FF FF FF 
0272   11D0 FF FF FF FF 
0272   11D4 FF FF FF FF 
0272   11D8 FF FF FF FF 
0272   11DC FF FF FF FF 
0272   11E0 FF FF FF FF 
0272   11E4 FF FF FF FF 
0272   11E8 FF FF FF FF 
0272   11EC FF FF FF FF 
0272   11F0 FF FF FF FF 
0272   11F4 FF FF FF FF 
0272   11F8 FF FF FF FF 
0272   11FC FF FF FF FF 
0272   1200 FF FF FF FF 
0272   1204 FF FF FF FF 
0272   1208 FF FF FF FF 
0272   120C FF FF FF FF 
0272   1210 FF FF FF FF 
0272   1214 FF FF FF FF 
0272   1218 FF FF FF FF 
0272   121C FF FF FF FF 
0272   1220 FF FF FF FF 
0272   1224 FF FF FF FF 
0272   1228 FF FF FF FF 
0272   122C FF FF FF FF 
0272   1230 FF FF FF FF 
0272   1234 FF FF FF FF 
0272   1238 FF FF FF FF 
0272   123C FF FF FF FF 
0272   1240 FF FF FF FF 
0272   1244 FF FF FF FF 
0272   1248 FF FF FF FF 
0272   124C FF FF FF FF 
0272   1250 FF FF FF FF 
0272   1254 FF FF FF FF 
0272   1258 FF FF FF FF 
0272   125C FF FF FF FF 
0272   1260 FF FF FF FF 
0272   1264 FF FF FF FF 
0272   1268 FF FF FF FF 
0272   126C FF FF FF FF 
0272   1270 FF FF FF FF 
0272   1274 FF FF FF FF 
0272   1278 FF FF FF FF 
0272   127C FF FF FF FF 
0272   1280 FF FF FF FF 
0272   1284 FF FF FF FF 
0272   1288 FF FF FF FF 
0272   128C FF FF FF FF 
0272   1290 FF FF FF FF 
0272   1294 FF FF FF FF 
0272   1298 FF FF FF FF 
0272   129C FF FF FF FF 
0272   12A0 FF FF FF FF 
0272   12A4 FF FF FF FF 
0272   12A8 FF FF FF FF 
0272   12AC FF FF FF FF 
0272   12B0 FF FF FF FF 
0272   12B4 FF FF FF FF 
0272   12B8 FF FF FF FF 
0272   12BC FF FF FF FF 
0272   12C0 FF FF FF FF 
0272   12C4 FF FF FF FF 
0272   12C8 FF FF FF FF 
0272   12CC FF FF FF FF 
0272   12D0 FF FF FF FF 
0272   12D4 FF FF FF FF 
0272   12D8 FF FF FF FF 
0272   12DC FF FF FF FF 
0272   12E0 FF FF FF FF 
0272   12E4 FF FF FF FF 
0272   12E8 FF FF FF FF 
0272   12EC FF FF FF FF 
0272   12F0 FF FF FF FF 
0272   12F4 FF FF FF FF 
0272   12F8 FF FF FF FF 
0272   12FC FF FF FF FF 
0272   1300 FF FF FF FF 
0272   1304 FF FF FF FF 
0272   1308 FF FF FF FF 
0272   130C FF FF FF FF 
0272   1310 FF FF FF FF 
0272   1314 FF FF FF FF 
0272   1318 FF FF FF FF 
0272   131C FF FF FF FF 
0272   1320 FF FF FF FF 
0272   1324 FF FF FF FF 
0272   1328 FF FF FF FF 
0272   132C FF FF FF FF 
0272   1330 FF FF FF FF 
0272   1334 FF FF FF FF 
0272   1338 FF FF FF FF 
0272   133C FF FF FF FF 
0272   1340 FF FF FF FF 
0272   1344 FF FF FF FF 
0272   1348 FF FF FF FF 
0272   134C FF FF FF FF 
0272   1350 FF FF FF FF 
0272   1354 FF FF FF FF 
0272   1358 FF FF FF FF 
0272   135C FF FF FF FF 
0272   1360 FF FF FF FF 
0272   1364 FF FF FF FF 
0272   1368 FF FF FF FF 
0272   136C FF FF FF FF 
0272   1370 FF FF FF FF 
0272   1374 FF FF FF FF 
0272   1378 FF FF FF FF 
0272   137C FF FF FF FF 
0272   1380 FF FF FF FF 
0272   1384 FF FF FF FF 
0272   1388 FF FF FF FF 
0272   138C FF FF FF FF 
0272   1390 FF FF FF FF 
0272   1394 FF FF FF FF 
0272   1398 FF FF FF FF 
0272   139C FF FF FF FF 
0272   13A0 FF FF FF FF 
0272   13A4 FF FF FF FF 
0272   13A8 FF FF FF FF 
0272   13AC FF FF FF FF 
0272   13B0 FF FF FF FF 
0272   13B4 FF FF FF FF 
0272   13B8 FF FF FF FF 
0272   13BC FF FF FF FF 
0272   13C0 FF FF FF FF 
0272   13C4 FF FF FF FF 
0272   13C8 FF FF FF FF 
0272   13CC FF FF FF FF 
0272   13D0 FF FF FF FF 
0272   13D4 FF FF FF FF 
0272   13D8 FF FF FF FF 
0272   13DC FF FF FF FF 
0272   13E0 FF FF FF FF 
0272   13E4 FF FF FF FF 
0272   13E8 FF FF FF FF 
0272   13EC FF FF FF FF 
0272   13F0 FF FF FF FF 
0272   13F4 FF FF FF FF 
0272   13F8 FF FF FF FF 
0272   13FC FF FF FF FF 
0272   1400 FF FF FF FF 
0272   1404 FF FF FF FF 
0272   1408 FF FF FF FF 
0272   140C FF FF FF FF 
0272   1410 FF FF FF FF 
0272   1414 FF FF FF FF 
0272   1418 FF FF FF FF 
0272   141C FF FF FF FF 
0272   1420 FF FF FF FF 
0272   1424 FF FF FF FF 
0272   1428 FF FF FF FF 
0272   142C FF FF FF FF 
0272   1430 FF FF FF FF 
0272   1434 FF FF FF FF 
0272   1438 FF FF FF FF 
0272   143C FF FF FF FF 
0272   1440 FF FF FF FF 
0272   1444 FF FF FF FF 
0272   1448 FF FF FF FF 
0272   144C FF FF FF FF 
0272   1450 FF FF FF FF 
0272   1454 FF FF FF FF 
0272   1458 FF FF FF FF 
0272   145C FF FF FF FF 
0272   1460 FF FF FF FF 
0272   1464 FF FF FF FF 
0272   1468 FF FF FF FF 
0272   146C FF FF FF FF 
0272   1470 FF FF FF FF 
0272   1474 FF FF FF FF 
0272   1478 FF FF FF FF 
0272   147C FF FF FF FF 
0272   1480 FF FF FF FF 
0272   1484 FF FF FF FF 
0272   1488 FF FF FF FF 
0272   148C FF FF FF FF 
0272   1490 FF FF FF FF 
0272   1494 FF FF FF FF 
0272   1498 FF FF FF FF 
0272   149C FF FF FF FF 
0272   14A0 FF FF FF FF 
0272   14A4 FF FF FF FF 
0272   14A8 FF FF FF FF 
0272   14AC FF FF FF FF 
0272   14B0 FF FF FF FF 
0272   14B4 FF FF FF FF 
0272   14B8 FF FF FF FF 
0272   14BC FF FF FF FF 
0272   14C0 FF FF FF FF 
0272   14C4 FF FF FF FF 
0272   14C8 FF FF FF FF 
0272   14CC FF FF FF FF 
0272   14D0 FF FF FF FF 
0272   14D4 FF FF FF FF 
0272   14D8 FF FF FF FF 
0272   14DC FF FF FF FF 
0272   14E0 FF FF FF FF 
0272   14E4 FF FF FF FF 
0272   14E8 FF FF FF FF 
0272   14EC FF FF FF FF 
0272   14F0 FF FF FF FF 
0272   14F4 FF FF FF FF 
0272   14F8 FF FF FF FF 
0272   14FC FF FF FF FF 
0272   1500 FF FF FF FF 
0272   1504 FF FF FF FF 
0272   1508 FF FF FF FF 
0272   150C FF FF FF FF 
0272   1510 FF FF FF FF 
0272   1514 FF FF FF FF 
0272   1518 FF FF FF FF 
0272   151C FF FF FF FF 
0272   1520 FF FF FF FF 
0272   1524 FF FF FF FF 
0272   1528 FF FF FF FF 
0272   152C FF FF FF FF 
0272   1530 FF FF FF FF 
0272   1534 FF FF FF FF 
0272   1538 FF FF FF FF 
0272   153C FF FF FF FF 
0272   1540 FF FF FF FF 
0272   1544 FF FF FF FF 
0272   1548 FF FF FF FF 
0272   154C FF FF FF FF 
0272   1550 FF FF FF FF 
0272   1554 FF FF FF FF 
0272   1558 FF FF FF FF 
0272   155C FF FF FF FF 
0272   1560 FF FF FF FF 
0272   1564 FF FF FF FF 
0272   1568 FF FF FF FF 
0272   156C FF FF FF FF 
0272   1570 FF FF FF FF 
0272   1574 FF FF FF FF 
0272   1578 FF FF FF FF 
0272   157C FF FF FF FF 
0272   1580 FF FF FF FF 
0272   1584 FF FF FF FF 
0272   1588 FF FF FF FF 
0272   158C FF FF FF FF 
0272   1590 FF FF FF FF 
0272   1594 FF FF FF FF 
0272   1598 FF FF FF FF 
0272   159C FF FF FF FF 
0272   15A0 FF FF FF FF 
0272   15A4 FF FF FF FF 
0272   15A8 FF FF FF FF 
0272   15AC FF FF FF FF 
0272   15B0 FF FF FF FF 
0272   15B4 FF FF FF FF 
0272   15B8 FF FF FF FF 
0272   15BC FF FF FF FF 
0272   15C0 FF FF FF FF 
0272   15C4 FF FF FF FF 
0272   15C8 FF FF FF FF 
0272   15CC FF FF FF FF 
0272   15D0 FF FF FF FF 
0272   15D4 FF FF FF FF 
0272   15D8 FF FF FF FF 
0272   15DC FF FF FF FF 
0272   15E0 FF FF FF FF 
0272   15E4 FF FF FF FF 
0272   15E8 FF FF FF FF 
0272   15EC FF FF FF FF 
0272   15F0 FF FF FF FF 
0272   15F4 FF FF FF FF 
0272   15F8 FF FF FF FF 
0272   15FC FF FF FF FF 
0272   1600 FF FF FF FF 
0272   1604 FF FF FF FF 
0272   1608 FF FF FF FF 
0272   160C FF FF FF FF 
0272   1610 FF FF FF FF 
0272   1614 FF FF FF FF 
0272   1618 FF FF FF FF 
0272   161C FF FF FF FF 
0272   1620 FF FF FF FF 
0272   1624 FF FF FF FF 
0272   1628 FF FF FF FF 
0272   162C FF FF FF FF 
0272   1630 FF FF FF FF 
0272   1634 FF FF FF FF 
0272   1638 FF FF FF FF 
0272   163C FF FF FF FF 
0272   1640 FF FF FF FF 
0272   1644 FF FF FF FF 
0272   1648 FF FF FF FF 
0272   164C FF FF FF FF 
0272   1650 FF FF FF FF 
0272   1654 FF FF FF FF 
0272   1658 FF FF FF FF 
0272   165C FF FF FF FF 
0272   1660 FF FF FF FF 
0272   1664 FF FF FF FF 
0272   1668 FF FF FF FF 
0272   166C FF FF FF FF 
0272   1670 FF FF FF FF 
0272   1674 FF FF FF FF 
0272   1678 FF FF FF FF 
0272   167C FF FF FF FF 
0272   1680 FF FF FF FF 
0272   1684 FF FF FF FF 
0272   1688 FF FF FF FF 
0272   168C FF FF FF FF 
0272   1690 FF FF FF FF 
0272   1694 FF FF FF FF 
0272   1698 FF FF FF FF 
0272   169C FF FF FF FF 
0272   16A0 FF FF FF FF 
0272   16A4 FF FF FF FF 
0272   16A8 FF FF FF FF 
0272   16AC FF FF FF FF 
0272   16B0 FF FF FF FF 
0272   16B4 FF FF FF FF 
0272   16B8 FF FF FF FF 
0272   16BC FF FF FF FF 
0272   16C0 FF FF FF FF 
0272   16C4 FF FF FF FF 
0272   16C8 FF FF FF FF 
0272   16CC FF FF FF FF 
0272   16D0 FF FF FF FF 
0272   16D4 FF FF FF FF 
0272   16D8 FF FF FF FF 
0272   16DC FF FF FF FF 
0272   16E0 FF FF FF FF 
0272   16E4 FF FF FF FF 
0272   16E8 FF FF FF FF 
0272   16EC FF FF FF FF 
0272   16F0 FF FF FF FF 
0272   16F4 FF FF FF FF 
0272   16F8 FF FF FF FF 
0272   16FC FF FF FF FF 
0272   1700 FF FF FF FF 
0272   1704 FF FF FF FF 
0272   1708 FF FF FF FF 
0272   170C FF FF FF FF 
0272   1710 FF FF FF FF 
0272   1714 FF FF FF FF 
0272   1718 FF FF FF FF 
0272   171C FF FF FF FF 
0272   1720 FF FF FF FF 
0272   1724 FF FF FF FF 
0272   1728 FF FF FF FF 
0272   172C FF FF FF FF 
0272   1730 FF FF FF FF 
0272   1734 FF FF FF FF 
0272   1738 FF FF FF FF 
0272   173C FF FF FF FF 
0272   1740 FF FF FF FF 
0272   1744 FF FF FF FF 
0272   1748 FF FF FF FF 
0272   174C FF FF FF FF 
0272   1750 FF FF FF FF 
0272   1754 FF FF FF FF 
0272   1758 FF FF FF FF 
0272   175C FF FF FF FF 
0272   1760 FF FF FF FF 
0272   1764 FF FF FF FF 
0272   1768 FF FF FF FF 
0272   176C FF FF FF FF 
0272   1770 FF FF FF FF 
0272   1774 FF FF FF FF 
0272   1778 FF FF FF FF 
0272   177C FF FF FF FF 
0272   1780 FF FF FF FF 
0272   1784 FF FF FF FF 
0272   1788 FF FF FF FF 
0272   178C FF FF FF FF 
0272   1790 FF FF FF FF 
0272   1794 FF FF FF FF 
0272   1798 FF FF FF FF 
0272   179C FF FF FF FF 
0272   17A0 FF FF FF FF 
0272   17A4 FF FF FF FF 
0272   17A8 FF FF FF FF 
0272   17AC FF FF FF FF 
0272   17B0 FF FF FF FF 
0272   17B4 FF FF FF FF 
0272   17B8 FF FF FF FF 
0272   17BC FF FF FF FF 
0272   17C0 FF FF FF FF 
0272   17C4 FF FF FF FF 
0272   17C8 FF FF FF FF 
0272   17CC FF FF FF FF 
0272   17D0 FF FF FF FF 
0272   17D4 FF FF FF FF 
0272   17D8 FF FF FF FF 
0272   17DC FF FF FF FF 
0272   17E0 FF FF FF FF 
0272   17E4 FF FF FF FF 
0272   17E8 FF FF FF FF 
0272   17EC FF FF FF FF 
0272   17F0 FF FF FF FF 
0272   17F4 FF FF FF FF 
0272   17F8 FF FF FF FF 
0272   17FC FF FF FF FF 
0272   1800 FF FF FF FF 
0272   1804 FF FF FF FF 
0272   1808 FF FF FF FF 
0272   180C FF FF FF FF 
0272   1810 FF FF FF FF 
0272   1814 FF FF FF FF 
0272   1818 FF FF FF FF 
0272   181C FF FF FF FF 
0272   1820 FF FF FF FF 
0272   1824 FF FF FF FF 
0272   1828 FF FF FF FF 
0272   182C FF FF FF FF 
0272   1830 FF FF FF FF 
0272   1834 FF FF FF FF 
0272   1838 FF FF FF FF 
0272   183C FF FF FF FF 
0272   1840 FF FF FF FF 
0272   1844 FF FF FF FF 
0272   1848 FF FF FF FF 
0272   184C FF FF FF FF 
0272   1850 FF FF FF FF 
0272   1854 FF FF FF FF 
0272   1858 FF FF FF FF 
0272   185C FF FF FF FF 
0272   1860 FF FF FF FF 
0272   1864 FF FF FF FF 
0272   1868 FF FF FF FF 
0272   186C FF FF FF FF 
0272   1870 FF FF FF FF 
0272   1874 FF FF FF FF 
0272   1878 FF FF FF FF 
0272   187C FF FF FF FF 
0272   1880 FF FF FF FF 
0272   1884 FF FF FF FF 
0272   1888 FF FF FF FF 
0272   188C FF FF FF FF 
0272   1890 FF FF FF FF 
0272   1894 FF FF FF FF 
0272   1898 FF FF FF FF 
0272   189C FF FF FF FF 
0272   18A0 FF FF FF FF 
0272   18A4 FF FF FF FF 
0272   18A8 FF FF FF FF 
0272   18AC FF FF FF FF 
0272   18B0 FF FF FF FF 
0272   18B4 FF FF FF FF 
0272   18B8 FF FF FF FF 
0272   18BC FF FF FF FF 
0272   18C0 FF FF FF FF 
0272   18C4 FF FF FF FF 
0272   18C8 FF FF FF FF 
0272   18CC FF FF FF FF 
0272   18D0 FF FF FF FF 
0272   18D4 FF FF FF FF 
0272   18D8 FF FF FF FF 
0272   18DC FF FF FF FF 
0272   18E0 FF FF FF FF 
0272   18E4 FF FF FF FF 
0272   18E8 FF FF FF FF 
0272   18EC FF FF FF FF 
0272   18F0 FF FF FF FF 
0272   18F4 FF FF FF FF 
0272   18F8 FF FF FF FF 
0272   18FC FF FF FF FF 
0272   1900 FF FF FF FF 
0272   1904 FF FF FF FF 
0272   1908 FF FF FF FF 
0272   190C FF FF FF FF 
0272   1910 FF FF FF FF 
0272   1914 FF FF FF FF 
0272   1918 FF FF FF FF 
0272   191C FF FF FF FF 
0272   1920 FF FF FF FF 
0272   1924 FF FF FF FF 
0272   1928 FF FF FF FF 
0272   192C FF FF FF FF 
0272   1930 FF FF FF FF 
0272   1934 FF FF FF FF 
0272   1938 FF FF FF FF 
0272   193C FF FF FF FF 
0272   1940 FF FF FF FF 
0272   1944 FF FF FF FF 
0272   1948 FF FF FF FF 
0272   194C FF FF FF FF 
0272   1950 FF FF FF FF 
0272   1954 FF FF FF FF 
0272   1958 FF FF FF FF 
0272   195C FF FF FF FF 
0272   1960 FF FF FF FF 
0272   1964 FF FF FF FF 
0272   1968 FF FF FF FF 
0272   196C FF FF FF FF 
0272   1970 FF FF FF FF 
0272   1974 FF FF FF FF 
0272   1978 FF FF FF FF 
0272   197C FF FF FF FF 
0272   1980 FF FF FF FF 
0272   1984 FF FF FF FF 
0272   1988 FF FF FF FF 
0272   198C FF FF FF FF 
0272   1990 FF FF FF FF 
0272   1994 FF FF FF FF 
0272   1998 FF FF FF FF 
0272   199C FF FF FF FF 
0272   19A0 FF FF FF FF 
0272   19A4 FF FF FF FF 
0272   19A8 FF FF FF FF 
0272   19AC FF FF FF FF 
0272   19B0 FF FF FF FF 
0272   19B4 FF FF FF FF 
0272   19B8 FF FF FF FF 
0272   19BC FF FF FF FF 
0272   19C0 FF FF FF FF 
0272   19C4 FF FF FF FF 
0272   19C8 FF FF FF FF 
0272   19CC FF FF FF FF 
0272   19D0 FF FF FF FF 
0272   19D4 FF FF FF FF 
0272   19D8 FF FF FF FF 
0272   19DC FF FF FF FF 
0272   19E0 FF FF FF FF 
0272   19E4 FF FF FF FF 
0272   19E8 FF FF FF FF 
0272   19EC FF FF FF FF 
0272   19F0 FF FF FF FF 
0272   19F4 FF FF FF FF 
0272   19F8 FF FF FF FF 
0272   19FC FF FF FF FF 
0272   1A00 FF FF FF FF 
0272   1A04 FF FF FF FF 
0272   1A08 FF FF FF FF 
0272   1A0C FF FF FF FF 
0272   1A10 FF FF FF FF 
0272   1A14 FF FF FF FF 
0272   1A18 FF FF FF FF 
0272   1A1C FF FF FF FF 
0272   1A20 FF FF FF FF 
0272   1A24 FF FF FF FF 
0272   1A28 FF FF FF FF 
0272   1A2C FF FF FF FF 
0272   1A30 FF FF FF FF 
0272   1A34 FF FF FF FF 
0272   1A38 FF FF FF FF 
0272   1A3C FF FF FF FF 
0272   1A40 FF FF FF FF 
0272   1A44 FF FF FF FF 
0272   1A48 FF FF FF FF 
0272   1A4C FF FF FF FF 
0272   1A50 FF FF FF FF 
0272   1A54 FF FF FF FF 
0272   1A58 FF FF FF FF 
0272   1A5C FF FF FF FF 
0272   1A60 FF FF FF FF 
0272   1A64 FF FF FF FF 
0272   1A68 FF FF FF FF 
0272   1A6C FF FF FF FF 
0272   1A70 FF FF FF FF 
0272   1A74 FF FF FF FF 
0272   1A78 FF FF FF FF 
0272   1A7C FF FF FF FF 
0272   1A80 FF FF FF FF 
0272   1A84 FF FF FF FF 
0272   1A88 FF FF FF FF 
0272   1A8C FF FF FF FF 
0272   1A90 FF FF FF FF 
0272   1A94 FF FF FF FF 
0272   1A98 FF FF FF FF 
0272   1A9C FF FF FF FF 
0272   1AA0 FF FF FF FF 
0272   1AA4 FF FF FF FF 
0272   1AA8 FF FF FF FF 
0272   1AAC FF FF FF FF 
0272   1AB0 FF FF FF FF 
0272   1AB4 FF FF FF FF 
0272   1AB8 FF FF FF FF 
0272   1ABC FF FF FF FF 
0272   1AC0 FF FF FF FF 
0272   1AC4 FF FF FF FF 
0272   1AC8 FF FF FF FF 
0272   1ACC FF FF FF FF 
0272   1AD0 FF FF FF FF 
0272   1AD4 FF FF FF FF 
0272   1AD8 FF FF FF FF 
0272   1ADC FF FF FF FF 
0272   1AE0 FF FF FF FF 
0272   1AE4 FF FF FF FF 
0272   1AE8 FF FF FF FF 
0272   1AEC FF FF FF FF 
0272   1AF0 FF FF FF FF 
0272   1AF4 FF FF FF FF 
0272   1AF8 FF FF FF FF 
0272   1AFC FF FF FF FF 
0272   1B00 FF FF FF FF 
0272   1B04 FF FF FF FF 
0272   1B08 FF FF FF FF 
0272   1B0C FF FF FF FF 
0272   1B10 FF FF FF FF 
0272   1B14 FF FF FF FF 
0272   1B18 FF FF FF FF 
0272   1B1C FF FF FF FF 
0272   1B20 FF FF FF FF 
0272   1B24 FF FF FF FF 
0272   1B28 FF FF FF FF 
0272   1B2C FF FF FF FF 
0272   1B30 FF FF FF FF 
0272   1B34 FF FF FF FF 
0272   1B38 FF FF FF FF 
0272   1B3C FF FF FF FF 
0272   1B40 FF FF FF FF 
0272   1B44 FF FF FF FF 
0272   1B48 FF FF FF FF 
0272   1B4C FF FF FF FF 
0272   1B50 FF FF FF FF 
0272   1B54 FF FF FF FF 
0272   1B58 FF FF FF FF 
0272   1B5C FF FF FF FF 
0272   1B60 FF FF FF FF 
0272   1B64 FF FF FF FF 
0272   1B68 FF FF FF FF 
0272   1B6C FF FF FF FF 
0272   1B70 FF FF FF FF 
0272   1B74 FF FF FF FF 
0272   1B78 FF FF FF FF 
0272   1B7C FF FF FF FF 
0272   1B80 FF FF FF FF 
0272   1B84 FF FF FF FF 
0272   1B88 FF FF FF FF 
0272   1B8C FF FF FF FF 
0272   1B90 FF FF FF FF 
0272   1B94 FF FF FF FF 
0272   1B98 FF FF FF FF 
0272   1B9C FF FF FF FF 
0272   1BA0 FF FF FF FF 
0272   1BA4 FF FF FF FF 
0272   1BA8 FF FF FF FF 
0272   1BAC FF FF FF FF 
0272   1BB0 FF FF FF FF 
0272   1BB4 FF FF FF FF 
0272   1BB8 FF FF FF FF 
0272   1BBC FF FF FF FF 
0272   1BC0 FF FF FF FF 
0272   1BC4 FF FF FF FF 
0272   1BC8 FF FF FF FF 
0272   1BCC FF FF FF FF 
0272   1BD0 FF FF FF FF 
0272   1BD4 FF FF FF FF 
0272   1BD8 FF FF FF FF 
0272   1BDC FF FF FF FF 
0272   1BE0 FF FF FF FF 
0272   1BE4 FF FF FF FF 
0272   1BE8 FF FF FF FF 
0272   1BEC FF FF FF FF 
0272   1BF0 FF FF FF FF 
0272   1BF4 FF FF FF FF 
0272   1BF8 FF FF FF FF 
0272   1BFC FF FF FF FF 
0272   1C00 FF FF FF FF 
0272   1C04 FF FF FF FF 
0272   1C08 FF FF FF FF 
0272   1C0C FF FF FF FF 
0272   1C10 FF FF FF FF 
0272   1C14 FF FF FF FF 
0272   1C18 FF FF FF FF 
0272   1C1C FF FF FF FF 
0272   1C20 FF FF FF FF 
0272   1C24 FF FF FF FF 
0272   1C28 FF FF FF FF 
0272   1C2C FF FF FF FF 
0272   1C30 FF FF FF FF 
0272   1C34 FF FF FF FF 
0272   1C38 FF FF FF FF 
0272   1C3C FF FF FF FF 
0272   1C40 FF FF FF FF 
0272   1C44 FF FF FF FF 
0272   1C48 FF FF FF FF 
0272   1C4C FF FF FF FF 
0272   1C50 FF FF FF FF 
0272   1C54 FF FF FF FF 
0272   1C58 FF FF FF FF 
0272   1C5C FF FF FF FF 
0272   1C60 FF FF FF FF 
0272   1C64 FF FF FF FF 
0272   1C68 FF FF FF FF 
0272   1C6C FF FF FF FF 
0272   1C70 FF FF FF FF 
0272   1C74 FF FF FF FF 
0272   1C78 FF FF FF FF 
0272   1C7C FF FF FF FF 
0272   1C80 FF FF FF FF 
0272   1C84 FF FF FF FF 
0272   1C88 FF FF FF FF 
0272   1C8C FF FF FF FF 
0272   1C90 FF FF FF FF 
0272   1C94 FF FF FF FF 
0272   1C98 FF FF FF FF 
0272   1C9C FF FF FF FF 
0272   1CA0 FF FF FF FF 
0272   1CA4 FF FF FF FF 
0272   1CA8 FF FF FF FF 
0272   1CAC FF FF FF FF 
0272   1CB0 FF FF FF FF 
0272   1CB4 FF FF FF FF 
0272   1CB8 FF FF FF FF 
0272   1CBC FF FF FF FF 
0272   1CC0 FF FF FF FF 
0272   1CC4 FF FF FF FF 
0272   1CC8 FF FF FF FF 
0272   1CCC FF FF FF FF 
0272   1CD0 FF FF FF FF 
0272   1CD4 FF FF FF FF 
0272   1CD8 FF FF FF FF 
0272   1CDC FF FF FF FF 
0272   1CE0 FF FF FF FF 
0272   1CE4 FF FF FF FF 
0272   1CE8 FF FF FF FF 
0272   1CEC FF FF FF FF 
0272   1CF0 FF FF FF FF 
0272   1CF4 FF FF FF FF 
0272   1CF8 FF FF FF FF 
0272   1CFC FF FF FF FF 
0272   1D00 FF FF FF FF 
0272   1D04 FF FF FF FF 
0272   1D08 FF FF FF FF 
0272   1D0C FF FF FF FF 
0272   1D10 FF FF FF FF 
0272   1D14 FF FF FF FF 
0272   1D18 FF FF FF FF 
0272   1D1C FF FF FF FF 
0272   1D20 FF FF FF FF 
0272   1D24 FF FF FF FF 
0272   1D28 FF FF FF FF 
0272   1D2C FF FF FF FF 
0272   1D30 FF FF FF FF 
0272   1D34 FF FF FF FF 
0272   1D38 FF FF FF FF 
0272   1D3C FF FF FF FF 
0272   1D40 FF FF FF FF 
0272   1D44 FF FF FF FF 
0272   1D48 FF FF FF FF 
0272   1D4C FF FF FF FF 
0272   1D50 FF FF FF FF 
0272   1D54 FF FF FF FF 
0272   1D58 FF FF FF FF 
0272   1D5C FF FF FF FF 
0272   1D60 FF FF FF FF 
0272   1D64 FF FF FF FF 
0272   1D68 FF FF FF FF 
0272   1D6C FF FF FF FF 
0272   1D70 FF FF FF FF 
0272   1D74 FF FF FF FF 
0272   1D78 FF FF FF FF 
0272   1D7C FF FF FF FF 
0272   1D80 FF FF FF FF 
0272   1D84 FF FF FF FF 
0272   1D88 FF FF FF FF 
0272   1D8C FF FF FF FF 
0272   1D90 FF FF FF FF 
0272   1D94 FF FF FF FF 
0272   1D98 FF FF FF FF 
0272   1D9C FF FF FF FF 
0272   1DA0 FF FF FF FF 
0272   1DA4 FF FF FF FF 
0272   1DA8 FF FF FF FF 
0272   1DAC FF FF FF FF 
0272   1DB0 FF FF FF FF 
0272   1DB4 FF FF FF FF 
0272   1DB8 FF FF FF FF 
0272   1DBC FF FF FF FF 
0272   1DC0 FF FF FF FF 
0272   1DC4 FF FF FF FF 
0272   1DC8 FF FF FF FF 
0272   1DCC FF FF FF FF 
0272   1DD0 FF FF FF FF 
0272   1DD4 FF FF FF FF 
0272   1DD8 FF FF FF FF 
0272   1DDC FF FF FF FF 
0272   1DE0 FF FF FF FF 
0272   1DE4 FF FF FF FF 
0272   1DE8 FF FF FF FF 
0272   1DEC FF FF FF FF 
0272   1DF0 FF FF FF FF 
0272   1DF4 FF FF FF FF 
0272   1DF8 FF FF FF FF 
0272   1DFC FF FF FF FF 
0272   1E00 FF FF FF FF 
0272   1E04 FF FF FF FF 
0272   1E08 FF FF FF FF 
0272   1E0C FF FF FF FF 
0272   1E10 FF FF FF FF 
0272   1E14 FF FF FF FF 
0272   1E18 FF FF FF FF 
0272   1E1C FF FF FF FF 
0272   1E20 FF FF FF FF 
0272   1E24 FF FF FF FF 
0272   1E28 FF FF FF FF 
0272   1E2C FF FF FF FF 
0272   1E30 FF FF FF FF 
0272   1E34 FF FF FF FF 
0272   1E38 FF FF FF FF 
0272   1E3C FF FF FF FF 
0272   1E40 FF FF FF FF 
0272   1E44 FF FF FF FF 
0272   1E48 FF FF FF FF 
0272   1E4C FF FF FF FF 
0272   1E50 FF FF FF FF 
0272   1E54 FF FF FF FF 
0272   1E58 FF FF FF FF 
0272   1E5C FF FF FF FF 
0272   1E60 FF FF FF FF 
0272   1E64 FF FF FF FF 
0272   1E68 FF FF FF FF 
0272   1E6C FF FF FF FF 
0272   1E70 FF FF FF FF 
0272   1E74 FF FF FF FF 
0272   1E78 FF FF FF FF 
0272   1E7C FF FF FF FF 
0272   1E80 FF FF FF FF 
0272   1E84 FF FF FF FF 
0272   1E88 FF FF FF FF 
0272   1E8C FF FF FF FF 
0272   1E90 FF FF FF FF 
0272   1E94 FF FF FF FF 
0272   1E98 FF FF FF FF 
0272   1E9C FF FF FF FF 
0272   1EA0 FF FF FF FF 
0272   1EA4 FF FF FF FF 
0272   1EA8 FF FF FF FF 
0272   1EAC FF FF FF FF 
0272   1EB0 FF FF FF FF 
0272   1EB4 FF FF FF FF 
0272   1EB8 FF FF FF FF 
0272   1EBC FF FF FF FF 
0272   1EC0 FF FF FF FF 
0272   1EC4 FF FF FF FF 
0272   1EC8 FF FF FF FF 
0272   1ECC FF FF FF FF 
0272   1ED0 FF FF FF FF 
0272   1ED4 FF FF FF FF 
0272   1ED8 FF FF FF FF 
0272   1EDC FF FF FF FF 
0272   1EE0 FF FF FF FF 
0272   1EE4 FF FF FF FF 
0272   1EE8 FF FF FF FF 
0272   1EEC FF FF FF FF 
0272   1EF0 FF FF FF FF 
0272   1EF4 FF FF FF FF 
0272   1EF8 FF FF FF FF 
0272   1EFC FF FF FF FF 
0272   1F00 FF FF FF FF 
0272   1F04 FF FF FF FF 
0272   1F08 FF FF FF FF 
0272   1F0C FF FF FF FF 
0272   1F10 FF FF FF FF 
0272   1F14 FF FF FF FF 
0272   1F18 FF FF FF FF 
0272   1F1C FF FF FF FF 
0272   1F20 FF FF FF FF 
0272   1F24 FF FF FF FF 
0272   1F28 FF FF FF FF 
0272   1F2C FF FF FF FF 
0272   1F30 FF FF FF FF 
0272   1F34 FF FF FF FF 
0272   1F38 FF FF FF FF 
0272   1F3C FF FF FF FF 
0272   1F40 FF FF FF FF 
0272   1F44 FF FF FF FF 
0272   1F48 FF FF FF FF 
0272   1F4C FF FF FF FF 
0272   1F50 FF FF FF FF 
0272   1F54 FF FF FF FF 
0272   1F58 FF FF FF FF 
0272   1F5C FF FF FF FF 
0272   1F60 FF FF FF FF 
0272   1F64 FF FF FF FF 
0272   1F68 FF FF FF FF 
0272   1F6C FF FF FF FF 
0272   1F70 FF FF FF FF 
0272   1F74 FF FF FF FF 
0272   1F78 FF FF FF FF 
0272   1F7C FF FF FF FF 
0272   1F80 FF FF FF FF 
0272   1F84 FF FF FF FF 
0272   1F88 FF FF FF FF 
0272   1F8C FF FF FF FF 
0272   1F90 FF FF FF FF 
0272   1F94 FF FF FF FF 
0272   1F98 FF FF FF FF 
0272   1F9C FF FF FF FF 
0272   1FA0 FF FF FF FF 
0272   1FA4 FF FF FF FF 
0272   1FA8 FF FF FF FF 
0272   1FAC FF FF FF FF 
0272   1FB0 FF FF FF FF 
0272   1FB4 FF FF FF FF 
0272   1FB8 FF FF FF FF 
0272   1FBC FF FF FF FF 
0272   1FC0 FF FF FF FF 
0272   1FC4 FF FF FF FF 
0272   1FC8 FF FF FF FF 
0272   1FCC FF FF FF FF 
0272   1FD0 FF FF FF FF 
0272   1FD4 FF FF FF FF 
0272   1FD8 FF FF FF FF 
0272   1FDC FF FF FF FF 
0272   1FE0 FF FF FF FF 
0272   1FE4 FF FF FF FF 
0272   1FE8 FF FF FF FF 
0272   1FEC FF FF FF FF 
0272   1FF0 FF FF FF FF 
0272   1FF4 FF FF FF FF 
0272   1FF8 FF FF FF FF 
0272   1FFC FF FF FF FF 
0272   2000 FF FF FF FF 
0272   2004 FF FF FF FF 
0272   2008 FF FF FF FF 
0272   200C FF FF FF FF 
0272   2010 FF FF FF FF 
0272   2014 FF FF FF FF 
0272   2018 FF FF FF FF 
0272   201C FF FF FF FF 
0272   2020 FF FF FF FF 
0272   2024 FF FF FF FF 
0272   2028 FF FF FF FF 
0272   202C FF FF FF FF 
0272   2030 FF FF FF FF 
0272   2034 FF FF FF FF 
0272   2038 FF FF FF FF 
0272   203C FF FF FF FF 
0272   2040 FF FF FF FF 
0272   2044 FF FF FF FF 
0272   2048 FF FF FF FF 
0272   204C FF FF FF FF 
0272   2050 FF FF FF FF 
0272   2054 FF FF FF FF 
0272   2058 FF FF FF FF 
0272   205C FF FF FF FF 
0272   2060 FF FF FF FF 
0272   2064 FF FF FF FF 
0272   2068 FF FF FF FF 
0272   206C FF FF FF FF 
0272   2070 FF FF FF FF 
0272   2074 FF FF FF FF 
0272   2078 FF FF FF FF 
0272   207C FF FF FF FF 
0272   2080 FF FF FF FF 
0272   2084 FF FF FF FF 
0272   2088 FF FF FF FF 
0272   208C FF FF FF FF 
0272   2090 FF FF FF FF 
0272   2094 FF FF FF FF 
0272   2098 FF FF FF FF 
0272   209C FF FF FF FF 
0272   20A0 FF FF FF FF 
0272   20A4 FF FF FF FF 
0272   20A8 FF FF FF FF 
0272   20AC FF FF FF FF 
0272   20B0 FF FF FF FF 
0272   20B4 FF FF FF FF 
0272   20B8 FF FF FF FF 
0272   20BC FF FF FF FF 
0272   20C0 FF FF FF FF 
0272   20C4 FF FF FF FF 
0272   20C8 FF FF FF FF 
0272   20CC FF FF FF FF 
0272   20D0 FF FF FF FF 
0272   20D4 FF FF FF FF 
0272   20D8 FF FF FF FF 
0272   20DC FF FF FF FF 
0272   20E0 FF FF FF FF 
0272   20E4 FF FF FF FF 
0272   20E8 FF FF FF FF 
0272   20EC FF FF FF FF 
0272   20F0 FF FF FF FF 
0272   20F4 FF FF FF FF 
0272   20F8 FF FF FF FF 
0272   20FC FF FF FF FF 
0272   2100 FF FF FF FF 
0272   2104 FF FF FF FF 
0272   2108 FF FF FF FF 
0272   210C FF FF FF FF 
0272   2110 FF FF FF FF 
0272   2114 FF FF FF FF 
0272   2118 FF FF FF FF 
0272   211C FF FF FF FF 
0272   2120 FF FF FF FF 
0272   2124 FF FF FF FF 
0272   2128 FF FF FF FF 
0272   212C FF FF FF FF 
0272   2130 FF FF FF FF 
0272   2134 FF FF FF FF 
0272   2138 FF FF FF FF 
0272   213C FF FF FF FF 
0272   2140 FF FF FF FF 
0273   2144             board2:		
0274   2144             
0275   2144             
0276   2144             .end
0277   2144             
tasm: Number of errors = 0
