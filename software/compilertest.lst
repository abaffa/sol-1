0001   0000             .include "kernel.exp"
0001+  0000             PROC_TEXT_ORG    .EQU  $0400
0002+  0000             sys_bkpt         .EQU  $0000
0003+  0000             sys_rtc          .EQU  $0001
0004+  0000             sys_IDE          .EQU  $0002
0005+  0000             sys_io           .EQU  $0003
0006+  0000             sys_fileio       .EQU  $0004
0007+  0000             sys_fork         .EQU  $0005
0008+  0000             sys_list         .EQU  $0006
0009+  0000             sys_datetime     .EQU  $0007
0010+  0000             sys_reboot       .EQU  $0008
0011+  0000             sys_pauseproc    .EQU  $0009
0012+  0000             sys_resumeproc   .EQU  $000a
0013+  0000             sys_terminate_proc .EQU  $000b
0014+  0000             sys_system       .EQU  $000c
0015+  0000             sys_boot_install .EQU  $000d
0002   0400             .org PROC_TEXT_ORG
0003   0400             
0004   0400             ; **** TEXT SEGMENT ****
0005   0400             
0006   0400             main:
0007   0400 10 00 00    	mov a, 0
0008   0403 29 4D 04    	mov b, [v1]
0009   0406 D7          	push a
0010   0407 11          	mov a, b
0011   0408 29 4F 04    	mov b, [v2]
0012   040B D7          	push a
0013   040C 11          	mov a, b
0014   040D 29 51 04    	mov b, [v3]
0015   0410 AC          	mul a, b
0016   0411 E4          	pop a
0017   0412 54          	add a, b
0018   0413 27          	mov b, a
0019   0414 E4          	pop a
0020   0415 FD 42 47 04 	mov [x], b
0021   0419 10 00 00    	mov a, 0
0022   041C 29 47 04    	mov b, [x]
0023   041F D7          	push a
0024   0420 11          	mov a, b
0025   0421 26 01 00    	mov b, 1
0026   0424 54          	add a, b
0027   0425 27          	mov b, a
0028   0426 E4          	pop a
0029   0427 FD 42 49 04 	mov [y], b
0030   042B 10 00 00    	mov a, 0
0031   042E 29 49 04    	mov b, [y]
0032   0431 D7          	push a
0033   0432 11          	mov a, b
0034   0433 26 02 00    	mov b, 2
0035   0436 AC          	mul a, b
0036   0437 E4          	pop a
0037   0438 FD 42 4B 04 	mov [z], b
0038   043C             
0039   043C             
0040   043C 14 4B 04    	mov a, [z]
0041   043F 07 60 04    	call print_u16d
0042   0442 07 53 04    	call printnl
0043   0445             
0044   0445             
0045   0445 05 0B       	syscall sys_terminate_proc
0046   0447             
0047   0447             ; **** DATA SEGMENT ****
0048   0447             
0049   0447 0B 00       x: .dw 11
0050   0449 16 00       y: .dw 22
0051   044B 21 00       z: .dw 33
0052   044D 01 00       v1: .dw 1
0053   044F 02 00       v2: .dw 2
0054   0451 03 00       v3: .dw 3
0055   0453             
0056   0453             
0057   0453             printnl:
0058   0453 D7          	push a
0059   0454 10 00 0A    	mov a, $0A00
0060   0457 05 03       	syscall sys_io
0061   0459 10 00 0D    	mov a, $0D00
0062   045C 05 03       	syscall sys_io
0063   045E E4          	pop a
0064   045F 09          	ret
0065   0460             
0066   0460             print_u16d:
0067   0460 D7          	push a
0068   0461 D8          	push b
0069   0462 26 10 27    	mov b, 10000
0070   0465 AE          	div a, b			; get 10000 coeff.
0071   0466 07 8C 04    	call print_zero_or_space
0072   0469 11          	mov a, b
0073   046A 26 E8 03    	mov b, 1000
0074   046D AE          	div a, b			; get 10000 coeff.
0075   046E 07 8C 04    	call print_zero_or_space
0076   0471 11          	mov a, b
0077   0472 26 64 00    	mov b, 100
0078   0475 AE          	div a, b
0079   0476 07 8C 04    	call print_zero_or_space
0080   0479 11          	mov a, b
0081   047A 26 0A 00    	mov b, 10
0082   047D AE          	div a, b
0083   047E 07 8C 04    	call print_zero_or_space
0084   0481 11          	mov a, b
0085   0482 6A 30       	add al, $30
0086   0484 23          	mov ah, al
0087   0485 19 00       	mov al, 0
0088   0487 05 03       	syscall sys_io	; print coeff
0089   0489 E5          	pop b
0090   048A E4          	pop a
0091   048B 09          	ret
0092   048C             print_zero_or_space:
0093   048C             	; cmp a, 0
0094   048C             	; jne print_number
0095   048C             	; mov ah, $20
0096   048C             	; call putchar
0097   048C             	; ret
0098   048C             print_number:
0099   048C 6A 30       	add al, $30
0100   048E 23          	mov ah, al
0101   048F 07 93 04    	call putchar
0102   0492 09          	ret
0103   0493             
0104   0493             
0105   0493             putchar:
0106   0493 D7          	push a
0107   0494 19 00       	mov al, 0
0108   0496 05 03       	syscall sys_io			; char in AH
0109   0498 E4          	pop a
0110   0499 09          	ret
0111   049A             		
0112   049A             
0113   049A             
0114   049A             .end
tasm: Number of errors = 0
